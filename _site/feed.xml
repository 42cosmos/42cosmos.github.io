<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>빈둥빈둥 공부 블로그</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 09 Feb 2020 16:45:22 +0900</pubDate>
    <lastBuildDate>Sun, 09 Feb 2020 16:45:22 +0900</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>

    
      <item>
        <title>[1] Understanding of Database</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.inflearn.com/course/SQL-DB-MYSQL-파이썬-데이터분석&quot;&gt;SQL/DB(MySQL) 기본부터 파이썬/데이터분석 활용까지!&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;relational-database-management-system&quot;&gt;Relational DataBase Management System&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;reate &lt;strong&gt;R&lt;/strong&gt;ead &lt;strong&gt;U&lt;/strong&gt;pdate &lt;strong&gt;D&lt;/strong&gt;elete&lt;/p&gt;

&lt;p&gt;table - 표&lt;/p&gt;

&lt;p&gt;row, recod - 행 (데이터 자체)&lt;/p&gt;

&lt;p&gt;column - 열 (데이터 구조)&lt;/p&gt;

&lt;p&gt;####&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;pymysql.connect() 메소드를 사용하여 MySQL에 연결
    &lt;ul&gt;
      &lt;li&gt;호스트명, 포트, 로그인, 암호, 접속할 DB 등을 파라미터로 지정&lt;/li&gt;
      &lt;li&gt;주요 파라미터
        &lt;ul&gt;
          &lt;li&gt;host : 접속할 mysql server 주소&lt;/li&gt;
          &lt;li&gt;port : 접속할 mysql server 의 포트 번호&lt;/li&gt;
          &lt;li&gt;user : mysql ID&lt;/li&gt;
          &lt;li&gt;passwd : mysql ID의 암호&lt;/li&gt;
          &lt;li&gt;db : 접속할 데이터베이스&lt;/li&gt;
          &lt;li&gt;charset=’utf8’ : mysql에서 select하여 데이타를 가져올 때 한글이 깨질 수 있으므로 연결 설정에 넣어줌&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;db = pymysql.connect(host='localhost', port=3306, user='root', passwd='pwd', db='name', charset='utf8')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Tue, 28 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/database/2020/01/28/5-Database-101/</link>
        <guid isPermaLink="true">http://localhost:4000/study/database/2020/01/28/5-Database-101/</guid>
      </item>
    
      <item>
        <title>conda 가상환경 jupyter - NoModuleError 오류</title>
        <description>&lt;h3 id=&quot;오류&quot;&gt;오류&lt;/h3&gt;

&lt;p&gt;기실 멀쩡히 돌아가는 화면 보다 오류를 더 많이 본다! 하하&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/images/DB_nomodule_in_jupyter0.png&quot; alt=&quot;DB_nomodule_in_jupyter0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DB_nomodule_in_jupyter1.png&quot; alt=&quot;DB_nomodule_in_jupyter1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DB_nomodule_in_jupyter2.png&quot; alt=&quot;DB_nomodule_in_jupyter2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;where pymysql&lt;/code&gt; 을 하면 찾을 수 없다고 하면서… 설치하려니까 &lt;code class=&quot;highlighter-rouge&quot;&gt;already install&lt;/code&gt; 를 보여줬다. 설치되어있는 패키지도 확인 했는데… 분명히 있는데…&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;재부팅&lt;/li&gt;
  &lt;li&gt;설치 확인&lt;/li&gt;
  &lt;li&gt;삭제 후 재설치&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;모두 했는데 안 된다는 건… 역시 내 문제라는 이야기다.&lt;/p&gt;

&lt;h3 id=&quot;해결&quot;&gt;해결&lt;/h3&gt;

&lt;p&gt;전제조건부터 잘못 되었다. 터미널에서 가상환경을 열고 ! 주피터를 켜면 ! 그게 가상환경과 주피터의 만남…✨이라는 조건을 넣고 들어가서 뭐든 안 됐던 거다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DB_nomodule_in_jupyter3.png&quot; alt=&quot;DB_nomodule_in_jupyter3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DB_nomodule_in_jupyter4.png&quot; alt=&quot;DB_nomodule_in_jupyter4&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python -m ipykernel install --user --name=envs'_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m ipykernel install --user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;터미널 창에서 입력해준 후에… 주피터에서 새로 파일을 만들면! 짜잔&lt;/p&gt;

&lt;p&gt;1번 방법으로 하면 이렇게 나온다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/DB_nomodule_in_jupyter5.png&quot; alt=&quot;DB_nomodule_in_jupyter5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h5 id=&quot;첫-번째-해결책-커널-지우는-법&quot;&gt;첫 번째 해결책 커널 지우는 법&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jupyter kernelspec uninstall Kernel_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Tue, 28 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/database/2020/01/28/%E1%84%80%E1%85%A1%E1%84%89%E1%85%A1%E1%86%BC%E1%84%92%E1%85%AA%E1%86%AB%E1%84%80%E1%85%A7%E1%86%BC-%E1%84%8C%E1%85%AE%E1%84%91%E1%85%B5%E1%84%90%E1%85%A5-%E1%84%8B%E1%85%A9%E1%84%85%E1%85%B2/</link>
        <guid isPermaLink="true">http://localhost:4000/study/database/2020/01/28/%E1%84%80%E1%85%A1%E1%84%89%E1%85%A1%E1%86%BC%E1%84%92%E1%85%AA%E1%86%AB%E1%84%80%E1%85%A7%E1%86%BC-%E1%84%8C%E1%85%AE%E1%84%91%E1%85%B5%E1%84%90%E1%85%A5-%E1%84%8B%E1%85%A9%E1%84%85%E1%85%B2/</guid>
      </item>
    
      <item>
        <title>[2] Principle of GIT - GIT from HELL</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.inflearn.com/course/지옥에서-온-git#curriculum&quot;&gt;지옥에서 온 GIT&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;git&quot;&gt;GIT&lt;/h3&gt;

&lt;p&gt;incredibly COMPLEX&lt;/p&gt;

&lt;h4 id=&quot;version&quot;&gt;Version&lt;/h4&gt;

&lt;p&gt;단위 &amp;gt; 작업의 완결 상태 - 의미있는 변화 == 버전&lt;/p&gt;

&lt;p&gt;효용성&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;차이점 과거 시점 내용&lt;/li&gt;
  &lt;li&gt;과거로의 회귀&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;git-stage-area&quot;&gt;Git stage area&lt;/h4&gt;

&lt;p&gt;git add 과정을 통해 commit 하고싶은 파일만 하게끔 함 : add 한 파일만이 commit 됨 - 선택적 commit이 가능함&lt;/p&gt;

&lt;p&gt;add 된 파일의 commit 대기 장소 … 대합실&lt;/p&gt;

&lt;h4 id=&quot;git-diff&quot;&gt;git diff&lt;/h4&gt;

&lt;p&gt;( commit ) 버전 간의 소스코드 차이&lt;/p&gt;

&lt;h4 id=&quot;회귀&quot;&gt;회귀&lt;/h4&gt;

&lt;h5 id=&quot;reset&quot;&gt;reset&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git reset 'commit id' --hard
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;옵션은 hard, soft 등 존재&lt;/p&gt;

&lt;p&gt;해당 아이디가 가장 최신이 됨&lt;/p&gt;

&lt;p&gt;버려진 파일들은 어딘가에 남아 복구할 수 있음. &lt;strong&gt;공유 이후의 reset X&lt;/strong&gt;&lt;/p&gt;

&lt;h5 id=&quot;revert&quot;&gt;revert&lt;/h5&gt;

&lt;p&gt;commit을 취소하면서 새로운 버전을 만듦&lt;/p&gt;

&lt;h3 id=&quot;원리&quot;&gt;원리&lt;/h3&gt;

&lt;h4 id=&quot;add-원리&quot;&gt;add 원리&lt;/h4&gt;

&lt;h5 id=&quot;gistory&quot;&gt;gistory&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install gistory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치 후 .git 폴더 진입 &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;gistory&lt;/code&gt; &amp;gt; 웹 브라우저에서 이미지 내 해당 주소로 진입&lt;/p&gt;

&lt;p&gt;index 내 파일이 add 한 오브젝트 (객체)&lt;/p&gt;

&lt;p&gt;git은 파일 저장 시 파일의 이름이 달라도 내용이 같으면 같은 오브젝트로 저장한다.&lt;/p&gt;

&lt;h5 id=&quot;objects&quot;&gt;Objects&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;파일 내용 함양 -  blob&lt;/li&gt;
  &lt;li&gt;어떤 디렉토리의 파일명과 그 파일내용-blob 을 담고있는 것 - tree&lt;/li&gt;
  &lt;li&gt;commit&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;object-파일명의-원리&quot;&gt;Object 파일명의 원리&lt;/h5&gt;

&lt;p&gt;저장 파일은 SHA1로 해쉬값을 생성&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;78981922613b2afb6025042ff6bd878ac1994e85&lt;/code&gt; : 해쉬값&lt;/p&gt;

&lt;p&gt;가장 앞 2자리 78을 이름삼아 디렉토리 생성, 981922613b2afb6025042ff6bd878ac1994e85을 이름으로 파일에 내용을 저장&lt;/p&gt;

&lt;h4 id=&quot;commit-원리&quot;&gt;commit 원리&lt;/h4&gt;

&lt;p&gt;commit msg도 내용처럼 object 안에 포함됨&lt;/p&gt;

&lt;p&gt;:: Parent - 이전 commit이 누구인가?&lt;/p&gt;

&lt;p&gt;:: Tree - commit이 일어난 시점에의 작업 dir에 있는 파일 이름과 내용  - 각 커밋은 트리를 가지고 있어서 그 커밋이 만들어진 시점의 파일의 이름과 내용이 담겨있음 (해당 트리는 파일 이름과 내용이 링크가 되어있기 때문에,) 버전에 적혀있는 트리를 통해 버전이 만들어진 시점 » 프로젝트 폴더에 대한 상태를 알아냄 (aka snapshot)&lt;/p&gt;

&lt;h4 id=&quot;status-원리&quot;&gt;status 원리&lt;/h4&gt;

&lt;p&gt;index 와 가장 최신 commit 내용 일치 == 현재 커밋할 것 없음  » 해쉬값의 변화로 인한 status 알림!이라고 짐작할 수 있음&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;TBC&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/git/2020/01/24/2-Git-Study/</link>
        <guid isPermaLink="true">http://localhost:4000/study/git/2020/01/24/2-Git-Study/</guid>
      </item>
    
      <item>
        <title>[6] Selenium XPATH 이해하기</title>
        <description>&lt;h3 id=&quot;xml-특정-요소나-속성에-접근키-위한-경로-지정-언어&quot;&gt;XML 특정 요소나 속성에 접근키 위한 경로 지정 언어&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;태그 및 속성 선택&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;crawling_data = soup.find('h1')
crawling_data = soup.find(id='title')
crawling_data = soup.find('p', class_='cssstyle') crawling_data = soup.find('p', attrs = {'align': 'center'})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CSS Selector&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;crawling_data = soup.select('html &amp;gt; title')
crawling_data = soup.select('div.article_view')
crawling_data = soup.select('#harmonyContainer')
crawling_data = soup.select('div#mArticle div#harmonyContainer')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;XPath&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;bs 미지원 / Selenium or PhantomJS 지원&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://wkdtjsgur100.github.io/selenium-xpath/&quot;&gt;xpath 문법&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 문서 내 태그 검색
title = driver.find_element_by_xpath(&quot;//title&quot;)
   
# 절대 경로
title = driver.find_element_by_xpath(&quot;/html/head/title&quot;)
   
# html 태그 내 검색
title = driver.find_element_by_xpath(&quot;/html//title&quot;)
   
# soup.find('h3', attrs = {'class' : 'tit_s'})
title_content = driver.find_element_by_xpath(&quot;//h3[@class='tit_view']&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Tue, 21 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/21/6-Selenium-Understanding-of-XPATH/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/21/6-Selenium-Understanding-of-XPATH/</guid>
      </item>
    
      <item>
        <title>[5] Selenium Practice</title>
        <description>&lt;h3 id=&quot;네이버-기사-댓글-크롤링&quot;&gt;네이버 기사 댓글 크롤링&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;options.add_argument('headless')&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;헤드리스 옵션을 넣을 때와 그렇지 않을 때 가져오는 데이터의 차이가 나타났다. 왜? 저 한 줄을 고작 주석처리 할 뿐이었는데 어떻게 고쳐야하는지 모르겠다.&lt;/p&gt;

&lt;p&gt;headless 일 때 가져오는 댓글의 수 겨우 10개. 없을 때는 내가 원하는 만큼 잘 가져온다. … 음… 도대체 왜?&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/21/5-Selenium-practice/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/21/5-Selenium-practice/</guid>
      </item>
    
      <item>
        <title>[5] Scrapy &amp; Selenium wrap up!</title>
        <description>&lt;h3 id=&quot;정리&quot;&gt;정리&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;태그 및 속성으로 선택&lt;/li&gt;
  &lt;li&gt;CSS Selector 선택&lt;/li&gt;
  &lt;li&gt;XPATH 선택&lt;/li&gt;
  &lt;li&gt;데이터 후처리
    &lt;ul&gt;
      &lt;li&gt;파이썬 문자열 함수 / 정규표현식&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;다양한-크롤링-기술&quot;&gt;다양한 크롤링 기술&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Open API&lt;/li&gt;
  &lt;li&gt;로그인 필요한 웹페이지 크롤링
    &lt;ul&gt;
      &lt;li&gt;다양한 환경에서 가능 :&lt;/li&gt;
      &lt;li&gt;Selenium 브라우저 자체 제어&lt;/li&gt;
      &lt;li&gt;Headless Chrome&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;업무-자동화-기술&quot;&gt;업무 자동화 기술&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;크롤링 데이터 기반
    &lt;ul&gt;
      &lt;li&gt;엑셀&lt;/li&gt;
      &lt;li&gt;구글 쉬트&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;풀스택과-데이터-과학-기본&quot;&gt;풀스택과 데이터 과학 기본&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;데이터 수집&lt;/li&gt;
  &lt;li&gt;데이터 저장&lt;/li&gt;
  &lt;li&gt;데이터 분석&lt;/li&gt;
  &lt;li&gt;데이터 시각화 - 서비스 개발 (insight)&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 21 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/21/5-Scrapy-&-Selenium-warp-up/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/21/5-Scrapy-&-Selenium-warp-up/</guid>
      </item>
    
      <item>
        <title>[4] Scrapy Practices</title>
        <description>&lt;h3 id=&quot;others&quot;&gt;others&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;필드명 순서의 랜덤 : DB 안에 넣는 데이터라 크게 신경쓰지 않아도 됨. 그럼에도 불구하고 원하는 순서가 있다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.py&lt;/code&gt; 안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;FEED_EXPORT_FIELDS = ['a', 'b', 'c'] &lt;/code&gt; 선언&lt;/li&gt;
  &lt;li&gt;동시 크롤링 횟수 조정 
 &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.py&lt;/code&gt; 안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;#CONCURRENT_REQUESTS = n&lt;/code&gt;  주석 해제 후 숫자 변경 &amp;gt; 단, 속도 저하&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;데이터-후처리&quot;&gt;데이터 후처리&lt;/h3&gt;

&lt;p&gt;정규표현식&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body_as_unicode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'items'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;/S+&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;json-데이터-크롤링-처리&quot;&gt;JSON 데이터 크롤링 처리&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body_as_unicode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'items'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Naveropenapiitem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'link'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'link'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;loads()&lt;/code&gt;함수로 가져오면서 &lt;code class=&quot;highlighter-rouge&quot;&gt;body_as_unicode()&lt;/code&gt;처리&lt;/p&gt;

&lt;p&gt;for문으로 json 데이터를 한 개씩 쪼개서 입력 가능&lt;/p&gt;

&lt;h3 id=&quot;naver-openapi---요청변수&quot;&gt;Naver openapi - 요청변수&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;words_var&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;amp;display=100&amp;amp;start='&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header_var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘&amp;amp;display=100&amp;amp;start=’ + str(index*100 + 1)  처럼 작성 가능 »&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;0 &amp;gt; 1부터 100개&lt;/li&gt;
  &lt;li&gt;1 &amp;gt; 101부터 100개&lt;/li&gt;
  &lt;li&gt;2 &amp;gt; 201부터 100개&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;숙제&quot;&gt;숙제&lt;/h3&gt;

&lt;p&gt;&amp;lt;b&amp;gt;,\n, \t … 등의 태그 없애기&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/21/4-Scrapy-Understanding-of-Scrapy/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/21/4-Scrapy-Understanding-of-Scrapy/</guid>
      </item>
    
      <item>
        <title>[3] Scrapy OOP for Scrapy</title>
        <description>&lt;h3 id=&quot;understanding-of-oop-for-scrapy&quot;&gt;Understanding of OOP for Scrapy&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;사물 설계도 - class&lt;/li&gt;
  &lt;li&gt;설계도 기반 사물1 객체 생성 - object&lt;/li&gt;
  &lt;li&gt;사물1 객체 기능 호출
    &lt;ul&gt;
      &lt;li&gt;attribute : 사물 1 객체의 변수&lt;/li&gt;
      &lt;li&gt;method : 사물 1 객체의 함수 (e.g. 사물1.method())&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;객체-생성&quot;&gt;객체 생성&lt;/h4&gt;

&lt;p&gt;객체이름 = 클래스이름()&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;객체-기능-호출&quot;&gt;객체 기능 호출&lt;/h4&gt;

&lt;p&gt;객체이름.method = 값&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;객체가 가진 값은 공유되지 않음.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;고찰&quot;&gt;고찰&lt;/h3&gt;

&lt;p&gt;인간 해부도는 똑같지만 마음과 생각은 모두 다르다고 생각해보자&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/21/3-Scrapy-Object-Oriented-Programming/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/21/3-Scrapy-Object-Oriented-Programming/</guid>
      </item>
    
      <item>
        <title>[4] Selenium Understanding of static web page</title>
        <description>&lt;h3 id=&quot;ajax과-같은-동적-웹페이지-데이터-로딩&quot;&gt;Ajax과 같은 동적 웹페이지 데이터 로딩&lt;/h3&gt;

&lt;p&gt;“웹페이지 새로고침 X &amp;gt; 특정 부분만 변경”&lt;/p&gt;

&lt;p&gt;특정 부분을 동적으로 가져오고, 해당 부분만 변경 시 그 부분만 변화 == 댓글 등&lt;/p&gt;

&lt;p&gt;웹브라우저에 전부 로딩 시킨 후 가져올 수 있음&lt;/p&gt;

&lt;h3 id=&quot;동적-데이터-특징-필요조건&quot;&gt;동적 데이터 특징-필요조건&lt;/h3&gt;

&lt;p&gt;전체 html 파일 로딩과의 시간차 발생 &amp;gt; 해당 데이터를 불러올 때까지 기다리는 함수(클래스, 객체) 필요 &amp;amp;&amp;amp; 줄여진 댓글창 ‘더보기’ &amp;gt; 원하는 댓글 수보다 댓글이 없을 때 해야할 기능&lt;/p&gt;

&lt;h4 id=&quot;특정-태그-일정-시간-기다리기&quot;&gt;특정 태그 일정 시간 기다리기&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium.webdriver.support.ui&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebDriverWait&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium.webdriver.support&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expected_conditions&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EC&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebDriverWait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;until&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;presence_of_element_located&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;alex-area&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(By.ID, “alex-area”) : ( 기다릴 객체, “객체 이름”)&lt;/p&gt;

&lt;h4 id=&quot;특정-태그-존재-여부-확인-기능&quot;&gt;특정 태그 존재 여부 확인 기능&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium.webdriver.common.by&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;By.CLASS_NAME: class name&lt;/li&gt;
  &lt;li&gt;By.CSS_SELECTOR: css selector&lt;/li&gt;
  &lt;li&gt;By.ID: id&lt;/li&gt;
  &lt;li&gt;By.NAME: name&lt;/li&gt;
  &lt;li&gt;By.TAG_NAME: tag name&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium.common.exceptions&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeoutException&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebDriverWait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;until&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;presence_of_element_located&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CSS_SELECTOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;more_button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_css_selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;more_button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeoutException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;키보드-마우스-동작-자동화-actionchains&quot;&gt;키보드-마우스 동작 자동화 (ActionChains)&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;actions = webdriver.ActionChains(driver)&lt;/code&gt; : 변수 선언 후 정적 데이터(버튼)를 갖고 있는 변수를 &lt;code class=&quot;highlighter-rouge&quot;&gt;actions.click(var_name)&lt;/code&gt; 클릭 함수 내 인자값으로 삽입 &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;actions.perform()&lt;/code&gt; 삽입이 반드시 필요함&lt;/p&gt;

&lt;p&gt;== &lt;code class=&quot;highlighter-rouge&quot;&gt;webdriver.ActionChains(driver).click(var_name).perform()&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;브라우저-내에서-pause&quot;&gt;브라우저 내에서 pause&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium.webdriver.support.ui&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebDriverWait&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium.common.exceptions&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TimeoutException&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;TimeoutException은 WebDriverWait를 함수로 기다릴 때 일정 시간이 지났는데도 태그가 나타나지 않을 때 (예외 상황)&lt;/p&gt;

</description>
        <pubDate>Mon, 20 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/20/4-Selenium-understanding-of-static-web-page/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/20/4-Selenium-understanding-of-static-web-page/</guid>
      </item>
    
      <item>
        <title>[3] Selenium PhantomJS &amp; Headless Chrome</title>
        <description>&lt;h3 id=&quot;phantom-js&quot;&gt;Phantom JS&lt;/h3&gt;

&lt;p&gt;화&lt;/p&gt;

&lt;p&gt;면 없이 실행하는 프로그램 - Web testing &amp;gt; 시간이 단축되지는 않기에 경우에 따라 선택적 사용이 필요&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;터미널 환경에서 동작하는 크롤러에게 권장&lt;/li&gt;
  &lt;li&gt;최신 셀레니움은 지원을 하지 않는 상태&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;* 기존 부분 &lt;code class=&quot;highlighter-rouge&quot;&gt;webdriver.Chrome('*')&lt;/code&gt; 만 변경&lt;/p&gt;

&lt;p&gt;&lt;em&gt;아예 안 됨!&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;headless-chrome&quot;&gt;Headless Chrome&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'headless'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;: PhantomJS와 유사한 기술로 크롬브라우저 기능으로 개발됨&lt;/p&gt;

&lt;p&gt;* 상동&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;c_options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ChromeOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c_options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'headless'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;coptions.add_argument('window-size=1920x1080')&lt;/code&gt; : 웹 브라우저 사이즈 지정&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;coptions.add_argument('disable-gpu')&lt;/code&gt; : 그래픽카드 사용 안 함&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;coptions.add_argument('User-Agent: ~~')&lt;/code&gt; : 서버 요청 시 헤더 재 구성&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;coptions.add_argument('lang=koKR')&lt;/code&gt; : 사용자 언어&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/20/3-Selenium-PhantomJS/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/20/3-Selenium-PhantomJS/</guid>
      </item>
    
      <item>
        <title>사담</title>
        <description>&lt;h3 id=&quot;title&quot;&gt;title&lt;/h3&gt;

&lt;p&gt;티스토리를 아직도 다 옮기지 못했다.&lt;/p&gt;

&lt;p&gt;이 블로그 수정사안도 계획은 다 짜 놨는데… 시작을 결정 못 했다.&lt;/p&gt;

&lt;p&gt;카테고리가 제일 골머리 썩을 거 같은 이 예감&lt;/p&gt;

</description>
        <pubDate>Sun, 19 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/chat/2020/01/19/%E1%84%89%E1%85%A1%E1%84%83%E1%85%A1%E1%86%B7/</link>
        <guid isPermaLink="true">http://localhost:4000/chat/2020/01/19/%E1%84%89%E1%85%A1%E1%84%83%E1%85%A1%E1%86%B7/</guid>
      </item>
    
      <item>
        <title>[2] Selenium 기본</title>
        <description>&lt;h3 id=&quot;selenium&quot;&gt;Selenium&lt;/h3&gt;

&lt;h4 id=&quot;with-chrome-browser&quot;&gt;with Chrome browser&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium.webdriver.common.keys&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Keys&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;chd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'경로/경로/'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'url'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;get-returns-using-specific-function&quot;&gt;get Returns using specific function&lt;/h4&gt;

&lt;p&gt;main func&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find_element_by_name('w')&lt;/code&gt; : 최초 발견한 name 으로 가져오기&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find_elements_by_name('w')&lt;/code&gt; : 동일한 name을 리스트형으로 가져오기&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find_elements_by_id&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find_elements_by_tag_name&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find_elements_by_class_name&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find_elements_by_css_selector&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find_elements_by_xpath&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;clear()&lt;/code&gt; : clear input txt&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;send_keys(kw)&lt;/code&gt; : send keyboard input&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Keys.RETURN == enter&lt;/li&gt;
      &lt;li&gt;dir(Keys) : 키에 대응되는 이름 찾기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;assert 로 driver.page_source에서 특정 키워드 확인&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assert &quot;No results found.&quot; not in driver.page_source&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;time.sleep() 일정시간 브라우저 내용 확인&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;driver.quit()&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;요소-내용&quot;&gt;요소 내용&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;head : get_attribute(‘text’)
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;head_title = driver.find_element_by_css_selector('head &amp;gt; title').get_attribute('text')&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;body : text
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;title = driver.find_element_by_css_selector('tag.class_name').text&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 19 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/19/2-Selenium-101/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/19/2-Selenium-101/</guid>
      </item>
    
      <item>
        <title>[1] Selenium 크롤링 기본</title>
        <description>&lt;h4 id=&quot;웹페이지-가져오기&quot;&gt;웹페이지 가져오기&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;requests.get('url')&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;웹페이지-파싱하기&quot;&gt;웹페이지 파싱하기&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;파싱 == 문자열 의미 분석&lt;/li&gt;
  &lt;li&gt;bs 라이브러리 사용
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;'BeautifulSoup('var', 'html.parser)'&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;데이터-추출&quot;&gt;데이터 추출&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;soup.find()&lt;/code&gt; 함수로 원하는 부분 지정&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.get_text()&lt;/code&gt; 함수로 추출 부분 가져옴&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;필요 데이터 추출 방법&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;태그와 속성으로 선택&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.find('tag')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.find(id='tag')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.find('p', class='css.tag')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.find('p', attrs = {'align' : 'center'})&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;CSS Selector로 선택&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.select('html &amp;gt; title')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.select('div.article_view')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.select('#harmonyContainer')&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.select('div#mArticle')&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;브라우저&quot;&gt;브라우저&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;javascript 코드 이해 동반&lt;/li&gt;
  &lt;li&gt;브라우저를 통한 요청 &amp;gt; 난이도 하향 가능&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 19 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/19/1-Selenium-with-scarpy-day1/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/19/1-Selenium-with-scarpy-day1/</guid>
      </item>
    
      <item>
        <title>[2] Scrapy web crawling issues and Scrapy structure </title>
        <description>&lt;h3 id=&quot;웹-크롤링-이슈&quot;&gt;웹 크롤링 이슈&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;저작권법 허용&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;단순 링크&lt;/li&gt;
  &lt;li&gt;직접 링크 : 특정 게시물 링크&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;저작권법 위반&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;프레임 링크 - 저작물 일부를 홈페이지 표시&lt;/li&gt;
  &lt;li&gt;임베드 링크 - 저작물 전체를 홈페이지 표시&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;크롤링 데이터 임의적 사용은 괜찮지만, 어딘가에 게시할 때는 주의하여야 함.&lt;/p&gt;

&lt;h3 id=&quot;로봇-배제-표준-robotstxt&quot;&gt;로봇 배제 표준 (robots.txt)&lt;/h3&gt;

&lt;p&gt;크롤링 허용 확인 - 게시물에 대한 권한이 누구에게 있는가?&lt;/p&gt;

&lt;p&gt;유저와 운영자의 이해관계 차이 존재&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;모두 허용&lt;br /&gt;
User-agent:&lt;br /&gt;
Allow:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;모두 차단&lt;br /&gt;
User-agent:&lt;br /&gt;
Disallow:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;조합  &lt;br /&gt;
User-agent: googlebot    # googlebot 로봇만 적용
Disallow: /private/     # 이 디렉토리를 접근 차단한다.
User-agent: googlebot-news  # googlebot-news 로봇만 적용
Disallow: /         # 모든 디렉토리를 접근 차단한다.
User-agent: *        # 모든 로봇 적용
Disallow: /something/    # 이 디렉토리를 접근 차단한다.출처 : &lt;a href=&quot;https://ko.wikipedia.org/wiki/로봇_배제_표준&quot;&gt;위키/로봇 배제 표준&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;scrapy-구조&quot;&gt;Scrapy 구조&lt;/h3&gt;

&lt;p&gt;/spiders - 실제 크롤링 로직이 들어감&lt;/p&gt;

&lt;p&gt;items.py - 크롤링 대상 저장&lt;/p&gt;

&lt;p&gt;pipelines.py - 크롤링 결과를 DB 삽입 혹은 필터링 결정&lt;/p&gt;

&lt;p&gt;settings.py - 전체 프로젝트 설정 : 파이프라인 순서 결정, 로그 파일 지정 및 레벨 변경 등&lt;/p&gt;

&lt;p&gt;scrapy.cfg - 전체 프로젝트 배포 시 설정&lt;/p&gt;

&lt;h4 id=&quot;동작&quot;&gt;동작&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;items.py 정의&lt;/li&gt;
  &lt;li&gt;/spiders 안에 시작 url 지정 (start_requests - 특정 url에 대한 callback함수 지정 가능, start_urls - 스트링 리스트, ), 각 url에 대한 callback 함수 지정 (parse() - common)&lt;/li&gt;
  &lt;li&gt;callback 함수 정의&lt;br /&gt;
selector를 이용해 데이터 선택 (xpath, css)&lt;/li&gt;
  &lt;li&gt;Pipeline을 통해 데이터 필터링 혹은 DB에 저장&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;spiders&quot;&gt;Spiders&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;크롤러 이름 지정
    &lt;ul&gt;
      &lt;li&gt;name&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;스타트 url 지정
    &lt;ul&gt;
      &lt;li&gt;start_requests :
        &lt;ul&gt;
          &lt;li&gt;콜백 함수 지정 가능&lt;/li&gt;
          &lt;li&gt;사이트 로그인 시 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;start_urls :
        &lt;ul&gt;
          &lt;li&gt;시작 주소를 리스트 형태로 추가&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;parser 정의
    &lt;ul&gt;
      &lt;li&gt;def parser(self, response):&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;selector&quot;&gt;Selector&lt;/h4&gt;

&lt;p&gt;html 문서에 특정 노드 선택&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;css vs xpath&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; response.xpath('//title/text()')
&amp;gt;&amp;gt;&amp;gt; response.css('title::text')

&amp;gt;&amp;gt;&amp;gt; response.xpath('//base/@href').extract()
&amp;gt;&amp;gt;&amp;gt; response.css('base::attr(href)')

&amp;gt;&amp;gt;&amp;gt; response.xpath('//a[contains(@href, &quot;image&quot;)]/@href')
&amp;gt;&amp;gt;&amp;gt; response.css('a[href*=image]::attr(href)').extract()

&amp;gt;&amp;gt;&amp;gt; response.xpath('//a[contains(@href. &quot;image&quot;)]/img/@src').extract()
&amp;gt;&amp;gt;&amp;gt; response.scc('a[href*=image] img::attr(src)').extract()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;pipeline&quot;&gt;Pipeline&lt;/h4&gt;

&lt;p&gt;데이터 크롤링 이후 특정 행동 수행&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;데이터 유효성 검사&lt;/li&gt;
  &lt;li&gt;중복 체크&lt;/li&gt;
  &lt;li&gt;DB 저장&lt;/li&gt;
  &lt;li&gt;필터링&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;settings.py&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;파이프 클래스 및 순서 지정&lt;/p&gt;

    &lt;p&gt;ITEM_PIPELINES = {&lt;/p&gt;

    &lt;p&gt;‘project_name.pipelines.CommunityPipline’ : 200,&lt;/p&gt;

    &lt;p&gt;} &amp;gt; 숫자가 낮을 수록 선실행&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;logging&quot;&gt;Logging&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;settings.py&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;LOG_FILE = ‘logfile.log’&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;LOG_LEVEL = logging.DEBUG&lt;/p&gt;

        &lt;p&gt;설정파일에 파일명과 로그레벨을 통해 정의가 가능&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Log Level&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;logging.CRITICAL - for critical errors (highest severity)&lt;/li&gt;
      &lt;li&gt;logging.ERROR - for regular errors&lt;/li&gt;
      &lt;li&gt;logging.WARNING - for warning messages&lt;/li&gt;
      &lt;li&gt;logging.INFO - for informational messages&lt;/li&gt;
      &lt;li&gt;logging.DEBUG - for debugging messages (lowest severity)&lt;/li&gt;
    &lt;/ol&gt;

    &lt;blockquote&gt;
      &lt;p&gt;LOG_LEVEL = logging.WARNING 이라고 설정하면 1~3까지가 지정됨&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 16 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/16/2-Scrapy-Issues-of-web-crawling/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/16/2-Scrapy-Issues-of-web-crawling/</guid>
      </item>
    
      <item>
        <title>[1] Scrapy 활용 </title>
        <description>&lt;h3 id=&quot;웹-크롤러-scrapy&quot;&gt;웹 크롤러 Scrapy&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파이프라인 지원 : 데이터 후처리 (필터링 등) 가능&lt;/li&gt;
  &lt;li&gt;로깅 정보 확인 가능&lt;/li&gt;
  &lt;li&gt;상대적으로 bs보다 간편함&lt;/li&gt;
  &lt;li&gt;안정적 크롤링 가능&lt;/li&gt;
  &lt;li&gt;시간 단축 &amp;gt; 동시다발적 크롤링으로 인한 순서 변경&lt;/li&gt;
  &lt;li&gt;다양한 포맷으로 저장 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Framework&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;함수와 코드 선작성&lt;/li&gt;
  &lt;li&gt;특성 함수의 위치, 사용, 작성을 지정&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;beautiful-soup&quot;&gt;Beautiful Soup&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;parser의 역할이 강함&lt;/li&gt;
  &lt;li&gt;자동으로 유니코드로 변환해서 UTF-8 출력&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;###&lt;/p&gt;

&lt;h4 id=&quot;spider&quot;&gt;Spider&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;이름 : 여러 가지 크롤러(spider)를 둘 수 있으므로, 각 이름을 지정&lt;/li&gt;
  &lt;li&gt;페이지 주소 : 크롤링 할 주소 지정&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scrapy genspider 'crawler_name' 'url'

# Expected Result
Created spider 'gmarket' using template 'basic' in module:
  ecommerce.spiders.gmarket
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/scrapy_tutorial_list.png&quot; alt=&quot;scrapy_tutorial_list&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;items.py - 데이터를 들고올 때 클래스 형태로 만들 수 있음&lt;/li&gt;
  &lt;li&gt;pipelines.py - 데이터 수집 후 후처리 필터링 입력 진행&lt;/li&gt;
  &lt;li&gt;settings.py - 스크래피, 스파이더 설정 : 파이프라인 순서, 이름 등의 설정&lt;/li&gt;
  &lt;li&gt;spider/ - 스크랩 할 내용을 프로그래밍&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;itemspy&quot;&gt;items.py&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TutorialItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 상속 필수
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가져오려는 아이템 정의&lt;/p&gt;

&lt;h4 id=&quot;spidernew_filepy&quot;&gt;/spider/new_file.py&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;linkScrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Spider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dmoz&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 스파이더 이름 지정
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dmoztools.net&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;start_urls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'https://dmoztools.net/Computers/Programming/Languages/Python/Books/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'https://dmoztools.net/Computers/Programming/Languages/Python/Resources/'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 스크랩 할 url 지정
&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'//div'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'div[3]/a/div/text()'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'div[3]/a/@href'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/div[3]/div/text()'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;i.xpath('/div[3]/div/text()').extract() &lt;/code&gt; 의 값은&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;['\r\n\t\t\t\r\n                                    The primary goal of this book is to promote object-oriented design using Python and to illustrate the use of the emerging object-oriented design patterns.\r\nA secondary goal of the book is to present mathematical tools just in time. Analysis techniques and proofs are presented as needed and in the proper context.\r\n                                    ',
 '\r\n                                  ',
 '\r\n                                  ',
 '\r\n                                ',
 '\r\n                                  ',
 '\r\n                                  ',
 '\r\n                                ',
 'Health']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;로 나오니 리스트 0번째 값 추출 후 strip()으로 내용만 추출… 하고싶었는데 빈칸이 출력됨&lt;/p&gt;

&lt;h4 id=&quot;in-terminal---shell&quot;&gt;in Terminal - shell&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'url'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'//title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                                     
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;title&amp;gt;DMOZ - Computers: Programming: Languages: Python: Books&amp;lt;/title&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'//title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                                               
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Selector&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'//title'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;title&amp;gt;DMOZ - Computers: Programming:...'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'//title/text()'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                              
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DMOZ - Computers: Programming: Languages: Python: Books'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'//title/text()'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+):'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                          
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Computers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Programming'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Languages'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Python'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;문법---사용법&quot;&gt;문법 - 사용법&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;response.css('head &amp;gt; title').get() 
response.css('head &amp;gt; title').getall() # list
response.css('head &amp;gt; title::text').get() # 
response.xpath('//div/ul/li/text()').get() # 
response.css('div.best-list li &amp;gt; a::text').getall(
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;정규표현식&quot;&gt;정규표현식&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;response.css('div.best-list li &amp;gt; a::text')[1].re('(\w+)')

response.xpath('//div[@class=&quot;best-list&quot;]/ul/li/a/text()')[1].re('(\w+)')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pipelines---filtering&quot;&gt;Pipelines - Filtering&lt;/h3&gt;

&lt;p&gt;아이템이 생성될 때 파이프라인 함수를 한 번씩 거친다고 생가하면 됨!&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy.exceptions&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DropItem&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NavernewsPipeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;process_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'price'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DropItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;drop item having lower price than 10000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;dd&quot;&gt;dd&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start_requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://corners.gmarket.co.kr/Bestsellers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;지정 url 크롤링 후 parse 함수를 call-back ( call-back 으로 부르는 함수는 반드시 response 보유 필수)&lt;/p&gt;

&lt;h3 id=&quot;문제&quot;&gt;문제&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;describtion이 전혀 나오지 않는다.&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scrapy shell url&lt;/code&gt; 로 만질 때는 아주 잘 나오는데 막상 코드로 넣으면 빈 리스트만 반환한다.  미치겠다… 미치겠다 외 … 않되? 왜 안 되는지 정말 모르겠다… 짐작은 가는데… 내가 어떻게 만져야하는지 모르겠다… 빵 먹고싶다…&lt;/p&gt;

    &lt;p&gt;title:&lt;/p&gt;

    &lt;p&gt;//*[@id=”site-list-content”]/div[17]/div[3]/a/div&lt;/p&gt;

    &lt;p&gt;//*[@id=”site-list-content”]/div[18]/div[3]/a/div&lt;/p&gt;

    &lt;p&gt;desc:&lt;/p&gt;

    &lt;p&gt;//*[@id=”site-list-content”]/div[17]/div[3]/div/text()&lt;/p&gt;

    &lt;p&gt;//*[@id=”site-list-content”]/div[18]/div[3]/div/text()&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;쓰레기값 해결 문제&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{&quot;title&quot;: [&quot;Data Structures and Algorithms with Object-Oriented Design Patterns in Python &quot;], &quot;link&quot;: [&quot;http://www.brpreiss.com/books/opus7/html/book.html&quot;], &quot;desc&quot;: [&quot;\r\n\t\t\t\r\n                                    The primary goal of this book is to promote object-oriented design using Python and to illustrate the use of the emerging object-oriented design patterns.\r\nA secondary goal of the book is to present mathematical tools just in time. Analysis techniques and proofs are presented as needed and in the proper context.\r\n                                    &quot;, &quot;\r\n                                  &quot;]},
{&quot;title&quot;: [], &quot;link&quot;: [], &quot;desc&quot;: []},
   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;값이 정확히 나온 부분의 문제 : desc 리스트 [0]번째 값만 필요함 - 정규표현식을 써야 하는 건가? 근데 리스트 형태라서 strip만 되는 거 같은데…&lt;/li&gt;
      &lt;li&gt;빈 값 처리 - 뭐야!&lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;를 해야한다…&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;문제-해결&quot;&gt;문제 해결&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;i.xpath('/div[3]/div/text()').extract()&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;i.xpath('div[3]/div/text()').extract()&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;하~ 진짜 슬래쉬 때문에 개고생 하다니…핳&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;고찰&quot;&gt;고찰&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;나는 바보다&lt;/li&gt;
  &lt;li&gt;눈을 똑바로 뜨자&lt;/li&gt;
  &lt;li&gt;더 똑똑해지자&lt;/li&gt;
  &lt;li&gt;컴퓨터는 잘못 없다&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 16 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/16/1-Scrapy-Understanding-of-web-circumstances/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/16/1-Scrapy-Understanding-of-web-circumstances/</guid>
      </item>
    
      <item>
        <title>[3] Selenium을 사용한 기본 구글 크롤링</title>
        <description>&lt;h3 id=&quot;google-scraping-using-selenium-and-beautifulsoup&quot;&gt;Google Scraping using Selenium and BeautifulSoup&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib.parse&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quote_plus&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;base_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://www.google.com/search?q='&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plus_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quote_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plus_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page_source&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'html.parser'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'.r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select_one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'.LC20lb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'href'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# a 태그 안에 있는 href 가져오기
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;bs로만 구글 크롤링은 헤더가 있어야 함&lt;/p&gt;

&lt;p&gt;또한 가져온 결과에서는 클래스 이름이 없음 &amp;gt; 결과는 있지만 클래스 이름이 달라지기 때문에 혼합 사용 권장&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/15/3-google-scraping-using-selenium-and-beautifulsoup/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/15/3-google-scraping-using-selenium-and-beautifulsoup/</guid>
      </item>
    
      <item>
        <title>[2] BeautifulSoup 네이버 블로그 검색결과 가져오기</title>
        <description>&lt;h3 id=&quot;beautifulsoup&quot;&gt;BeautifulSoup&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;가장 기본 형식 - 검색어 고정 형태&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib.request&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://search.naver.com/search.naver?where=post&amp;amp;sm=tab_jum&amp;amp;query=python'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Html 가져오기
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'html.parser'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sh_blog_title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'href'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;검색어-변경-part&quot;&gt;검색어 변경 (part)&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;base_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://search.naver.com/search.naver?where=post&amp;amp;sm=tab_jum&amp;amp;query='&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plus_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'검색어 입력'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quote_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plus_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;	
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;urllib.parse.quote_plus()&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;네이버-이미지-저장하기&quot;&gt;네이버 이미지 저장하기&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;base_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://search.naver.com/search.naver?where=image&amp;amp;sm=tab_jum&amp;amp;query='&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plus_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'search'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quote_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plus_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'html.parser'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'_img'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;img_src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data-source'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./photo/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plus_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'wb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 이미지기 때문에 binary
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;file_read_img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;img_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_read_img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 개발자 도구에서 보는 것과 실제 소스분석과 다를 수 있음.
# 출력을 하면서 봐야 함.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 15 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/15/2-pyautogui-image/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/15/2-pyautogui-image/</guid>
      </item>
    
      <item>
        <title>[1] pyautogui 기초사용법</title>
        <description>&lt;h3 id=&quot;py-auto-gui&quot;&gt;py auto gui&lt;/h3&gt;

&lt;p&gt;as p&lt;/p&gt;

&lt;p&gt;&lt;em&gt;설정 - 보안 및 개인 정보 보호 - 개인정보보호 - 손쉬운 사용 - 터미널 체크&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;마우스와 키보드를 제어한다. &amp;gt; 자동화 프로그램 ( 매크로 ) 생성 시 이용&lt;/p&gt;

&lt;p&gt;마우스 좌표를 먼저 알아야 함 : 해상도에 따른 위치&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# (x, y)
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 절대적인 위치 변경
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveRel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 상대적인 위치 변경
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;click&quot;&gt;Click&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 한 번
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clicks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 두 번 클릭, 클릭 사이에 2초 텀
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doubleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;keyboard-ctrl&quot;&gt;Keyboard Ctrl&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;파일이 열리는 시간을 생각해서 typewrite 필수&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;‘키’를 누를 때는 [대괄호] 내에 삽입&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1초 쉼
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typewrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typewrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'enter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;opencv-python&quot;&gt;opencv-python&lt;/h3&gt;

&lt;p&gt;위치가 변경되어도 선택할 수 있도록 함&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;num7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locateOnScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'file.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 

&lt;span class=&quot;n&quot;&gt;num7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locateCenterOnScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'file.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;스크린샷까지 자동화&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screenshot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;region&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 15 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/15/1-pyauto/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/15/1-pyauto/</guid>
      </item>
    
      <item>
        <title>[Error] No module named selenium in env</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/nomodulename_selenium.png&quot; alt=&quot;nomodulename_selenium&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ModuleNotFoundError: No module named ‘selenium’ - Atom&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nomodulename_bs4.png&quot; alt=&quot;nomodulename_bs4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ModuleNotFoundError: No module named ‘bs4’ - Jupyter notebook&lt;/p&gt;

&lt;p&gt;저 상황일 때는 아무리 &lt;code class=&quot;highlighter-rouge&quot;&gt;conda install pip&lt;/code&gt;  등 뭘 해줘도 소용이 없었다. 난! 설치를 했는데! 왜! 넌! 없다고 말 하니? ㅠ&lt;/p&gt;

&lt;p&gt;파이썬 버전이 2개나 깔려있으니까 (2.x / 3.x) 정확히 명시해주기로 했다.&lt;/p&gt;

&lt;p&gt;환경 : 맥북 카탈리나 10.15.2 - 콘다 가상환경 사용&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 -m pip install BeautifulSoup4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;문제 해결!&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/web%20scraping/2020/01/15/0-No-Module-named-error-in-envs/</link>
        <guid isPermaLink="true">http://localhost:4000/study/web%20scraping/2020/01/15/0-No-Module-named-error-in-envs/</guid>
      </item>
    
      <item>
        <title>사용자</title>
        <description>&lt;h3 id=&quot;다중사용자&quot;&gt;다중사용자&lt;/h3&gt;

&lt;p&gt;복잡도가 증가&lt;br /&gt;
유닉스 계열 &amp;gt; 다중사용자 시스템&lt;/p&gt;

&lt;h4 id=&quot;id-who&quot;&gt;id, who&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; &amp;gt; uid=501(name) &amp;gt; 본인&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;who&lt;/code&gt; &amp;gt; 시스템에 누가 접속했는지 보여줌&lt;/p&gt;

&lt;h4 id=&quot;관리자와-일반-사용자&quot;&gt;관리자와 일반 사용자&lt;/h4&gt;

&lt;p&gt;유닉스 계열 2가지 사용자&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;super (root) user&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;(normal) user&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo ~ &lt;/code&gt; 일시적 슈퍼유저의 권한으로 동작  &amp;gt; 모든 유저가 sudo를 사용할 수는 없음&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;구분법&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;name@~$&lt;/p&gt;

&lt;p&gt;name &amp;gt; 1. root - 관리자 2. name - 일반 유저&lt;br /&gt;
symbol &amp;gt; 1. # - 관리자 2. $ - 일반 유저&lt;/p&gt;

&lt;h4 id=&quot;사용자-추가&quot;&gt;사용자 추가&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo useradd -m name&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo passwd name&lt;/code&gt; &amp;gt; enter pwd &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo usermod -a -G sudo name&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 13 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/linux/2020/01/13/%E1%84%89%E1%85%A1%E1%84%8B%E1%85%AD%E1%86%BC%E1%84%8C%E1%85%A1/</link>
        <guid isPermaLink="true">http://localhost:4000/study/linux/2020/01/13/%E1%84%89%E1%85%A1%E1%84%8B%E1%85%AD%E1%86%BC%E1%84%8C%E1%85%A1/</guid>
      </item>
    
      <item>
        <title>프로세스 &amp; 실행</title>
        <description>&lt;h4 id=&quot;daemon&quot;&gt;Daemon&lt;/h4&gt;

&lt;p&gt;특성&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;항상 실행되고 있음&lt;/li&gt;
  &lt;li&gt;server 같은 프로그램&lt;/li&gt;
  &lt;li&gt;언제 클라이언트가 접속할지 모름 &amp;gt; web server &amp;gt; daemon, service라 지칭&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;service와-자동실행&quot;&gt;Service와 자동실행&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo service program start/stop&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;데몬으로 사용되는, 서비스를 통해 켜고 끄는 프로그램은 start과 stop 2 개의 명령어를 필수적으로 갖고 있음 - /etc/rc3.d&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;S02apache2&lt;/code&gt; 링크 ( 윈도우의 바로가기 )&lt;/p&gt;

&lt;p&gt;S : 부팅 시 자동 실행&lt;/p&gt;

&lt;p&gt;K : kill - 프로그램 실행 X&lt;/p&gt;

&lt;p&gt;숫자 : 우선순위&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;cron&quot;&gt;Cron&lt;/h3&gt;

&lt;p&gt;정기적으로 명령을 실행시켜주는 소프트웨어&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;crontab -e&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;# m h dom mon dow    command&lt;/p&gt;

&lt;p&gt;# minutes, hours, day of month, month, day of week, 명령어&lt;/p&gt;

&lt;p&gt;e.g. */1 * * * * date » date.log 2(Standard Error) &amp;gt; &amp;amp;1(Standard Output)&lt;/p&gt;

&lt;h4 id=&quot;shell-startup-script&quot;&gt;Shell startup script&lt;/h4&gt;

&lt;p&gt;쉘 시작 시 특정 명령어를 자동으로 실행하는 방법&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vi .~/zshrc &lt;/code&gt; 에 삽입&lt;/p&gt;

&lt;p&gt;단축어 만들기 : &lt;code class=&quot;highlighter-rouge&quot;&gt;alias cmd = 'nick'&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/linux/2020/01/13/process-of-linux/</link>
        <guid isPermaLink="true">http://localhost:4000/study/linux/2020/01/13/process-of-linux/</guid>
      </item>
    
      <item>
        <title>IO Redirection - Shell &amp; Script</title>
        <description>&lt;h3 id=&quot;linux-io-redirection&quot;&gt;Linux IO Redirection&lt;/h3&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;output&quot;&gt;output&lt;/h4&gt;

&lt;p&gt;출력 방향을 바꾸어 반환시킴- redirections of standard output&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls -l (1)&amp;gt; result.txt&lt;/code&gt; : 출력 결과를 result.txt 파일에 넣음 / 1 == standard output, 2 == standard error&lt;/p&gt;

&lt;p&gt;프로그램 실행 상태 : 프로세스&lt;/p&gt;

&lt;h4 id=&quot;input&quot;&gt;input&lt;/h4&gt;

&lt;p&gt;file 내 포함되어 있는 걸 입력값을 줄 수 있음&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cat type.txt &lt;/code&gt; : cat에 type을 인자로 Cmd line arg로 전달함&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cat &amp;lt; type.txt &lt;/code&gt; : Standard Input (표준 입력) 으로 들어감&lt;/p&gt;

&lt;h4 id=&quot;append&quot;&gt;append&lt;/h4&gt;

&lt;h3 id=&quot;shell--script&quot;&gt;Shell &amp;amp; Script&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;Shell vs Kernel ( core )&lt;/p&gt;

&lt;p&gt;shell 에 명령어 입력 &amp;gt; shell은 해석 후 kernel 에게 전달 &amp;gt; hardware &amp;gt; kernel &amp;gt; shell&lt;/p&gt;

&lt;h4 id=&quot;bash-vs-zshell&quot;&gt;bash vs zshell&lt;/h4&gt;

&lt;p&gt;같은 부모를 갖고 있지만 zsh이 더 편리하다는 평가를 받고 있음&lt;/p&gt;

&lt;h4 id=&quot;shell-script&quot;&gt;Shell script&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod +x file&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;-rw-r--r--&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;-rwxr-xr-x&lt;/code&gt; : x &amp;gt; excutable&lt;/p&gt;

</description>
        <pubDate>Mon, 13 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/linux/2020/01/13/linux-tutorial-IO-Redirection/</link>
        <guid isPermaLink="true">http://localhost:4000/study/linux/2020/01/13/linux-tutorial-IO-Redirection/</guid>
      </item>
    
      <item>
        <title>권한 permission</title>
        <description>&lt;h3 id=&quot;permission&quot;&gt;Permission&lt;/h3&gt;

&lt;p&gt;제어 가능 대상 : user &amp;gt; file and directory에 대한 Read and Write and Excute&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Permission denied&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;-rw-r–r–  1 park-eunbin staff    68 12 22 16:31 test.txt&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;-/rw-/r–/r– /&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;park-eunbin staff  /&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;68 /&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;12 22 16:31/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;test.txt&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;access mode&lt;/strong&gt;
Type ( 파일 -, 디렉토리 d, 링크 ) / Owners Permission (rw &amp;gt; Read, Write, X-excute)/ Groups Permission/ Other /&lt;/li&gt;
  &lt;li&gt;/&lt;/li&gt;
  &lt;li&gt;Owner Group /&lt;/li&gt;
  &lt;li&gt;-&lt;/li&gt;
  &lt;li&gt;생성일&lt;/li&gt;
  &lt;li&gt;대상 이름&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;change-mode&quot;&gt;CHange MODe&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod [options] mode[, mode] file1 [file2 ...]&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;eg&quot;&gt;e.g.&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod o-r file.type&lt;/code&gt; : other 사용자의 Read 권한 삭제&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod o+r file.type&lt;/code&gt; : other 사용자의 Read 권한 부여&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod o+w file.type&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod u-r file.type&lt;/code&gt; : 소유자의 Read 권한 삭제&lt;/p&gt;

&lt;h4 id=&quot;excute&quot;&gt;Excute&lt;/h4&gt;

&lt;p&gt;파일 실행 권한&lt;/p&gt;

&lt;p&gt;특정 프로그램(해석기, Parser)을 통해 실행하는 것 &amp;gt; 제약 없음.&lt;/p&gt;

&lt;h5 id=&quot;eg-1&quot;&gt;e.g.&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod u+x file.type&lt;/code&gt; : user 실행 권한 부여&lt;/p&gt;

&lt;h4 id=&quot;directory&quot;&gt;Directory&lt;/h4&gt;

&lt;p&gt;r : 디렉토리 안 파일이나 디렉토리 열람 권한&lt;/p&gt;

&lt;p&gt;w : 디렉토리 내 파일 생성 및 삭제 권한&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod -R o+w dir&lt;/code&gt;하부 디렉토리 모두 변경&lt;/p&gt;

&lt;h4 id=&quot;octal-modes&quot;&gt;Octal Modes&lt;/h4&gt;

&lt;p&gt;1 - excite only 2 - write only, 4 - read only&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod 111 file.type&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;class&quot;&gt;Class&lt;/h4&gt;

&lt;p&gt;Reference, Class&lt;/p&gt;

&lt;p&gt;u, owner&lt;/p&gt;

&lt;p&gt;g, group&lt;/p&gt;

&lt;p&gt;o, others&lt;/p&gt;

&lt;p&gt;a, all&lt;/p&gt;

&lt;h5 id=&quot;eg-2&quot;&gt;e.g.&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod a+w file&lt;/code&gt; : 모든 사용자에게 write 권한 부여&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod a=rwx file&lt;/code&gt; : 모든 사용자에게 r,w,x 권한 부여&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod a= file&lt;/code&gt; : 모든 권한 삭제&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/linux/2020/01/13/linux-permission/</link>
        <guid isPermaLink="true">http://localhost:4000/study/linux/2020/01/13/linux-permission/</guid>
      </item>
    
      <item>
        <title>Group - 파일과 디렉토리 공동 관리</title>
        <description>&lt;h3 id=&quot;group&quot;&gt;Group&lt;/h3&gt;

&lt;p&gt;file 생성자 (유저) 외에 한 명 이상의 사용자에게 권한 부여&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/var&lt;/code&gt; 아래에 공용 directory 생성&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo groupadd developer&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo usermon -a -G group_name user_name&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;exit 후 재접속&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo chown {-R} [user]{:group} file&lt;/code&gt; 형식으로 입력&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Mon, 13 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/linux/2020/01/13/linux-group/</link>
        <guid isPermaLink="true">http://localhost:4000/study/linux/2020/01/13/linux-group/</guid>
      </item>
    
      <item>
        <title>디렉토리 구조와 파일 찾는 법</title>
        <description>&lt;h3 id=&quot;directory-구조&quot;&gt;Directory 구조&lt;/h3&gt;

&lt;p&gt;디렉토리 : 정리정돈의 수단, 데이터와 실행 프로그램 성격에 따라 정해진 규칙이 있음.&lt;/p&gt;

&lt;p&gt;/bin - user binaries : 사용자 사용 명령어 위치&lt;/p&gt;

&lt;p&gt;/sbin - System binaries :  시스템 관리 목적이 있는 명령어 위치&lt;/p&gt;

&lt;p&gt;/etc - Configuration Files : 설정&lt;/p&gt;

&lt;p&gt;/var - Variable Files&lt;/p&gt;

&lt;p&gt;/tmp - Temporary Files&lt;/p&gt;

&lt;p&gt;/home - Home Directories&lt;/p&gt;

&lt;p&gt;/opt - Optional add-on Applications&lt;/p&gt;

&lt;p&gt;/usr - User Programs : 사용자 설치 프로그램은 /usr/bin 에 저장되고, 번들형식으로 사용자에게 제공되는 것들은 /bin에 저장됨&lt;/p&gt;

&lt;h4 id=&quot;locate--find&quot;&gt;locate &amp;amp; find&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;locate&lt;/strong&gt;는 Directory 가 아니라 DB 안에서 찾기 때문에 훨씬 빠른 반환이 가능함&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;find&lt;/strong&gt; 는 Directory를 뒤져 찾음. 다양한 사용법이 있음.&lt;/p&gt;

&lt;h4 id=&quot;whereis--path&quot;&gt;whereis &amp;amp; $PATH&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;whereis&lt;/strong&gt; 프로그램&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;which&lt;/strong&gt; - locate a program file in the user’s path&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;$PATH&lt;/strong&gt; - 환경변수&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;echo $PATH&lt;/code&gt; : path 변수에 담겨있는 데이터가 echo를 통해 출력됨.&lt;/p&gt;

&lt;p&gt;e.g. ls 입력 &amp;gt; $PATH에 담겨있는 디렉토리를 검색해서, ls를 존재하는지 찾고 발견 시 실행하는 것&lt;/p&gt;

</description>
        <pubDate>Mon, 13 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/linux/2020/01/13/linux-directory/</link>
        <guid isPermaLink="true">http://localhost:4000/study/linux/2020/01/13/linux-directory/</guid>
      </item>
    
      <item>
        <title>jekyll 이미지 오류 - not found</title>
        <description>&lt;h3 id=&quot;문제&quot;&gt;문제&lt;/h3&gt;

&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;깃허브에 &lt;strong&gt;편하게&lt;/strong&gt; 사진을 올리고 싶은 나.&lt;/li&gt;
  &lt;li&gt;드래그 앤 드롭으로 넣는 거 아니면 아무것도 하고싶지 않은 나.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;를 바탕으로… 이미지 오류가 계속 났었다. 분명히 내 컴푸터! 내 폴더! 안에 이미지를 갖다 쳐박아놨는데! 왜 에러라고 뜨는지… 30분은 헤맸다.&lt;/p&gt;

&lt;h3 id=&quot;해결&quot;&gt;해결&lt;/h3&gt;

&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;바보같은 나&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;때문이었다.&lt;/p&gt;

&lt;p&gt;저 이미지주소는 내 컴퓨터 내에 이미지가 어디에 있는지를 알려주는 건데, 곰곰히 생각해보니 내 로컬주소가 아니라 맨날 커밋하는 그곳! &lt;strong&gt;깃허브&lt;/strong&gt; 내 주소를 적었어야 했다.&lt;/p&gt;

&lt;p&gt;드래그 앤 드롭 하면 이미지 주소가 이렇게 나온다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![img_name](/Users/park-eunbin/workspace/parkeb417.github.io/images/img_name.png)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;내 컴퓨터 안에서만 작성하고 볼 글이면 놔두어도 상관 없다. 서버에 올릴 글이기 때문에 로컬주소를 백날 작성해봐야 안 듣는다…. ㅜㅡ&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![img_name](/images/img_name.png)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 고쳐야 한다! 깃헙 레포 내에서 들어가는 방법이라고 생각하면 된다.&lt;/p&gt;

&lt;h3 id=&quot;고찰&quot;&gt;고찰&lt;/h3&gt;

&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;생각을 하고 살자&lt;/li&gt;
  &lt;li&gt;곰곰히 생각해보면 된다&lt;/li&gt;
  &lt;li&gt;컴퓨터 입장에서 생각하자&lt;/li&gt;
  &lt;li&gt;컴퓨터는 잘못 없다&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 13 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2020/01/13/jekyll-%E1%84%8B%E1%85%B5%E1%84%86%E1%85%B5%E1%84%8C%E1%85%B5-%E1%84%8B%E1%85%A9%E1%84%85%E1%85%B2/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/01/13/jekyll-%E1%84%8B%E1%85%B5%E1%84%86%E1%85%B5%E1%84%8C%E1%85%B5-%E1%84%8B%E1%85%A9%E1%84%85%E1%85%B2/</guid>
      </item>
    
      <item>
        <title>Numpy 101</title>
        <description>&lt;h3 id=&quot;numpy&quot;&gt;Numpy&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;파이썬 과학 처리 패키지 - Numerical Python&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;반복문 없이 데이터 배열 처리 지원&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;C, C++, 포트란&lt;/li&gt;
  &lt;li&gt;Dymanic typing 불허&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;array-creation&quot;&gt;Array creation&lt;/h3&gt;

&lt;h4 id=&quot;ndarray&quot;&gt;ndarray&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 64는 크기
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;파이썬 : 메모리 주소의 위치를 잡음. 리스트 안에 값이 아닌 메모리 주소 &amp;gt; 복사 == 메모리주소 복사&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;from copy import deepcopy&lt;/code&gt; 로 해결&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;넘파이 : 차례데로 데이터를 쌓음 &amp;gt; 빠른 데이터 처리가 가능&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Expected Result - Vector
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 4 column
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Expected Result - Matrix
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 1 by 4 1 row 4 columns
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;shape : numpy array의 object의 dimension 구성을 반환함 &amp;gt; 튜플타입 반환
메트릭스 크기를 따라감&lt;/li&gt;
  &lt;li&gt;ndim - # of dimension&lt;/li&gt;
  &lt;li&gt;size - data의 개수 : &lt;em&gt;scala 값이기 때문에 int로 반환&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;dtype : numpy array의 데이터 type을 반환함
대부분 float32, 64 로 선언 - 메모리에 크기가 결정되기 때문에 신경써야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;handling-shape&quot;&gt;Handling Shape&lt;/h3&gt;

&lt;p&gt;: Array Shape 의 크리 변경&lt;/p&gt;

&lt;h4 id=&quot;reshape&quot;&gt;Reshape&lt;/h4&gt;

&lt;p&gt;Matrix를 Vector로 펴야할 때&lt;/p&gt;

&lt;p&gt;* 데이터 사이즈 개수만 맞추면 됨&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# -1 : size를 기반으로 row 개수 선정 | row 의 개수는 정확하게 모르지만 컬럼을 2개로 할 때
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# array([1,2,3,4,1,2,5,8])
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# array([[1],[2], ..., [8]])
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;데이터 호출 시 y값을 가져올 때, 이 값이 보통 Vector형태로 뽑히는데, Sklearn에서는 Matrix 형태로 들어가야 하기 때문에&lt;/p&gt;

&lt;h4 id=&quot;flatten&quot;&gt;flatten&lt;/h4&gt;

&lt;p&gt;: 다차원 array를 1차원으로 변환&lt;/p&gt;

&lt;p&gt;딥러닝 초기모델 배울 때 nlist데이터셋을 쓰는데 ( 문자를 벡터형태를 사용 ), 28 by 28을 펴야할 때…&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;indexing--slicing&quot;&gt;Indexing &amp;amp; slicing&lt;/h3&gt;

&lt;h4 id=&quot;indexing&quot;&gt;indexing&lt;/h4&gt;

&lt;p&gt;a[0,0] == a[0][0]&lt;/p&gt;

&lt;h4 id=&quot;slicing&quot;&gt;slicing&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;x:y:z&lt;/td&gt;
      &lt;td&gt;x : 시작, y : 끝 지점 바로 앞, z : step&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 일부분만 가져올 때 사용&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;List와 달리 &lt;strong&gt;행과 열&lt;/strong&gt; 부분을 나눠서 slicing이 가능함 / [행, 열]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Matrix의 부분 집합을 추출할 때 유용함&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;creation-function&quot;&gt;Creation Function&lt;/h3&gt;

&lt;h4 id=&quot;arange&quot;&gt;arange&lt;/h4&gt;

&lt;p&gt;: array 범위를 지정해 값의 list를 생성하는 명령어&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;floating point 로도 표기 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# array([0,1,2, ..., 29])
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tolist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2차원 매트릭스 형태 생성
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;ones-zeros-and-empty&quot;&gt;ones, zeros and empty&lt;/h4&gt;

&lt;dl&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.zeros(shape, dtype, order)&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;
    &lt;p&gt;ones, zeros &amp;gt; 1 (0)으로 찬 ndarray 생성&lt;/p&gt;
  &lt;/dd&gt;
  &lt;dd&gt;
    &lt;p&gt;empty - shape만 주어지고 비어있는 ndarray 생성 &lt;strong&gt;memory initialisation&lt;/strong&gt; 이 되지 않음&lt;/p&gt;
  &lt;/dd&gt;
&lt;/dl&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;something-like&quot;&gt;Something like&lt;/h4&gt;

&lt;p&gt;: 기존 ndarray shape 크기만큼 1, 0 또는 empty array 반환&lt;/p&gt;

&lt;h4 id=&quot;identity&quot;&gt;identity&lt;/h4&gt;

&lt;p&gt;: 단위행렬 (i 행렬) 생성&lt;/p&gt;

&lt;h4 id=&quot;eye&quot;&gt;eye&lt;/h4&gt;

&lt;p&gt;: 대각선이 1인 생렬, k값의 시작 index 변경 가능&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3 by 5
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# k == start index &amp;gt; 첫 행의 3번째부터 시작
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;diag&quot;&gt;diag&lt;/h4&gt;

&lt;p&gt;: 대각선 값 추출&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# array([0, 4, 8])
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# k == start index
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;random-sampling&quot;&gt;random sampling&lt;/h4&gt;

&lt;p&gt;: 데이터 분포에 따른 sampling으로 array 생성&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 균등분포
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 정규분포 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;operation-functions&quot;&gt;operation functions&lt;/h3&gt;

&lt;h4 id=&quot;sum&quot;&gt;sum&lt;/h4&gt;

&lt;p&gt;: ndarray의 element&lt;/p&gt;

&lt;h4 id=&quot;axis&quot;&gt;axis&lt;/h4&gt;

&lt;p&gt;: 모든 op function 을 실행할 때, 기준이 되는 dimension 축&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;[row] : axis = 0&amp;gt; [column, row] : axis = 0, 1 &amp;gt; [num, column, row] : axis = 0, 1, 2&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;np.t_array.sum()
np.t_array.sum(axis = 0)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;mean--std&quot;&gt;mean &amp;amp; std&lt;/h4&gt;

&lt;p&gt;: 평균과 표준편차 반환&lt;/p&gt;

&lt;h4 id=&quot;concatenate&quot;&gt;concatenate&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;vstack : 축 기준 합 &amp;gt; 2차원 배열로 변환&lt;/li&gt;
  &lt;li&gt;hstack :&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;array-operations&quot;&gt;array operations&lt;/h3&gt;

&lt;h4 id=&quot;operations-bt-arrays&quot;&gt;operations b/t arrays&lt;/h4&gt;

&lt;p&gt;: Numpy는 array간의 기본적 사칙연산을 지원&lt;/p&gt;

&lt;h4 id=&quot;dot-product&quot;&gt;Dot product&lt;/h4&gt;

&lt;h4 id=&quot;transpose&quot;&gt;transpose&lt;/h4&gt;

&lt;h4 id=&quot;-broadcasting&quot;&gt;* broadcasting&lt;/h4&gt;

&lt;p&gt;: Shape 이 다른 배열 간 연산을 지원하는 기능, 방식&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;scalar - vector (matrix) 외에도 vector - matrix 간 연산도 지원&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;numpy-performance&quot;&gt;Numpy performance&lt;/h4&gt;

&lt;p&gt;numpy는 concat 시에 느려짐, List가 더 빠름&lt;/p&gt;

&lt;h3 id=&quot;comparisons&quot;&gt;Comparisons&lt;/h3&gt;

&lt;h4 id=&quot;all-and-any&quot;&gt;All and Any&lt;/h4&gt;

&lt;p&gt;: Array의 데이터 전부(and) 또는 일부(or)가 조건에 만족 여부 반환&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;일종의 broadcasting ( scalar - numpy)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;all : 모두 만족 시 True  / &lt;code class=&quot;highlighter-rouge&quot;&gt;np.all(a &amp;lt; 10)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;any : 하나라도 만족 시 False / &lt;code class=&quot;highlighter-rouge&quot;&gt;np.any(a &amp;lt; 0)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;logical_operations&quot;&gt;Logical_operations&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.logical_and(x &amp;lt; 1, y &amp;gt; 1)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;.logical_not(x)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;.logical_or(x, y)&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;-npwhere&quot;&gt;* np.where&lt;/h4&gt;

&lt;p&gt;: 조건에 만족하는 인덱스 값을 반환&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;condition을 넣어 T,F 반환도 가능&lt;/li&gt;
  &lt;li&gt;정렬 기법이랑 함께 쓰면 유용함&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# True - 3, False - 2
# array([3, 3, 2])
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# index 값 반환
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;-argmax--argmin&quot;&gt;* argmax &amp;amp; argmin&lt;/h4&gt;

&lt;p&gt;: return of max(min) of arguments’ index / &lt;code class=&quot;highlighter-rouge&quot;&gt;np.argmax(a)&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;각 조건에 맞는 값을 찾을 때는 where 절을 사용하면 됨.&lt;/li&gt;
  &lt;li&gt;축을 넣어주면 축에서 최대, 최소값을 찾음 / &lt;code class=&quot;highlighter-rouge&quot;&gt;np.argmax(a, axis = 1)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;boolean--fancy-index&quot;&gt;boolean &amp;amp; fancy index&lt;/h3&gt;

&lt;h4 id=&quot;boolean-index&quot;&gt;boolean index&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;numpy는 배열 특정 조건에 따른 값을 배열 형태로 추출 가능함&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Comparision operation 함수 사용 가능&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;조건이 True 인 index element 만 추출&lt;/li&gt;
  &lt;li&gt;where 절과 함께 사용 시 유용&lt;/li&gt;
  &lt;li&gt;데이터 셋에서 조건에 만족하는 값만 찾을 때 &amp;gt; 조건을 변수에 할당 &amp;gt; .astype(np.int) 로 1, 0 변환&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;test_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# array([False,  True, False, False, False,  True,  True,  True], dtype=bool)
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# array([ 4.,  8.,  9.,  7.])
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;test_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# array([ 1.,  0.,  2.])
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;fancy-index&quot;&gt;fancy index&lt;/h4&gt;

&lt;p&gt;: numpy는 array를 index value로 사용해서 값을 추출하는 방법&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;인덱스에 해당하는 값을 추출함&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a[b]&lt;/code&gt; 보다 &lt;code class=&quot;highlighter-rouge&quot;&gt;a.take(b)&lt;/code&gt; 를 권장 - 명확함&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# b를 row index, c를 column index로 변환하여 표시함
# array([  1.,   4.,  16.,  16.,   4.])
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# array([[  1.,   4.],
#       [  1.,   4.],
#       [  9.,  16.],
#       [  9.,  16.],
#       [  1.,   4.]])
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;numpy-data-io&quot;&gt;numpy data i/o&lt;/h3&gt;

&lt;h4 id=&quot;loadtxt--savetxt&quot;&gt;loadtxt &amp;amp; savetxt&lt;/h4&gt;

&lt;p&gt;: Text type의 데이터를 읽고, 저장하는 기능&lt;/p&gt;

&lt;h4 id=&quot;numpy-object---npy&quot;&gt;numpy object - npy&lt;/h4&gt;

&lt;p&gt;: 파이썬 객체 저장방식인 pickle 형태로 저장 - binary 파일 형태&lt;/p&gt;

</description>
        <pubDate>Sun, 12 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/python/2020/01/12/edwith-python-for-ML-chap3-numpy/</link>
        <guid isPermaLink="true">http://localhost:4000/study/python/2020/01/12/edwith-python-for-ML-chap3-numpy/</guid>
      </item>
    
      <item>
        <title>머신러닝을 위한 Python 03</title>
        <description>&lt;p&gt;&lt;em&gt;Scala&lt;/em&gt;는 이탤릭체, &lt;strong&gt;vector&lt;/strong&gt;는 소문자 볼드, &lt;strong&gt;MATRIX&lt;/strong&gt;는 대문자 볼드&lt;/p&gt;

&lt;p&gt;기존 데이터를 알고리즘을 사용해 모델을 만들고, 새 데이터에 모델을 적용해 예측하는 것 : 핵심은 알고리즘과 모델&lt;/p&gt;

&lt;p&gt;y = ax + b 꼴의 선 ? x = ‘보고싶어요’ y = 총 관객 수 &amp;gt; a, b를 알아내는 것&lt;/p&gt;

&lt;h3 id=&quot;key-concepts&quot;&gt;Key concepts&lt;/h3&gt;

&lt;p&gt;모델 : 예측을 위한 수학 공식, 함수, condition rule처럼 조건일 수도 있음&lt;/p&gt;

&lt;p&gt;알고리즘 : 모델을 만들기 위한 과정&lt;/p&gt;

&lt;p&gt;Y에 영향을 주는 X의 값은 하나인가?&lt;/p&gt;

&lt;h3 id=&quot;feature---독립변수&quot;&gt;Feature - 독립변수&lt;/h3&gt;

&lt;p&gt;데이터 특징을 나타내는 변수 : input 변수&lt;/p&gt;

&lt;p&gt;데이터 테이블 상에서 컬럼을 의미&lt;/p&gt;

&lt;p&gt;엑스와 와이를 갖고 있는 상황에서 베타를 알게하는 것&lt;/p&gt;

&lt;h3 id=&quot;feature-vector&quot;&gt;Feature Vector&lt;/h3&gt;

&lt;p&gt;전체 데이터 셋에서 0번째를 표현한 수식&lt;/p&gt;

&lt;p&gt;선형대수의 표기법을 사용 &amp;gt;&lt;/p&gt;

&lt;p&gt;list=w^t x=list &amp;gt;로 표현해 y의 예측치를 찾아낼 수 있을 것임&lt;/p&gt;
</description>
        <pubDate>Sat, 11 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/python/2020/01/11/edwith-ML-overview/</link>
        <guid isPermaLink="true">http://localhost:4000/study/python/2020/01/11/edwith-ML-overview/</guid>
      </item>
    
      <item>
        <title>Pandas 101</title>
        <description>&lt;h3 id=&quot;pandas-101&quot;&gt;Pandas 101&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;astype(type)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;loc[[행], [열]]&lt;/code&gt; - 라벨 값을 기반으로 행 데이터 읽기
e.g. ) data_frame.loc[data_frame[‘Invoice Number’].str.startswith(‘920-‘), :]&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;iloc[[행], [열]]&lt;/code&gt; - 인덱스 값을 기반으로 단일 행을 선택해 열 헤더 행으로 사용할 수 있게 함&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.ix[]&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;loc&lt;/code&gt; 과 같으나 경고 메세지 반환&lt;/p&gt;

&lt;p&gt;’:’ &amp;gt; 모든 행&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.columns&lt;/code&gt; - 열 출력
e.g.) data_frame.columns = data_frame.iloc[0]&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.index&lt;/code&gt; - 행 출력&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.contains()&lt;/code&gt; - 특정 문자열 포함 요소 탐색
e.g.) data_frame[‘Supplier Name’].str.contains(‘Z’))&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.isin()&lt;/code&gt; - 특정 값의 포함 여부를 확인 후 boolean 타입으로 반환&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.startswith('')&lt;/code&gt; - 특정 문자열로 시작되는 요소 탐색&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.endswith('')&lt;/code&gt; -  특정 문자열로 끝나는 요소 탐색&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.reindex()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;drop()&lt;/code&gt; - 제거&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;read_csv(header = None, names = list_V)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;concat(axis=0)&lt;/code&gt;- 0 = 수평 / 1 = 수직으로 합침&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;merge()&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;pandas.merge(DataFrame1, DataFrame2, on='key', how='inner')&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;Numpy &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;numpy.concatenate([array1, array2], axis=1)&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;numpy.hstack((array1, array2))&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;numpy.c[array1, array2]&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;data-frame&quot;&gt;Data Frame&lt;/h3&gt;
&lt;p&gt;Series를 모아 만든 Data Table == 기본 2차원
각 열마다 고유의 데이터 타입을 가질 수 있음&lt;br /&gt;
구조적 데이터 구조에 대한 분석 &amp;gt; 가장 적합한 data object &lt;br /&gt;
각 row instance, tuple 마다 인덱스가 있고, 각 컬럼별로도 인덱스값이 있음&lt;/p&gt;

&lt;h4 id=&quot;nested-dict&quot;&gt;Nested Dict&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Nevada'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2002&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Ohio'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2001&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2002&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;selection&quot;&gt;Selection&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.name&lt;/code&gt; - Series&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df['name'][:3]&lt;/code&gt; -  column name with index num&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df['name'][[0, 5, 10]]&lt;/code&gt; - return values more than 1 index&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df[df['name' &amp;gt; 25]]&lt;/code&gt; -  return values more than 25 in dataframe&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df[:3]&lt;/code&gt; - return 0, 1, 2 rows by row&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df[['col1', 'col2']][:2]&lt;/code&gt; - return 2 rows only in col1, col2&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df[['col1', 'col2']].iloc[:10]&lt;/code&gt; - return 0 to 10 rows only in col1, col2&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.index = list(range(0, df.shape[0]))&lt;/code&gt; - re indexing&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;drop&quot;&gt;Drop&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.drop(1)&lt;/code&gt; - drop row that index num 1&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.drop([0,1,3,6])&lt;/code&gt; - drop rows after multiple index&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.drop('col_name', axis=1)&lt;/code&gt; # same as &lt;code class=&quot;highlighter-rouge&quot;&gt;del df['col_name']&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;basic-operation-in-dataframe&quot;&gt;Basic Operation in DataFrame&lt;/h3&gt;

&lt;h4 id=&quot;series-operation&quot;&gt;Series operation&lt;/h4&gt;
&lt;p&gt;numpy랑 비슷&lt;br /&gt;
index 기준으로 연산을 수행 &amp;gt; 겹치는 index 가 없는 경우 NaN 반환&lt;br /&gt;
넘파이는 사이즈가 같지 않으면 error / 시리즈는 에러는 없지만 리스트 인덱스를 기준으로 더해주면서 없을 경우 nan&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df1.add(df2, fill_value=0)&lt;/code&gt; - add df2 to df1&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;series--dataframe&quot;&gt;Series + DataFrame&lt;/h4&gt;
&lt;p&gt;data는 column 이름을 기준으로 broadcasting이 일어남&lt;br /&gt;
축을 변경해서 ( 세로 &amp;gt; 가로 ) 더해주면, s2의 index (원래 column) 값과 df의 index 값을 기준으로 broadcasting이 일어남&lt;/p&gt;

&lt;h3 id=&quot;lambda-map-apply&quot;&gt;Lambda, Map, Apply&lt;/h3&gt;

&lt;h4 id=&quot;lambda-함수&quot;&gt;lambda 함수&lt;/h4&gt;
&lt;p&gt;한 줄로 함수를 표현하는 익명함수&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;lambda argument : expression&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;map-함수&quot;&gt;map 함수&lt;/h4&gt;
&lt;p&gt;함수와 sequence형 데이터를 인자로 받아 각 lmn 마다 입력받은 함수를 적용해 list 반환&lt;br /&gt;
일반적으로 함수를 lambda 형태로 표현&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;map-for-series&quot;&gt;Map for Series&lt;/h5&gt;
&lt;p&gt;Pandas의 Series type 데이터에도 map 함수 사용 가능&lt;br /&gt;
function 대신 dict, sequence형 자료 등으로 대체 가능&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# output
&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;36&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;49&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;81&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int64&lt;/span&gt;
  
&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'c'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# output
&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;
  
&lt;span class=&quot;c1&quot;&gt;# e.g. 1
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sex_code'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'male'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'female'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; 
&lt;span class=&quot;c1&quot;&gt;# e.g. 2
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'height_categories'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'대'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'소'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;apply-for-dataframe&quot;&gt;Apply for dataframe&lt;/h4&gt;
&lt;p&gt;map과 달리 series 전체 - column 전체에 해당 함수 적용 - map 은 각 lmn마다 lambda를 적용시키는 경우라면&lt;br /&gt;
입력값이 series 데이터로 입력받아 handling 가능&lt;br /&gt;
각 컬럼별로 반환 - 통계 자료 뽑을 때 유용함&lt;br /&gt;
요약 정보를 보기 위한 data frame 형태로도 사용이 가능&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;c1&quot;&gt;# f == 시리즈 데이터 전체가 들어감. 데이터 전체의 최대 최소를 구해진 후 반환이 됨
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'min'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'mean'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; 
&lt;span class=&quot;c1&quot;&gt;# 두 행을 새로 생성해서 전체 데이터를 집어 넣어 min, max 찾기
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;applymap-for-dataframe&quot;&gt;Applymap for dataFrame&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Series 단위가 아닌 lmn 단위 전체에 함수를 적용&lt;/li&gt;
  &lt;li&gt;Series 단위에 apply를 적용시킬 때와 같은 효과
&lt;br /&gt;
    &lt;ol&gt;
      &lt;li&gt;applymap, apply : DF 단위 내에서&lt;/li&gt;
      &lt;li&gt;map : Series 단위 내에서&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;applymap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;built-in-functions&quot;&gt;Built-in Functions&lt;/h3&gt;
&lt;h4 id=&quot;describe&quot;&gt;describe&lt;/h4&gt;
&lt;p&gt;Numeric type 데이터 요약 정보&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/pandas_describe.png&quot; alt=&quot;pandas_describe&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;unique&quot;&gt;Unique&lt;/h4&gt;
&lt;p&gt;Series data의 유일한 값을 list로 반환&lt;br /&gt;
데이터 라벨링-라벨인코더가 가능해짐 
&lt;code class=&quot;highlighter-rouge&quot;&gt;dict(enumerate(df['column_name'].unique()))&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;images/pandas_dict_enumerate.png&quot; alt=&quot;pandas_dict_enumerate&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'race'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unique&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())))[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tolist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'race'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unique&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tolist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#output
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'white'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'other'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'hispanic'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'black'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;race&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_replace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;sum&quot;&gt;Sum&lt;/h4&gt;
&lt;p&gt;기본적인 column 또는 row 값 연산 지원
sub, mean, min, max, count, median, mad, var 등등&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.sum(axis=0)&lt;/code&gt; # column sum&lt;/p&gt;

    &lt;p&gt;sum by column name&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.sum(axis=1)&lt;/code&gt; # row sum&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;isnull&quot;&gt;isnull&lt;/h4&gt;
&lt;p&gt;값이 존재하지 않으면 null인 값의 합 ( 결측치 ) - 개수 등&lt;br /&gt;
column 또는 row 값의 NaN(null) 값의 index 반환&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.isnull().sum(0) &lt;/code&gt;# sum의 파라미터 : 1 - 행 별로 0 - 열 별로&lt;/p&gt;

&lt;h4 id=&quot;sort-value&quot;&gt;sort value&lt;/h4&gt;
&lt;p&gt;column 값을 기준으로 데이터 sorting&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.sort_values(['age', 'earn'],ascending=False)&lt;/code&gt; # sort by age &amp;gt; earn&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.sort_values(by='age', ascending = False)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;cumsth&quot;&gt;cumsth&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;cumsum&lt;br /&gt;
점점 증가함 : 1번째 줄 + 2번째 줄.. 2+3… 3+4… 증가해서 표현 &lt;br /&gt;
주식이나 시간에 순서에 따른 거래량 표현 등을 할 때 유용히 사용&lt;/li&gt;
  &lt;li&gt;cummax&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;correlation--covariance&quot;&gt;Correlation &amp;amp; Covariance&lt;/h4&gt;
&lt;p&gt;상관계수와 공분산을 구하는 함수&lt;br /&gt;
corr, cov, corrwith&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.age.corr(df.earn)&lt;/code&gt; 
나이와 소득간의 상관관계&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.corrwith(df.earn)&lt;/code&gt;
소득과 연관관계가 많은 것&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.corr()&lt;/code&gt; 
전체 간의 상관관계&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.age[df.age &amp;lt; 50].corr(df.earn)&lt;/code&gt;&lt;br /&gt;
55세 이하일 때 소득과 나이의 상관관계&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.age[(df.age &amp;lt; 45) &amp;amp; (df.age &amp;gt; 25)].corr(df.earn)&lt;/code&gt; 
나이 대가 증가함에 따라 소득도 증가함을 알 수 있음&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.corrwith(df.earn)&lt;/code&gt;
특정 데이터만 볼 수 있음&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df.sex.value_counts(sort=False)&lt;/code&gt;
성별 별 데이터&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;errors&quot;&gt;Errors&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;modulenotfounderror no module named 'pandas'&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;가상환경을 열어서 pandas 설치하고 지웠다가 다시 설치하고 컴퓨터 재부팅하고 막… 오만가지 난리를 펼치다가… 터미널 창에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;which python3&lt;/code&gt; 입력해서 나오는 주소를 py 파일 라인 1에 붙여넣고 실행하니 오류 해결!&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#! /Users/park-eunbin/miniconda3/envs/IP/bin/python3&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;b’Skipping line 13: expected 5 fields, saw 7\n’ -&amp;gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;data_frame = pd.read_csv(input_file, error_bad_lines=False, warn_bad_lines=False)&lt;/code&gt; 로 해결&lt;/li&gt;
  &lt;li&gt;pandas &lt;code class=&quot;highlighter-rouge&quot;&gt;.ix[]&lt;/code&gt; Message&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.ix is deprecated. Please use

.loc for label based indexing or

.iloc for positional indexing
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;delimiter =','&lt;/code&gt; 오류 &amp;gt; 해결 못함… 왜? 왜 $1,600.60을 제대로 못걸러내냐&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 10 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/python/2020/01/10/Pandas-101/</link>
        <guid isPermaLink="true">http://localhost:4000/study/python/2020/01/10/Pandas-101/</guid>
      </item>
    
      <item>
        <title>[Git] Git Study용 공부 주소</title>
        <description>&lt;p&gt;https://backlog.com/git-tutorial/kr/stepup/stepup2_6.html&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/git/2020/01/05/git-%E1%84%8E%E1%85%A1%E1%86%B7%E1%84%80%E1%85%A9-%E1%84%8C%E1%85%AE%E1%84%89%E1%85%A9/</link>
        <guid isPermaLink="true">http://localhost:4000/study/git/2020/01/05/git-%E1%84%8E%E1%85%A1%E1%86%B7%E1%84%80%E1%85%A9-%E1%84%8C%E1%85%AE%E1%84%89%E1%85%A9/</guid>
      </item>
    
      <item>
        <title>Liquid Exception 에러</title>
        <description>&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Liquid Exception: Liquid error (~): Internal Error: Invalid UTF-8 included in /_layoust/default.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;난 진짜 잘못한게 없다고 생각했는데…. 자꾸 에러가 떴고… 내부적 문제라고 얘기하는데 … 내부적문제 == 내 잘못 ^^의 공식… 나는 잘못한게 없는데 컴퓨터가 이상해! 하면서 껐다가 켜보기도 하고… 구글을 진짜 엄청 뒤졌는데 진짜 내잘못이었다 ^^&lt;/p&gt;

&lt;p&gt;컴푸터야 미안해~하핳&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/liquiderror2.png&quot; alt=&quot;liquiderror2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;css파일 주석처리를 제대로 안 해줘서 생긴 거지같은 일이었다….&lt;/p&gt;

&lt;p&gt;오늘의 교훈 : 컴퓨터는 잘못 없다.&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2020/01/05/github-%E1%84%87%E1%85%B3%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3-%E1%84%8B%E1%85%A9%E1%84%85%E1%85%B2/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/01/05/github-%E1%84%87%E1%85%B3%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3-%E1%84%8B%E1%85%A9%E1%84%85%E1%85%B2/</guid>
      </item>
    
      <item>
        <title>Linux Command Line Tools - 검색</title>
        <description>&lt;h3 id=&quot;find&quot;&gt;find&lt;/h3&gt;

&lt;p&gt;이름이나 속성 등의 조건에 맞는 파일을 찾아 명령 수행&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;find [OPTION] path EXPR&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;자주-사용되는-옵션&quot;&gt;자주 사용되는 옵션&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;조건&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-name # 이름 검색, 가장 많이 사용&lt;/li&gt;
  &lt;li&gt;-regex # regex에 매치로 검색&lt;/li&gt;
  &lt;li&gt;-empty # 빈 디렉토리 혹은 빈 파일 검색&lt;/li&gt;
  &lt;li&gt;-size # 사이즈 검색 (M, G 표기 가능)
    &lt;ul&gt;
      &lt;li&gt;-N # 이하&lt;/li&gt;
      &lt;li&gt;+N # 이상&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;-perm # 퍼미션 검색
    &lt;ul&gt;
      &lt;li&gt;mode # 정확히 일치하는 파일&lt;/li&gt;
      &lt;li&gt;+mode # 모든 flag가 포함된 파일&lt;/li&gt;
      &lt;li&gt;/mode # 어떤 flag라도 포함된 파일&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;-type # 파일 타입 검색
    &lt;ul&gt;
      &lt;li&gt;d # directory&lt;/li&gt;
      &lt;li&gt;p # named pipe&lt;/li&gt;
      &lt;li&gt;f # regular file&lt;/li&gt;
      &lt;li&gt;l # softdrink&lt;/li&gt;
      &lt;li&gt;s # socket&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;액션&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-delete # 파일 삭제&lt;/li&gt;
  &lt;li&gt;-ls # ls -dils 명령 수행&lt;/li&gt;
  &lt;li&gt;-print # 파일 이름 출력&lt;/li&gt;
  &lt;li&gt;-printf # 파일 이름을 포맷에 맞게 출력&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;-exec&lt;/strong&gt; # 주어진 명령 수행&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;-execdir&lt;/strong&gt; # 해당 디렉토리로 이동하여 명령 실행&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;-ok&lt;/strong&gt; # 사용자 확인 후 exec&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;-okdir&lt;/strong&gt; # 사용자 확인 후 실행 execdir&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;eg&quot;&gt;e.g.&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;find . -name “*.py” # 현재 디렉토리에서 py 파일 찾기&lt;/li&gt;
  &lt;li&gt;find . -regextype egrep -regex ‘.*hash.*.py$’ # $ 파일의 끝을 명시함. hash 앞뒤로 글이 있는 py 파일&lt;/li&gt;
  &lt;li&gt;find . -empty&lt;/li&gt;
  &lt;li&gt;find . -type&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;find . -perm 0644&lt;/td&gt;
          &lt;td&gt;wc -l&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;find . -perm /u+x  # owner 실행권한이 포함된 파일을 출력 / find: -perm: /u+x: illegal mode string&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;find . -perm /001 -ls # -perm: /001: illegal mode string&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;find . -name -exec {} \;&lt;/li&gt;
  &lt;li&gt;find . -name -execdir {} \;&lt;/li&gt;
  &lt;li&gt;find . -name -ok rm -f {} \; # 안전하게 파일 삭제 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;grep&quot;&gt;grep&lt;/h3&gt;

&lt;p&gt;파일 내용 중 원하는 내용 찾기&lt;/p&gt;

&lt;p&gt;grep [&lt;strong&gt;OPTION&lt;/strong&gt;] PATTERN [FILE…]&lt;/p&gt;

&lt;h4 id=&quot;자주-사용되는-옵션-1&quot;&gt;자주 사용되는 옵션&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;-r&lt;/strong&gt; # recursive&lt;/li&gt;
  &lt;li&gt;-i # ignore case&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;-v&lt;/strong&gt; # invert match # 패턴과 매치가 되지 않는 걸 찾음&lt;/li&gt;
  &lt;li&gt;-q # quiet mode # 성공.실패만 판단하고 싶을 때&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;eg-1&quot;&gt;e.g.&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;grep PATTERN *.py # py 파일에 PATTERN 이 포함된 걸 찾아라&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;grep PATTERN *.py&lt;/td&gt;
          &lt;td&gt;awk -F: ‘{print $1}’&lt;/td&gt;
          &lt;td&gt;sort -u # 패턴이 들어있는 파일 검색 후 awk 명령어로 파일 이름 분류 후 sort로 unique 한 것만 출력&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;echo $? # 최근에 실행된 명령어, 함수, 스크립트 자식의 종료 상태 / 0 = 성공&lt;/li&gt;
  &lt;li&gt;grep “\&amp;lt;for\&amp;gt;” *.py # 단어단위 검색&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;apropos&quot;&gt;apropos&lt;/h3&gt;

&lt;p&gt;man page 이름과 설명 검색&lt;/p&gt;

&lt;h4 id=&quot;자주-사용되는-옵션-2&quot;&gt;자주 사용되는 옵션&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;-s, –sections=LIST, –section=LIST # ㅌ탐색할 섹션을 으로 구분하여 입력&lt;/li&gt;
  &lt;li&gt;1 : 일반적 툴&lt;/li&gt;
  &lt;li&gt;2 : 시스템 콜&lt;/li&gt;
  &lt;li&gt;3 : 라이브러리 함수&lt;/li&gt;
  &lt;li&gt;7 : Overview 등의 개념&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;eg-2&quot;&gt;e.g.&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;apropos print&lt;/li&gt;
  &lt;li&gt;apropos pthread&lt;/li&gt;
  &lt;li&gt;apropos pthread -s 7&lt;/li&gt;
  &lt;li&gt;apropos ‘^sem_’&lt;/li&gt;
  &lt;li&gt;apropos ‘.*’&lt;/li&gt;
  &lt;li&gt;apropos ‘.*’ -s 5:6:7&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;locate&quot;&gt;locate&lt;/h3&gt;

&lt;p&gt;파일 위치를 보여줌&lt;/p&gt;

&lt;p&gt;단, updateddb가 저장해놓은 DB파일 내에서 검색하므로 누락 파일 존재 가능&lt;/p&gt;

&lt;p&gt;updateddb : os 레벨에서 정기적으로 업데이트 함&lt;/p&gt;

&lt;p&gt;어떤 파일이든 찾아서 보임&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;locate [OPTION]… PATTERN&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;자주-사용되는-옵션-3&quot;&gt;자주 사용되는 옵션&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;-i, –ignore-case&lt;/li&gt;
  &lt;li&gt;-l, -limit, -n LIMIT&lt;/li&gt;
  &lt;li&gt;–regex&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;eg-3&quot;&gt;e.g.&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;locate main.c -n 10 #&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;which&quot;&gt;which&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;실행 파일&lt;/strong&gt;의 위치를 알려줌 &amp;gt; 일반적인 파일은 불가능&lt;/p&gt;

&lt;h4 id=&quot;eg-4&quot;&gt;e.g.&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;which ls&lt;/li&gt;
  &lt;li&gt;which chmod&lt;/li&gt;
  &lt;li&gt;which ls strace chmod&lt;/li&gt;
  &lt;li&gt;which ifconfig&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 03 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/linux/2020/01/03/LinuxCommandTools_2/</link>
        <guid isPermaLink="true">http://localhost:4000/study/linux/2020/01/03/LinuxCommandTools_2/</guid>
      </item>
    
      <item>
        <title>Claasical Cryptography</title>
        <description>&lt;p&gt;&lt;strong&gt;Caesar Cryptography&lt;/strong&gt; : 순서를 조절&lt;/p&gt;

&lt;p&gt;&amp;gt; Replace a letter into the next of the next - We can express the Caesar encryption algorithm into an equation&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Easy to break 2. Only 25 keys 3. Vulnerable to brute force attack encryption 
E(k(밀어낼 자릿수-형문), p-키) … x,y,z 는 보통 나눈 후 나머지를 차용 e.g. 3을 더한다음에 26으로 나눈 나머지… 
복호화 D(키, 사이퍼텍스트) 
쓸 수 있는 키의 경우의 수가 25개 &amp;gt; 쉽게 깨짐&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Single letter substitution&lt;/strong&gt; ( 전형적인 암호문 )&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Replace a letter to another&lt;/li&gt;
  &lt;li&gt;26! keys are possible .. &amp;gt; Calculate the frequency of a letter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;각 글자가 나온 빈도수를 계산 &amp;gt; E, T가 가장 많이 사용됨 &amp;gt; P, Z가 높은 확률로 e, t&lt;/p&gt;

&lt;p&gt;많이 나오는 패턴을 분석해 단어를 조합 (the … ) 키가 무조건 많다고 해서 안전한 것은 아님.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Playfair&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;- Multiple-letter encryption ( Create 5x5 matrix based on a given keyword )&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/cG0LJu/btqAOb1ygQz/lPAGV2RxtMFdpfIJiPx0Z1/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vernam&lt;/strong&gt; ( 지금도 쓰이는 방식 )&lt;/p&gt;

&lt;p&gt;- Use key streams&lt;/p&gt;

&lt;p&gt;xor - 0111  &amp;gt; A O+ B O+ B = A … xor이 두 번 되면 제자리로 돌아옴&lt;/p&gt;

&lt;p&gt;​    1010&lt;/p&gt;

&lt;p&gt;————&lt;/p&gt;

&lt;p&gt;​     1101&lt;/p&gt;

&lt;p&gt;아이번째 키 O+ 아이번째 플레인 텍스트 = 암호화&lt;/p&gt;

&lt;p&gt;E (k, p) = ki O+ pi각각에 대해 xor&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/dIo22d/btqAQ4mJoDr/3EWPPewkSivpcG8PJcJUvk/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One time pad&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Use a key stream that is perfectly random without any repetition&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;One Time Pad provides prefect security&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Impractical&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;The size of a key stream should be the same as that of its message&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;원타임패드~ &amp;gt; 버남 + 부가 조건 &amp;gt; 키 스트림 = 플레인 텍스트&lt;/p&gt;

&lt;p&gt;원타임 패드의 조건 = 일회용… + 완벽한 랜덤 … 퍼펙트 시큐리티라는게 도달하기 힘든 뉴스 &amp;gt; 활용성 저하&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rail fence&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Transposition&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rotor Machine&lt;/strong&gt; : 현대 컴퓨터로 넘어가기 전에 쓰인 가장 대표적이고 독특한 암호&lt;/p&gt;

&lt;p&gt;- The Enigma machine : Consists of multiple (3) cylinders &amp;gt; 26^3 = 17,576 substitutions&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Symmetric Cryptography&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;plaintext - original message&lt;/p&gt;

&lt;p&gt;ciphertext - coded message 
cipher - algorithm for transforming plaintext to ciphertext 알고리즘 자체
key - info used in cipher known only to sender/receiver 암복호화 할 때
encipher (encrypt) - converting plaintext to ciphertext 플 &amp;gt; 암
decipher (decrypt) - recovering ciphertext from plaintext 
cryptography - study of encryption principles/methods 암호학
cryptanalysis (codebreaking) - study of principles/ methods of deciphering ciphertext without knowing key&lt;/p&gt;

&lt;p&gt;cryptology - field of both cryptography and cryptanalysis&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Symmetric Cipher Model&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;대칭 : 가운데를 기준으로 잘라 봤을 때 키가 똑같음.&lt;/p&gt;

&lt;p&gt;대칭 : 키 두개가 대칭이다 &amp;gt; 암호화 할 때랑, 복화하할 때랑&lt;/p&gt;

&lt;p&gt;K의 키가 같으면 대칭키라고 함. 원래 당연시 여겨졌는데, 이게 꼭 두개가 같을 필요가 없다는 말이 생기고는 다양한 기술이 나옴&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/GHl5G/btqARh66P5y/7DLWjkwN7aYjxIqznO0a21/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;two requirements for secure use of symmetric encryption:&lt;/li&gt;
  &lt;li&gt;a strong encryption algorithm&lt;/li&gt;
  &lt;li&gt;a secret key known only to sender / receiver mathematically have:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Y = E(K, X)&lt;/p&gt;

&lt;p&gt;X = D(K, Y)
- assume encryption algorithm is known implies a secure channel to distribute key&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cryptography&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Number of keys 1. Single Key 2. Two Key ( Private and Public )&lt;/p&gt;

&lt;p&gt;싱글키 : 우리가 알고있는 대칭키암호, 암호화 복호화가 같아서 하나만 쓰이는 것.&lt;/p&gt;

&lt;p&gt;더블키 : 퍼블릭 크립토지만, 암복호화 키가 다름. 이걸로만 암호화하면 이걸로만 복호화할 수 있고…&lt;/p&gt;

&lt;p&gt;요즘 디지털서명, 공인인증서에 사용됨&lt;/p&gt;

&lt;p&gt;Plain text processing 1. Block 2. Stream&lt;/p&gt;

&lt;p&gt;블럭 : 하나의 묶음 일종의 양동이. 대부분이 블럭 암호화. 용도 : 고정된 데이터 ( 하드디스크, 영화파일, 이메일 _) - 실시간성에서는 안 좋음. 딜레이 발생&lt;/p&gt;

&lt;p&gt;스트림 : 흘러가는 것. 단순하지만 블럭 암호가 발전되어 있고 대중화되어 있음. ( 넷플릭스, 실시간 주고받는 경우 실시간으로 데이터가 생길 때마다 암호화 해야 함. )&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cryptanalysis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;- objective to recover key not just message&lt;/p&gt;

&lt;p&gt;- general approaches: 1. cryptanalytic attack 2. brute-force attack&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How secure?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Perfectly secure - Unconditionally secure&lt;/p&gt;

&lt;p&gt;Computationally secure - 비용자체가 (시간 돈 등) 정보 자체의 가치보다 암호문깨는 비용이 더 듦&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The cost of breaking the cipher exceeds the value of information&lt;/li&gt;
  &lt;li&gt;The time required to break the cipher exceeds the lifetime of information&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Brute Force Search ( Or brute force attack )&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;always possible to simply try every key&lt;/li&gt;
  &lt;li&gt;most basic attack, proportional to key size ( 상대적인 경우 )&lt;/li&gt;
  &lt;li&gt;assume either know / recognise plaintext&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/ErMRa/btqARx2VV2y/HviVvEEm8PYS7qqmpelnI1/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feistel Cipher Structure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt; based on concept of invertible product cipher&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;partitions input block into two halves&lt;/li&gt;
  &lt;li&gt;process through multiple rounds which perform a substitution on left data half
based on round function of right half &amp;amp; 
subkey then have permutation swapping halves&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;block size: 128 bits&lt;/p&gt;

&lt;p&gt;key size: 128 bits&lt;/p&gt;

&lt;p&gt;number of rounds: 16 subkey generation algorithm&lt;/p&gt;

&lt;p&gt;Round function fast software en/decryption&lt;/p&gt;

&lt;p&gt;장점 : 암호문 생성 이후 복호화 할 때 거꾸로 하면 됨.&lt;/p&gt;

&lt;p&gt;&amp;gt; 구조는 똑같이 사용하면서 키만 거꾸로 넣으면 됨.&lt;/p&gt;

&lt;p&gt;F(k, R)만 복잡하게 만들면 됨. 서브키를 16개 만듦 
F박스 함수를 지저분하게 만들면 됨&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Symmetric Block Cipher Algorithms&lt;/strong&gt; - 이름 / 특성 / 나오게 된 이유&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;DES (Data Encryption Standard) - 미국 니스트 (표준평가원 등) 
adopted in 1977 by NBS (now NIST) as FIPS PUB 46
encrypts 64-bit data using 56-bit key
대부분의 암호들이 블럭을 64로 하면 키도 64로 하는데 des 는 56을 사용함
has widespread use / considerable controversy over its security 
1) Feistel cipher structure 
2) 56-bit key
3) Block cipher
4) 16 rounds 
5) S-Box for non-linearity 
&amp;gt; 완전하게 만드는 방법 &amp;gt; 키 사이즈 늘리기 … 트리플 des 나옴&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/GmdoM/btqASzlGczv/iADvaYRuT7esLrLsFFO5n1/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;3DES (Triple DES) 
&amp;gt; 트리플은 중간에 암호화 복호화를 한 번 거침
공학적 해결 방법 : 암호화를 세 번 하는데 중간에 복호화를 함. 일반적으로 암호기법을 칩에다 만들어 침으로 가는 경우가 많음. 그래서 회로로 넣어놓음. 가끔가다가 des를 쓰고싶을 때 키 값을 같은 걸로 줌 &amp;gt; 트리플 디를 쓴 것 처럼 세 번 커짐. 회로를 두 개를 만드느니.. 하나만 만들어서 비용절감을 이룸&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AES (Advanced Encryption Standard) - 가장 많이 쓰임 
has 128/192/256 bit keys, 128 bit data 
&amp;gt; an iterative rather than feistel cipher : processes data as block of 4 columns of 4 bytes 
operates on entire data block in every round 
키 사이즈가 여러가지 &amp;gt; 라운드를 16번 돌면 128, 16+8이면 192… 사용자가 원하는 만큼 … 
모든 데이터가 256비트가 필요한 건 아니기 때문에. 무조건 안전하게 만드는 게 아니라 계산적 안정을 줌&lt;/p&gt;

    &lt;p&gt;Designed to be …
-1 resistant against known attack
-2 speed and code compactness on many CPUs
-3 design simplicity
initial XOR key material &amp;amp; incomplete last round with fast XOR &amp;amp; table lookup implementation&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;구조는 똑같고 돌 때마다 새로운 키가 있어서 변화를 많이 시킴. 페이스탈처럼 단순하지는 않지만 여러번 돌리는 구조는 같음. 라운드를 많이 돌리고 그 때마다 새로운 키를 넣고… 많이 시도하면서 계속 어그러트려서 암호를 만듦. 많이 어그러트리려면 키 사이즈가 늘어나야하고…브루텔 기법을 더이상 사용할 수 없음.&lt;/p&gt;

&lt;p&gt;암호화를 해야한다고 하면 거의 256으로 함. CPU에 보통 이제 박혀있음 너무 많이 쓰기 때문에&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/security/2020/01/02/classical-cryptography/</link>
        <guid isPermaLink="true">http://localhost:4000/study/security/2020/01/02/classical-cryptography/</guid>
      </item>
    
      <item>
        <title>Modern Cryptography</title>
        <description>&lt;p&gt;현대 암호 : 컴퓨터가 암호화하고, 데이터가 2진수이며 이것이 암호화 된다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Public-key Cryptography&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;probably most significant advance in the 3000 year history of cryptography&lt;/li&gt;
  &lt;li&gt;uses two keys – a public &amp;amp; a private key&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;asymmetric&lt;/strong&gt; since parties are not equal&lt;/li&gt;
  &lt;li&gt;uses clever application of number theoretic concepts to function&lt;/li&gt;
  &lt;li&gt;complements rather than replaces private key crypto&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2개의 키, 암호화 할 때 대칭암호 씨멘틱 암호였는데, 이것은 암호키가 2개. 동시에 생겨남.&lt;/p&gt;

&lt;p&gt;완벽하게 페어, 맞물림. 다른 페어가 존재할 수 없음&lt;/p&gt;

&lt;p&gt;&amp;gt; 한꺼번에 만들어지기 때문에. 두 개의 키가 특이하게 하나로 암호화, 복호화가 가능. ?&lt;/p&gt;

&lt;p&gt;가장 중요한 특성!! 동시생성, 하나로 암호화 하면 하나로만 복호화가 가능함&lt;/p&gt;

&lt;p&gt;이게 가능해진 후로 할 수 있는 일이 많아짐 : 두 개가 생겨서 나누면? 두 개를 다 갖고 있을 필요가 없음.&lt;/p&gt;

&lt;p&gt;특징 중 하나가 a를 갖고 a’를 유추할 수 없음 짐작 불가능. 키를 내놓으면 모든사람에게 보여주고 알려주기 때문에 공개키라고 부름. 그래서 퍼블릭! 나머지 하나는 공개하지 않고 소장 &amp;gt; 개인, 비밀키&lt;/p&gt;

&lt;p&gt;비밀키는 보통 개인키라고 부름. 공개와 개인키가 있는데, 공개키는 모두가 알고 개인키는 나만 앎. 공개키로 암호화를 해서 암호화 한다. 이 암호화 된 건. a’만 풀 수 있음. 퍼블릭키로 암호화 해서 보내기만 하면 a’만 볼 수 있기 때문에 더욱 쉬어짐&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;key distribution&lt;/strong&gt; – how to have secure communications in general without having to trust a KDC with your key&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;digital signatures&lt;/strong&gt; – how to verify a message comes intact from the claimed sender :&lt;/p&gt;

&lt;p&gt;&amp;gt; 프라이빗 키의 암호화&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;플레인 텍스트 암호화 (상대방 키를 알고 있다는 의미에서 ) 밥이 앨리스한테 보내는데, 앨리스의 퍼블릭 키로 보냄 &amp;gt; 표기할 때는 y = E(k, x) » X = D(k, y)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;k가 같으니까 대칭키&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;앨리스한테 보낼 때 Y = 아무나 알고 있음 E(PUa, x) » X = D(PRa, Y) - 앨리스만 알고 있음&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a public-key,&lt;/strong&gt; which may be known by anybody, and can be used to encrypt messages, and verify signatures&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a related private-key,&lt;/strong&gt; known only to the recipient, used to decrypt messages, and sign ( create ) signatures&lt;/p&gt;

&lt;p&gt;&amp;gt; those who encrypt messages or verify signatures cannot decrypt messages or create signatures&lt;/p&gt;

&lt;p&gt;모든 사람은 내가 공개한 공개키를 보고 나에게 보내면 됨.!! 인터넷은 암호화통신을 해야하는데, 몇 억명 유저 키를 관리할 수는 없음. 이런 문제를 해결함. 거꾸로 공개키로 암호화하면 내가 안전히 받을 수 있음. 개인키로 암호화하면 퍼블릭 키로 풀 수 있음 &amp;gt; 개인키를 암호화하면 공개키가 있는 아무나가 풀 수 있음. 모두 풀어볼 수 있음.&lt;/p&gt;

&lt;p&gt;대신 이 것은 개인키로는 나만 암호화 할 수 있기에 받은 사람 입장에서는 공개키로 풀 수 있기 때문에 … ? 이 메세지는 확실한 개인키 (수신인)를 나타내는 효과가 있다 » 디지털 서명!?!? 신뢰?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/bcmhGR/btqAOdd01dA/kfhZ6ArDwfjK7lVSZ76Kt1/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;신경써야 하는 것 &amp;gt; 공개키가 있는데,,, 내 건지 어떻게 아는지? 공개키를 무언가 뒤집어 씌울 수도 있는데?&lt;/p&gt;

&lt;p&gt;&amp;gt; 누군가 이게 나의 공개키인지 확인을 해주어야 하는데,, 공개키마다 믿을 수 있는 사람을 확인해주자 해서&lt;/p&gt;

&lt;p&gt;제3자.. 확인을 해줌. 공인인증서….&lt;/p&gt;

&lt;p&gt;내 퍼블릭 키가 인증을 공공적으로 확인을 받음 국민은행이 이것을 보증합니다 해서 누구한테 들이밀어도 공개키를 뒤져봐도 신뢰 가능&lt;/p&gt;

&lt;p&gt;퍼블릭키 문제점 : 느림,, 보통 대칭키보다 1000배 느리고 연산량과 전기가 많이 듦. 좋긴 한데 많이 쓰면 안 좋음&lt;/p&gt;

&lt;p&gt;데이터 자체 암호화가 아니라,, AES, DES (빠르고 효율적이고 안전, 키를 따로따로가 문제) 키를 랜덤으로 만든다음 키만 퍼블릭키로 암호화 해서 보내면 상대방은 안전하게 받을 수 있음. 만들어서 주었기 때문에 둘만 알 고 있음 &amp;gt; AES, DES 로 풀면 됨 !! 연산이 많아도 상관은 없음 : 데이터 양이 많으면 무조건 대칭키!!&lt;/p&gt;

&lt;p&gt;키 분배 과정은 처음에 AES, DES로 암호화 해야하기 대문에 필요함&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RSA&lt;/strong&gt; - 수학적 특성 사용&lt;/p&gt;

&lt;p&gt;- to encrypt a message M the sender: obtains public key of recipient PU={e,n}&lt;/p&gt;

&lt;p&gt;computes: C = Me mod n, where 0≤M&amp;lt;n&lt;/p&gt;

&lt;p&gt;- to decrypt the ciphertext C the owner: uses their private key PR={d,n}&lt;/p&gt;

&lt;p&gt;computes: M = Cd mod n&lt;/p&gt;

&lt;p&gt;note that the message M must be smaller than the modulus n (block if needed)&lt;/p&gt;

&lt;p&gt;publish their public encryption key: PU={e,n} 
keep secret private decryption key: PR={d,n}&lt;/p&gt;

&lt;p&gt;안정성이 보장되는 이유 : 소인수분해가 거의 불가능하기 때문에 유추 불가능&lt;/p&gt;

&lt;p&gt;암호화 : 메세지이긴 하지만 2진수인 알파벳 한 개 (ex, M) 에 e승을 하고 mod n 를 곱함 = C » 암호문&lt;/p&gt;

&lt;p&gt;복호화 &amp;gt; C^d * mod n== (M^e) d = M^ed mod n&lt;/p&gt;

&lt;p&gt;프라이빗 키로 먼저 암호화 했을 때 (M^d)e == M^de mod n == M^@(n)+1 mod n = M&lt;/p&gt;

&lt;p&gt;* &lt;strong&gt;RSA Example&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Select primes: p=17 &amp;amp; q=11&lt;/p&gt;

&lt;p&gt;Calculate n = pq =17 x 11=187&lt;/p&gt;

&lt;p&gt;Calculate ø(n)=(p–1)(q-1)=16x10=160&lt;/p&gt;

&lt;p&gt;Select e: gcd(e,160)=1; choose e=7&lt;/p&gt;

&lt;p&gt;Determine d: de=1 mod 160 and d &amp;lt; 160 Value is d=23 since 23x7=161= 10x160+1&lt;/p&gt;

&lt;p&gt;Publish public key PU={7,187}
Keep secret private key PR={23,187} a&lt;/p&gt;

&lt;p&gt;&amp;gt; asample RSA encryption/decryption is:&lt;/p&gt;

&lt;p&gt;given message M = 88 (nb. 88&amp;lt;187)&lt;/p&gt;

&lt;p&gt;encryption: C = 887 mod 187 = 11&lt;/p&gt;

&lt;p&gt;decryption: M = 1123 mod 187 = 88&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Diffie-Hellman Key Exchange&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/N44He/btqARW2t4YF/KkfEZgRF8wU1eWuO2wGfmk/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;First public-key type scheme proposed / practical method for public exchange of a secret key&lt;/dt&gt;
  &lt;dd&gt;
    &lt;p&gt;used in a number of commercial products&lt;/p&gt;
  &lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;a public-key distribution scheme
  cannot be used to exchange an arbitrary message&lt;/p&gt;

&lt;p&gt;rather it can establish a common key&lt;/p&gt;

&lt;p&gt;known only to the two participants&lt;/p&gt;

&lt;p&gt;value of key depends on the participants (and their private and public key information)&lt;/p&gt;

&lt;p&gt;- based on exponentiation in a finite (Galois) field (modulo a prime or a polynomial) - easy&lt;/p&gt;

&lt;p&gt;- security relies on the difficulty of computing discrete logarithms (similar to factoring) – hard all users agree on global parameters:&lt;/p&gt;

&lt;p&gt;large prime integer or polynomial q&lt;/p&gt;

&lt;p&gt;a being a primitive root mod q •&lt;/p&gt;

&lt;p&gt;each user (eg. A) generates their key&lt;/p&gt;

&lt;p&gt;chooses a secret key (number): X &amp;lt; q&lt;/p&gt;

&lt;p&gt;compute their public key: YA = a^xa mod q&lt;/p&gt;

&lt;p&gt;each user makes public that key Ya&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Alice&lt;/th&gt;
      &lt;th&gt;Bob&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;G&lt;/td&gt;
      &lt;td&gt;G&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Xa&lt;/td&gt;
      &lt;td&gt;Xb&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;g^Xa mod n&lt;/td&gt;
      &lt;td&gt;g^Xb mod n&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(g^Xb)^Xa&lt;/td&gt;
      &lt;td&gt;(g^Xa)^Xb&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;shared session key for users A &amp;amp; B is KAB:&lt;/p&gt;

&lt;p&gt;&amp;gt; if Alice and Bob subsequently communicate, they will have the same key as before, unless they choose new public - key&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Man-in-the-Middle Attack&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;공격에 취약함 : 중간자 공격&lt;/p&gt;

&lt;p&gt;앨리스랑 밥 사이에 서있음. 중간에서 통신을 끊음 &amp;gt; 중간자만의 Xc를 만들어서 앨리스의 g^Xa를 끊고, 나의 g^Xc를 보냄, 반대도 마찬가지&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;결과는 (g^Xc)^Xa&lt;/td&gt;
      &lt;td&gt;(g^Xc)^Xb가 되기 때문에 중간에 낀 사람은 양쪽 모두와 통신을 할 수 있지만 서로는 전혀 모름.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;일반적으로는 몇 가지 기능을 넣어서 서로를 확인할 수 있게 함&lt;/p&gt;

&lt;p&gt;퍼블릭 키 : 키 익스체인지 - 동등한 정보를 나눠가질 때 &amp;gt; 맨인더미들 어택이랑 연결됨&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Digital Signature&lt;/strong&gt; E(PrivateR, H)&lt;/p&gt;

&lt;p&gt;have looked at message authentication &amp;gt; but does not address issues of lack of trust&lt;/p&gt;

&lt;p&gt;digital signatures provide the ability to:&lt;/p&gt;

&lt;p&gt;- verify author, date &amp;amp; time of signature&lt;/p&gt;

&lt;p&gt;- authenticate message contents&lt;/p&gt;

&lt;p&gt;- be verified by third parties to resolve disputes&lt;/p&gt;

&lt;p&gt;hence include authentication function with additional capabilities&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/bkxvY1/btqARwQudYv/xaCjv6BKviL3aZ7WtCQqKk/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/cd2p5b/btqAOIY9MI7/RMsxM1WmpgMSQIPExU9SqK/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/security/2020/01/02/Modern-cryptography/</link>
        <guid isPermaLink="true">http://localhost:4000/study/security/2020/01/02/Modern-cryptography/</guid>
      </item>
    
      <item>
        <title>Security Requirements, Attacks and Model for network security</title>
        <description>&lt;p&gt;&lt;strong&gt;Security Requirements Triad&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CONFIDENTIALLITY&lt;/strong&gt; : Preserving authorized restrictions on information access and disclosure, including means for protecting personal privacy and proprietary information. 
&amp;gt; 기밀성 - 무언가를 보이고 싶지 않을 때 (가장 대표적인 형태)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;INTEGRITY&lt;/strong&gt; : Guarding against information modifications or destruction, including ensuring information non-repudiation and authenticity&lt;/p&gt;

&lt;p&gt;&amp;gt; 무결성 - 정보가 허가없이 변경이 되지 않았다는 것.&lt;/p&gt;

&lt;p&gt;e.g ) 10만원을 송금할 때 누군가 100만원으로 고칠 수 없음 &amp;gt; 무결성이 깨짐&lt;/p&gt;

&lt;p&gt;**
AVALIABILITY** :Ensuring timely and reliable access to and use of information 
&amp;gt; 가용성 - 사용자가 사용하려할 때 사용할 수 있는가?&lt;/p&gt;

&lt;p&gt;e.g ) 수강신청, 등의 서버 다운 &amp;gt; 해당 서비스를 받지 못하는 상황&lt;/p&gt;

&lt;p&gt;== 아무리 보안이 지켜지더라도 사용하지 못하면 의미 없음&lt;/p&gt;

&lt;p&gt;3가지가 모두 지켜져야 하는 건 아니고 용도에 따라 달라짐. 공고를 냈을 때는 무결성 가용성만,,,&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Security attacks, mechanisms &amp;amp; services&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;\1. Security Attack
  - Any action that compromises the security of information&lt;/p&gt;

&lt;p&gt;\2. Security Mechanism&lt;/p&gt;

&lt;p&gt;- A process / device that is designed to detect, prevent or Security Service recover from a security attack.&lt;/p&gt;

&lt;p&gt;\3. Security Service&lt;/p&gt;

&lt;p&gt;- A service intended to counter security attacks, typically by implementing one or more mechanisms.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/W18D1/btqASz63mOh/cOePQK3YbGtHHDFpKUypxK/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Passive attacks&lt;/strong&gt; 
\1. 릴리즈 - 내가 공격을 수행하지만 참여하지 않음.&lt;/p&gt;

&lt;p&gt;공격이 수행되고 있지만 특별히 가담하고 있는 것은 아님.&lt;/p&gt;

&lt;p&gt;내가 중간에서 끼어들지 않는 것.&lt;/p&gt;

&lt;p&gt;대표적인 것 : 도청… 바비 앨리스 통신 중 중간에서 내용을 읽음 - 도청은 중간에 가로막거나 끊지 않음&lt;/p&gt;

&lt;p&gt;&amp;gt; 패시브 어택 가장 대표적 형태&lt;/p&gt;

&lt;p&gt;\2. 교통량, 통화량 분석 - 트래픽 애널리시스 :&lt;/p&gt;

&lt;p&gt;교통량이 얼마나 되느냐를 분석. 통신 중 내용을 읽을 수 있으면&lt;/p&gt;

&lt;p&gt;도청, but 통신이 진행중이라는 것, 양을 분석하는 것. !!&lt;/p&gt;

&lt;p&gt;트래픽은 일반적으로 암호화가 되어 있어서 내용은 모르지만&lt;/p&gt;

&lt;p&gt;지나가는 데이터의 용량을 보고 언어정도는 분석&lt;/p&gt;

&lt;p&gt;ex ) 예전에 911 이후에 아프가니스탄 침공할 때… 침공할까 날짜기 궁금했는데 미국방부 앞에 앉아서 지나가는 피자 트럭의 갯수를 셈.저녁에 피자 트럭이.. 갑자기 피자 트럭이 60~70대로 늘어난다면 ? 그만큼 많은 사람들의 야근 &amp;gt; 무언가 할 일이 있다는 의미….. »&amp;gt; 트래픽 아날 .. 간접적으로라도 분석이 가능&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Active attacks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/dhiVPD/btqAQ3gVp1P/A5eAsCBji7Po4nP7WbvrNk/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;\1. 매스커레이드 :: 타인인 척 하는 것&lt;/p&gt;

&lt;p&gt;\2. 리플레이 어택 :: 리플레이 ! 재시작 &amp;gt; 한 번 메세지가 가면, 중간자가 갖고 있다가 다시&lt;/p&gt;

&lt;p&gt;발신자에게 보냄; 
전통적으로 문제가 되고 잘 통하는 공격. 
// 밥이 앨리스한테 만 원을 보낸다, 
메세지를 중간에 갖고있다가 그 메세지를 10분 후에 또 보내고 또 보내고…그럼 밥이 앨리스한테 계속 보내는 셈이 됨. 
밥이 앨리스한테 보내는 메세지를 그대로 가져왔기 때문에 서명, 비밀 정보를 그대로 갖고 있음. 완벽히 정리된 정확한 정보임.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/bk4AsR/btqAQOqMjZ5/xIscMgrRYyk0NgsJJTaLsK/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;인증받을 수 있는 정보 함양
 &amp;gt; 다시 보내니까 받는 입장에서는 구분 불가
 &amp;gt;&amp;gt; 막을 수 있는 방법. 
\1. 시간을 적어 놓음 (서버 시간을 조정으로 혼란 가중)
\2. 보내는 메세지마다 순서를 매긴다.&lt;/p&gt;

&lt;p&gt;\3. 모디피케이션 - 메세지를 받아서 변경하는 것 
\4. 가용성 - 내가 사용하고 싶을 때 쓰는 것.&lt;/p&gt;

&lt;p&gt;:: 가용성 공격 - 서비스 거부 공격**&lt;/p&gt;

&lt;p&gt;::(Denial Of Service) 도스 공격이라고 부름&lt;/p&gt;

&lt;p&gt;&amp;gt; 분산해서 공격하면 디도스
    (Distributed Dinial Of Service)&lt;/p&gt;

&lt;p&gt;요즘은 양이 많아지는 추세
막을 수 있는 방법 » 막기가 힘듦. 가게가 문을 열었는데 손님을 받긴 받았는데 저쪽에서 가짜 요청을 막 보냈는데 진짜와 가짜 요청을 구분해 내기가 힘듦.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Model for network security&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/bLCjx9/btqAQ3BfVLW/uBmWLk7eqlt60z06ugwn91/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;인포메이션 채널 (인터넷) , 어포넌트 (변조, 날조 등 채널)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;메세지에 무언가 변화를 주어 메세지를 암호화 해서 보낸다. 씨크릿 인포메이션 : 암호화시 쓰는 키 - 무언가 변조를 하는데 서로 알고 있는 걸로 변화를 줌 &amp;gt; 안전한 메세지로 변경. »&lt;/p&gt;

&lt;p&gt;특이한 것 : 써드 파티 제3자 - 신뢰할 수 있는 제3자의 도움을 받을 수 있음. 제3자를 통해 수발신자가 통신할 수 있음. 씨크릿 인포메이션에 무얼 집어넣느냐에 따라 달라짐.. 트리플 DES… 신뢰할 수 있는 제3자가 비밀&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/security/2020/01/02/Model-for-network-security/</link>
        <guid isPermaLink="true">http://localhost:4000/study/security/2020/01/02/Model-for-network-security/</guid>
      </item>
    
      <item>
        <title>머신러닝을 위한 Python 02</title>
        <description>&lt;h3 id=&quot;news-categorisitaion&quot;&gt;News Categorisitaion&lt;/h3&gt;

&lt;p&gt;숫자를 벡터로 좌표평면상에 올릴 수 있도록 바꾸어주어야 함.&lt;/p&gt;

&lt;p&gt;파이썬으로 얘기하면 lmn 이 많은 벡터를 만들고 벡터끼리의 거리를 만들면 됨.&lt;/p&gt;

&lt;p&gt;문자 &amp;gt; 숫자 &amp;gt; Vector&lt;/p&gt;

&lt;p&gt;One hot Encoding (Bag of Words) 기본적 문서에 대한 벡터 표현&lt;/p&gt;

&lt;p&gt;하나의 단어를 벡터로 인식하기 위해서는 벡터 스페이스를 만듦&lt;/p&gt;

&lt;p&gt;벡터 스페이스 : 각 글자들이 어떤 인덱스에 포함되는지 정의한 공간
단어별로 인덱스를 부여해 문장에 단어가 몇 개인지 표현&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;유사성-판별&quot;&gt;유사성 판별&lt;/h3&gt;

&lt;h5 id=&quot;euclidian-distance&quot;&gt;Euclidian distance&lt;/h5&gt;

&lt;p&gt;피타고라스 정리, 두 점 사이의 직선 거리&lt;/p&gt;

&lt;h5 id=&quot;cosine-distance&quot;&gt;cosine distance&lt;/h5&gt;

&lt;p&gt;두 점 사이의 각도, 데이터셋이 클 수록 잘 나오는 경향 존재&lt;/p&gt;

&lt;p&gt;더 많이 사용됨&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;파이썬 폴더끼리 연결 :&lt;/p&gt;

&lt;p&gt;os.path.join &amp;gt; 윈도우즈는 역슬래쉬, 리눅스나 맥은 슬래쉬라서 … 오에스에 맞추어 조인을 해줌&lt;/p&gt;

&lt;p&gt;os.sep &amp;gt; os에 따른 구분 기호 (\, /)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;corpus = 텍스트 워드로 인덱스를 만들어 줌 / 문서의 수 * 단어의 수 = 총 매트릭스의 크기&lt;/p&gt;

&lt;p&gt;하나의 문서에 대한 벡터값 단어 수와 같음.&lt;/p&gt;

&lt;p&gt;47라인 : 텍스트에서 단어를 뽑고, 단어를 전처리와 똑같은 방식으로 get_cleaned_text함수를 적용 : corpus 딕트 안에 키값을 사용해 이 값의 인덱스를 가져오는 것 == 전처리 방식이 동일해야 함. &amp;gt; corpus[get_cleaned_text(word)] turned to number // 결과값 : 3509 - 첫 번째 문서의 첫 번째 단어가 corpus dict 에 있는 3509 인덱스 값의 문자라는 뜻&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;word_number_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_cleaned_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;48라인 : 매트릭스 생성.&lt;/p&gt;

&lt;p&gt;[[0 for _ in range(len(corpus))] for x in range(len(text))]&lt;/p&gt;

&lt;p&gt;0을 text의 길이 (=80)에 corpus의 길이 (4032)만큼 2차원 배열로 생성&lt;/p&gt;

&lt;p&gt;for의 _(언더바) &amp;gt; 사용하지 않겠다는 의미&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;X_vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*50 ~ 53 line 이후 미리 만들었던 word number list (&lt;/em&gt;3509,,, 등등)에서 각각의 인덱스에 해당하는 값들을 1씩 올려주면 됨 **&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;    for i, text in enumerate(word_number_list):
        for word_number in text:
            X_vector[i][word_number] += 1
    return X_vector
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;전체 corpus 인덱스 번호 별로 어떤 단어가 몇 개 있는지 리스트 형태로 확인 가능&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;비교방법&quot;&gt;비교방법&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_cosine_similarity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;compute cosine similarity of v1 to v2: (v1 dot v2)/{||v1||*||v2||)&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sumxx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sumxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sumyy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sumxx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sumyy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sumxy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sumxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sumxx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sumyy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;첫 번째 문서와 두 번째 문서의 유사도를 보여줌&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;비교-결과&quot;&gt;비교 결과&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_similarity_score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X_vector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;source_vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X_vector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;similarity_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target_vector&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X_vector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;similarity_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;get_cosine_similarity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source_vector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target_vector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;similarity_list&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_top_n_similarity_news&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;similarity_score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;operator&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;similarity_score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sorted_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itemgetter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;reversed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sorted_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;source : 찾고자 하는 문서&lt;/p&gt;

&lt;p&gt;similarity_score : 80개의 문서들이 비교 대상 문서와 얼마나 비슷한지 값이 저장됨. (0.6441510… )&lt;/p&gt;

&lt;p&gt;similarity_list : 1 개의 문서와 80개의 문서를 비교한 후에 저장되었음&lt;/p&gt;

&lt;p&gt;각 문서 번호들마다 얼마나 근접한지 값을 보여줄 것임.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;strong&gt;get_top_n_similarity_news&lt;/strong&gt;  : 키값으로 정렬해서 밸류값 중 가장 큰 값의 인덱스 값을 같이 반환해주는 함 / 가장 유사한 값 10개&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jan 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/python/2020/01/02/edwith-python-for-ML/</link>
        <guid isPermaLink="true">http://localhost:4000/study/python/2020/01/02/edwith-python-for-ML/</guid>
      </item>
    
      <item>
        <title>Linux Command Line Tools - 텍스트 처리</title>
        <description>&lt;h3 id=&quot;head&quot;&gt;head&lt;/h3&gt;

&lt;p&gt;문서 내용 앞 부분 출력&lt;/p&gt;

&lt;p&gt;파라미터를 주지 않으면 앞 10줄 출력&lt;/p&gt;

&lt;h5 id=&quot;자주-사용되는-옵션&quot;&gt;자주 사용되는 옵션&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;-c, –bytes  # num byte만 출력&lt;/li&gt;
  &lt;li&gt;-n, –lines  # num line 만 출력&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;eg&quot;&gt;e.g.&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;head ‘file.type’&lt;/li&gt;
  &lt;li&gt;head -n ‘num’ ‘file.type’&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;cat ‘file.type’&lt;/td&gt;
          &lt;td&gt;head -n ‘num’&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tail&quot;&gt;tail&lt;/h3&gt;

&lt;p&gt;문서 내용 뒷 부분 출력&lt;/p&gt;

&lt;p&gt;파라미터를 주지 않으면 끝 10줄 출력&lt;/p&gt;

&lt;h5 id=&quot;자주-사용되는-옵션-1&quot;&gt;자주 사용되는 옵션&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;-c, –bytes = [+]NUM # print num byte&lt;/li&gt;
  &lt;li&gt;-n, –lines = [+]NUM # print num line&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;-f&lt;/strong&gt;, –follow[={name&lt;/td&gt;
          &lt;td&gt;desc}] # 추가되는 내용 대기하다가, 추가 내용은 append 후 출력&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;-F # truncate &amp;gt; Re-Open &amp;gt; Follow ( using log rotate file )) # 파일이 지워졌다가 생겨도 따라감&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;eg-1&quot;&gt;e.g.&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;+5 = 5번째 줄 부터 끝까지 출력&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;tail -n ‘num’ ‘file.type’ # 뒤에서 ‘num’번째 줄 출력&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;cat ‘file.type’&lt;/td&gt;
          &lt;td&gt;tail -n ‘num’ # 상동&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wc-word-count&quot;&gt;WC (Word Count)&lt;/h3&gt;

&lt;p&gt;line/word/byte count 출력&lt;/p&gt;

&lt;p&gt;라인의 수가 특정 목적을 가진 정보 수가 되는 경우&lt;/p&gt;

&lt;h5 id=&quot;자주-사용되는-옵션-2&quot;&gt;자주 사용되는 옵션&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;-l # 라인수만 출력&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;eg-2&quot;&gt;e.g.&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;wc ‘file.type’ == wc -clmw ‘file.type’  # line	word	byte count	‘file.type’&lt;/li&gt;
  &lt;li&gt;wc *.py # 폴더 내 py파일 모두 확인&lt;/li&gt;
  &lt;li&gt;wc -l ‘file.type’ # line 수&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;wc -l ‘file.type’&lt;/td&gt;
          &lt;td&gt;awk ‘{print $1}’&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;nl&quot;&gt;nl&lt;/h3&gt;

&lt;p&gt;파일 내용을 라인 넘버와 함께 출력&lt;/p&gt;

&lt;p&gt;코드 첨부 후 설명할 때 유용함 ?&lt;/p&gt;

&lt;h5 id=&quot;자주-사용되는-옵션-3&quot;&gt;자주 사용되는 옵션&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;-ba # 모든 라인 넘버링&lt;/li&gt;
  &lt;li&gt;-v N # 시작 라인 넘버를 N으로 지정&lt;/li&gt;
  &lt;li&gt;-s # 라인 넘버 출력 후 출력할 separator 지정&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;eg-3&quot;&gt;e.g.&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;nl ‘file.type’ == cat ‘file.type’&lt;/td&gt;
          &lt;td&gt;nl&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;nl -ba ‘file.type’&lt;/li&gt;
  &lt;li&gt;nl -ba -s “:\t” ‘file.type’&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sort&quot;&gt;sort&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;맥은 모르겠다&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;파일 내용 정렬 후 출력&lt;/p&gt;

&lt;h5 id=&quot;자주-사용되는-옵션-4&quot;&gt;자주 사용되는 옵션&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;위치 지정
    &lt;ul&gt;
      &lt;li&gt;-k, –key=KEYDEF # key에 의한 정렬, 어떤 컬럼을 기준으로 정렬할 건지 /
        &lt;ul&gt;
          &lt;li&gt;숫자 한 개만 작성하면 그 부분부터 끝까지&lt;/li&gt;
          &lt;li&gt;한 개의 열만 하려면 쉼표로 구분해 같은 숫자 넣어주기&lt;/li&gt;
          &lt;li&gt;n 번째 우선순위 지정 &amp;gt; -k 5,5 -k 2,2&lt;/li&gt;
          &lt;li&gt;
            &lt;table&gt;
              &lt;tbody&gt;
                &lt;tr&gt;
                  &lt;td&gt;e.g. ls -al&lt;/td&gt;
                  &lt;td&gt;sort -k 5 -n&lt;/td&gt;
                &lt;/tr&gt;
              &lt;/tbody&gt;
            &lt;/table&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;-t, –field-separator # 필드 구분자 (기본값 = 공백), 하나의 기준으로 컬럼을 나누어줌&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정렬 기준 (sort ‘file’ -x)
    &lt;ul&gt;
      &lt;li&gt;-f, –ignore-case&lt;/li&gt;
      &lt;li&gt;-g, –general-numeric-sort&lt;/li&gt;
      &lt;li&gt;-n, –numeric-sort # 123보다 91이 먼저 나오게 됨&lt;/li&gt;
      &lt;li&gt;-r, –reverse # 내림차순 정렬&lt;/li&gt;
      &lt;li&gt;-u, –unique # 중복 삭제&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;옵션
    &lt;ul&gt;
      &lt;li&gt;–debug #어디 기준으로 정렬했는지 가시화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;eg-4&quot;&gt;e.g.&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;cat ‘file.type’&lt;/td&gt;
          &lt;td&gt;sort&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;cat ‘file..type’&lt;/td&gt;
          &lt;td&gt;sort -t’구분자’ -k ‘정렬키-행’ -n&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;cat ‘file..type’&lt;/td&gt;
          &lt;td&gt;sort -t’구분자’ -k ‘정렬키-행’ -n -debug&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;uniq&quot;&gt;uniq&lt;/h3&gt;

&lt;p&gt;중복 내용 제거 후 출력&lt;/p&gt;

&lt;p&gt;연달아 중복인 부분만 삭제 » sort 명령어랑 같이 사용&lt;/p&gt;

&lt;h4 id=&quot;자주-사용되는-옵션-5&quot;&gt;자주 사용되는 옵션&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;-d, –repeated # 중복된 내용만 출력&lt;/li&gt;
  &lt;li&gt;-u, –unique # 중복되지 않은 내용만 출력&lt;/li&gt;
  &lt;li&gt;-i, –ignore-case # 대소문자 무시&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;eg-5&quot;&gt;e.g.&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;cat ‘file.type’&lt;/td&gt;
          &lt;td&gt;uniq&lt;/td&gt;
          &lt;td&gt;nl -ba # 중복된 내용만 코드 번호를 붙여서 출력&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;sort ‘file.type’&lt;/td&gt;
          &lt;td&gt;uniq&lt;/td&gt;
          &lt;td&gt;nl -ba&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;grep “search” file&lt;/td&gt;
          &lt;td&gt;awk -F: ‘‘{print $1}’&lt;/td&gt;
          &lt;td&gt;uniq&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cut&quot;&gt;cut&lt;/h3&gt;

&lt;p&gt;컬럼 잘라내기&lt;/p&gt;

&lt;h4 id=&quot;자주-사용되는-옵션-6&quot;&gt;자주 사용되는 옵션&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;-b, –bytes=LIST # byte 선택&lt;/li&gt;
  &lt;li&gt;-c, –characters=LIST # character 선택&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;-f,&lt;/strong&gt; –fields=LIST # 필드(컬럼) 선택&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;-d&lt;/strong&gt;, –delimiter=DELIM # tab 대신 사용할 구분자 지정
탭이 아닌 다른 구분자로 지정되어있는 경우 반드시 입력&lt;/li&gt;
  &lt;li&gt;–complement # 선택 반전&lt;/li&gt;
  &lt;li&gt;–output-delimiter=STRING # 출력시 사용할 구분자 지정&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;eg-6&quot;&gt;e.g.&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;head ‘file.type’&lt;/td&gt;
          &lt;td&gt;cut -d: -f 1, 7 –output-delimiter=”&amp;gt;” # 딜리미터 변경&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;ls -al&lt;/td&gt;
          &lt;td&gt;head&lt;/td&gt;
          &lt;td&gt;cut -b 1 #각 줄의 첫 글자만 나옴&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;ls -al&lt;/td&gt;
          &lt;td&gt;head&lt;/td&gt;
          &lt;td&gt;cut -b 2-4 # rwx.. 등 권한을 볼 수 있음&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;ls -al&lt;/td&gt;
          &lt;td&gt;head&lt;/td&gt;
          &lt;td&gt;cut -b -10 # 처음부터 10바이트까지&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;ls -al&lt;/td&gt;
          &lt;td&gt;head&lt;/td&gt;
          &lt;td&gt;cut -b 11- # 11부터 끝 바이트까지&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tr-translate&quot;&gt;tr (translate)&lt;/h3&gt;

&lt;p&gt;내용 변환&lt;/p&gt;

&lt;p&gt;문서 특수 캐릭터 삭제 시에 자주 사용&lt;/p&gt;

&lt;p&gt;tr [OPTION] … SET 1 [SET 2]&lt;/p&gt;

&lt;h4 id=&quot;자주-사용되는-옵션-7&quot;&gt;자주 사용되는 옵션&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;-c, -C, –complement&lt;/li&gt;
  &lt;li&gt;-d, –delete&lt;/li&gt;
  &lt;li&gt;SET
    &lt;ul&gt;
      &lt;li&gt;CHAR1 - CHAR2 # char1부터 char2까지 (a to z)&lt;/li&gt;
      &lt;li&gt;[:alnum:] # 문자 + 숫자&lt;/li&gt;
      &lt;li&gt;[:alpha:] # 문자&lt;/li&gt;
      &lt;li&gt;[:blank:] # 공백&lt;/li&gt;
      &lt;li&gt;[:space:] # 공백 + newline&lt;/li&gt;
      &lt;li&gt;[:digit:] / [:xdigit:] # 10진수 숫자 / 16진수 숫자&lt;/li&gt;
      &lt;li&gt;[:lower:] / [:upper:]&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;eg-7&quot;&gt;e.g.&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;tr -d SET1 # set1에 맞는 부분 삭제 후 지워지지 않는 것들 출력&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;cat ‘file.type’&lt;/td&gt;
          &lt;td&gt;tr ‘:’ ‘%’&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;head ‘file.type’&lt;/td&gt;
          &lt;td&gt;tr [:lower:] [:upper:] # 출력될 모든 소문자를 대문자로 변경&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sed&quot;&gt;sed&lt;/h3&gt;

&lt;p&gt;stream editor&lt;/p&gt;

&lt;p&gt;파일 내용을 출력 전에 옵션대로 편집 후 출력&lt;/p&gt;

&lt;h4 id=&quot;자주-사용되는-옵션-8&quot;&gt;자주 사용되는 옵션&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;{RANGE}p # range 내 라인 출력&lt;/li&gt;
  &lt;li&gt;{RANGE}d # range 내 라인 삭제&lt;/li&gt;
  &lt;li&gt;/SEARCHPATTERN/p # SEARCHPATTERN과 매치되는 라인 출력&lt;/li&gt;
  &lt;li&gt;/SEARCHPATTERN/d # SEARCHPATTERN과 매치되는 라인 삭제&lt;/li&gt;
  &lt;li&gt;s/REGEX/REPLACE # REGEX 매치 부분을 REPLACE로 교체 -substitute&lt;/li&gt;
  &lt;li&gt;-n # 기본 출력 부분 제외 - 보통 print 시 많이 사용&lt;/li&gt;
  &lt;li&gt;’/,+num p’  # 상대적으로 몇 번째 줄까지 출력 할 건지&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;eg-8&quot;&gt;e.g.&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;head ‘file.type’&lt;/td&gt;
          &lt;td&gt;sed ‘2,5p’ # head 부분 출력 + 라인 사이에 sed 옵션이 들어가게 됨&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;head ‘file.type’&lt;/td&gt;
          &lt;td&gt;sed -n ‘2,5p’ # 기본 출력 부분 제외&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;head ‘file.type’&lt;/td&gt;
          &lt;td&gt;sed ‘1,5d’&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;cat ‘file.type’&lt;/td&gt;
          &lt;td&gt;sed -n ‘/kwarg/p’&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;cat ‘file.type’&lt;/td&gt;
          &lt;td&gt;sed ‘s/:/$/g’ # g 옵션 : 한 라인에 매치되는 모든 부분을 변경&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;cat ‘file.type’&lt;/td&gt;
          &lt;td&gt;sed -n ‘/kwarg/,10p’ # 검색 문자에서 10번째까지 출력&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;cat ‘file.type’&lt;/td&gt;
          &lt;td&gt;sed -n ‘/kwarg/,+2p’ # 검색 문자부터 2번째 줄을 더 출력&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;awk&quot;&gt;awk&lt;/h3&gt;

&lt;p&gt;유틸리티라기 보다는 텍스트 처리 script language&lt;/p&gt;

&lt;p&gt;syntax : awk options ‘selection _criteria {action }’ input-file&lt;/p&gt;

&lt;p&gt;파일 내용을 처리하는 거기에 input_file 이 필요하지만, 파이프를 통해 호출하는 경우는 input_file 없음&lt;/p&gt;

&lt;h4 id=&quot;자주-사용되는-옵션-9&quot;&gt;자주 사용되는 옵션&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;-F # Field separator 지정&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;주요-내장-변수&quot;&gt;주요 내장 변수&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;$1, $2, $3 # Nth field. wc할 때 awk field separator를 공백으로 해서 $1, $2…&lt;/li&gt;
  &lt;li&gt;NR # number of records&lt;/li&gt;
  &lt;li&gt;NF # number of fields&lt;/li&gt;
  &lt;li&gt;FS # field separator (default ‘white space’)&lt;/li&gt;
  &lt;li&gt;RS # record separator (default ‘new line’)&lt;/li&gt;
  &lt;li&gt;OFS # Output Field Separator&lt;/li&gt;
  &lt;li&gt;ORS # Output Record Separator&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;eg-9&quot;&gt;e.g.&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;wc ‘file.type’&lt;/td&gt;
          &lt;td&gt;awk ‘{print $1}’ # 첫 번째 부분 출력&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;head ‘file.type’&lt;/td&gt;
          &lt;td&gt;awk -Fs ‘{print $1}’&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;head ‘file.type’&lt;/td&gt;
          &lt;td&gt;awk -Fs ‘/kwarg/ {print}’ # 검색 후 라인 전체 출력&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;head ‘file.type’&lt;/td&gt;
          &lt;td&gt;awk -Fs ‘/kwarg/ {print NR, $1 }’  # 검색 인자가 몇 번째 라인인지 출력&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;head ‘file.type’&lt;/td&gt;
          &lt;td&gt;awk -Fs ‘{print NR “==&amp;gt;” $1 }’&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;head ‘file.type’&lt;/td&gt;
          &lt;td&gt;awk -Fs ‘{print NR “==&amp;gt;” $1, NF }’ # 필드가 몇 개인지 알려줌, 언어라서 loop 도 돌 수 있음.&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;사담&quot;&gt;사담&lt;/h4&gt;

&lt;p&gt;우분투 영상에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;ls -al | sort -k 5&lt;/code&gt; 는 숫자로 인식하지 않아서 -n을 붙여줘야 했는데, 맥은 아닌가보다…&lt;/p&gt;
</description>
        <pubDate>Mon, 30 Dec 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/linux/2019/12/30/LinuxCommandTools_1/</link>
        <guid isPermaLink="true">http://localhost:4000/study/linux/2019/12/30/LinuxCommandTools_1/</guid>
      </item>
    
      <item>
        <title>머신러닝을 위한 Python 01</title>
        <description>&lt;h3 id=&quot;1-pythonic-code&quot;&gt;1) Pythonic Code&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파이썬 스타일의 코딩 기법&lt;/li&gt;
  &lt;li&gt;파이썬 특유 문법을 활용해 효율적 코드 표현&lt;/li&gt;
  &lt;li&gt;고급 코드를 작성할 수록 더 많이 요구됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;split--join&quot;&gt;Split &amp;amp; Join&lt;/h4&gt;

&lt;h4 id=&quot;split&quot;&gt;Split&lt;/h4&gt;

&lt;p&gt;: String Type 의 값을 나누어 List 형태로 반환
&lt;code class=&quot;highlighter-rouge&quot;&gt;.split() &lt;/code&gt; 괄호 안 기준으로 문자열을 나눔&lt;/p&gt;

&lt;h4 id=&quot;join&quot;&gt;Join&lt;/h4&gt;

&lt;p&gt;: String List 를 합쳐 하나의 String으로 반환할 때 사용
&lt;code class=&quot;highlighter-rouge&quot;&gt;''.join(var)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;list-comprehension&quot;&gt;List Comprehension&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기존 List를 사용해 간단히 다른 List를 만드는 기법&lt;/li&gt;
  &lt;li&gt;포함되는, 포괄적인 List 라는 의미로 사용&lt;/li&gt;
  &lt;li&gt;파이썬에서 가장 많이 사용되는 기법 중 하나&lt;/li&gt;
  &lt;li&gt;for + append 보다 빠른 속도&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;One Dimentional&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[i+j for i in case_1 for j in case_2]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Two Dimentional&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[[i+j for i in case_1] for j in case_2]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;enumerate--zip&quot;&gt;Enumerate &amp;amp; Zip&lt;/h3&gt;

&lt;h4 id=&quot;enumerate&quot;&gt;Enumerate&lt;/h4&gt;

&lt;p&gt;: List element 추출 시 번호를 붙여 반환
&lt;code class=&quot;highlighter-rouge&quot;&gt;enumerate(var)&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;zip&quot;&gt;Zip&lt;/h4&gt;

&lt;p&gt;: 두 개의 list 값을 병렬 추출&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for i, (a, b) in enumerate(zip(list_a, list_b))&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;lambda--mapreduce&quot;&gt;Lambda &amp;amp; MapReduce&lt;/h3&gt;

&lt;h4 id=&quot;lambda&quot;&gt;Lambda&lt;/h4&gt;

&lt;p&gt;: 함수 이름 없이 함수처럼 사용할 수 있는 익명함수, python3 부터 권장하지는 않으나 여전히 많이 쓰임
&lt;code class=&quot;highlighter-rouge&quot;&gt;f = lambda x, y: x + y&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;map-function&quot;&gt;Map Function&lt;/h4&gt;

&lt;p&gt;: Sequence 자료형 각 element에 동일한 function을 적용&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;if filter 사용 가능&lt;/li&gt;
  &lt;li&gt;두 개 이상의 list 에도 적용 가능&lt;/li&gt;
  &lt;li&gt;python3 부터 iteration 생성 시 list를 붙여주어야 list 사용 가능&lt;/li&gt;
  &lt;li&gt;실행시점의 값을 생성, 메모리 효율적&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;reduce-function&quot;&gt;Reduce Function&lt;/h4&gt;

&lt;p&gt;: map과 달리 list에 똑같은 함수를 적용해서 통합&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;from functools import reduce&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;asterisk-&quot;&gt;Asterisk *&lt;/h2&gt;

&lt;p&gt;: 단순 곱셈, 제곱 연산, 가변 인자 활용 등 다양하게 사용됨&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;unpacking a container&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;tuple, dict 등 자료형 내부 값을 unpacking&lt;/li&gt;
  &lt;li&gt;합수 입력값, zip 등을 유용하게 사용 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;collections&quot;&gt;Collections&lt;/h3&gt;

&lt;p&gt;: List, Tuple, Dict에 대한 Python Built-in 확장 자료 구조(모듈)&lt;/p&gt;

&lt;h4 id=&quot;deque&quot;&gt;deque&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Stack과 Queue를 지원하는 모듈&lt;/li&gt;
  &lt;li&gt;List에 비해 효율적인 자료 저장 방식&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#1
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deque_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;deque_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#2
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deque_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;appendleft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;rotate, reverse 등 Linked List의 특정을 지원&lt;/li&gt;
  &lt;li&gt;기존 list 형태 함수 모두 지원&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;deque_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;deque_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;reversed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deque_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;기존 list보다 효율적인 자료구조 제공&lt;/li&gt;
  &lt;li&gt;효율적 메모리 구조로 처리 속도 향상&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;ordered-dict&quot;&gt;Ordered Dict&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;데이터를 입력한 순서대로 dict를 반환&lt;/li&gt;
  &lt;li&gt;dict type의 값을, value 또는 key 값으로 정렬할 때 사용 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for k, v in OrderedDict(sorted(d.items(), key=lambda t: t[0])).items():&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;default-dict&quot;&gt;default Dict&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;dict type의 값에 기본 값을 지정해 신규값 생성 시 사용하는 방법&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Default Dict 생성
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# default값 == 0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;하나의 지문에 각 단어가 몇 개나 있는지 세고 싶을 경우 ?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Text-mining 접근법 - Vector Space Model&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OrderedDict&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;word_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Default dictionary를 생성
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Default 값을 0으로 설정
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;word_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OrderedDict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;counter&quot;&gt;Counter&lt;/h4&gt;

&lt;p&gt;: Sequence Type의 data element 의 갯수를 dict 형태로 반환&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dict type, keyword parameter 등도 모두 처리 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gallahad'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 각 알파벳이 몇 번 들어가있는지 확인
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'red'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'blue'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;set 연산 지원&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# c - d
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;word counter 기능 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;named-tuple&quot;&gt;named tuple&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;tuple 형태로 data 구조체를 저장하는 방법&lt;/li&gt;
  &lt;li&gt;저장되는 data variable을 사전에 지정해서 저장&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 24 Dec 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/python/2019/12/24/python-for-ml/</link>
        <guid isPermaLink="true">http://localhost:4000/study/python/2019/12/24/python-for-ml/</guid>
      </item>
    
      <item>
        <title>[1] Git Study</title>
        <description>&lt;h3 id=&quot;git&quot;&gt;Git&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;가장 대중적인 코드 관리 도구&lt;/li&gt;
  &lt;li&gt;목적 : 이력관리 (버전관리)&lt;/li&gt;
  &lt;li&gt;특징 : ‘분산’ 버전관리&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;git-setting&quot;&gt;Git Setting&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config --global user.name &quot;name&quot;
git config --global user.email &quot;email&quot;
git init # After make a folder
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;git-status&quot;&gt;Git Status&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git status
git add 'file.type'
git commit 'file.type' -m &quot;Your Message&quot;
# git commit -m &quot;Your Message&quot; when you need all file commits

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Staged File : Files requiring constant observation Commited File : Save current condition in Git Repo&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;git status&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Version Control, Source Code Management&lt;/li&gt;
  &lt;li&gt;When appears ‘Untracked file’. It means Git doesn’t know that file&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;git add&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;1st alert ‘Changes to be commit’. It means Your file is in Staged Area&lt;/li&gt;
  &lt;li&gt;2nd alert ‘Changes not staged for commit’. It means You’ve got modified file on Tracked file, But not in Staged Area (Not Staged condition)&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;git commit&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Source Control is Available since data was committed in Git Repository&lt;/li&gt;
  &lt;li&gt;Enter when you want to SAVE&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;git-ignore&quot;&gt;Git ignore&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git mv file.rft file.gitignore&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When you’ve got files you want to ignore, make a txt file and change file extention .rtf(.txt etc) to .gittgnore.&lt;/p&gt;

&lt;h4 id=&quot;git-log---기록&quot;&gt;Git log - 기록&lt;/h4&gt;

&lt;p&gt;press ‘q’ when escape&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;commit a4d380ce1cf6e8866f0f1d07cfaa804083476e0c
Author: Name &amp;lt;your@email.com&amp;gt;
Date:   Wed Dec 11 100:00:00 2019 +0000

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;commit : Hash Code of your file Author : Author name &amp;lt;Author’s email&amp;gt; Date : Committed date&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;git log’s 4 command line&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log --status
git log --pretty=oneline
git log --pretty=format : &quot;%h - %an, %ar : %s&quot;
git log --pretty=format : &quot;%h - %an, %ar : %s&quot; --graph

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;git-checkout&quot;&gt;Git checkout&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Not a recommanded way&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout 'hash[:6]'&lt;/code&gt; &lt;strong&gt;Keep returning purpose in mind&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;branch&quot;&gt;Branch&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
git branch # Expected Result with green font colour : * master
git branch 'name'
git checkout 'name' # Expecte

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;when you checking out to master, files you made with another branch name will disappear&lt;/p&gt;

&lt;h4 id=&quot;merge&quot;&gt;Merge&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git merge name # branch name&lt;/code&gt; in the master branch&lt;/p&gt;

&lt;h4 id=&quot;gitk---history-with-graph&quot;&gt;gitk - History with graph&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gitk&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;push&quot;&gt;Push&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push -u origin master&lt;/code&gt; Branch called master push to Remote server called origin&lt;/p&gt;

&lt;h4 id=&quot;remote&quot;&gt;Remote&lt;/h4&gt;

&lt;p&gt;Create New Repository on terminal line &lt;code class=&quot;highlighter-rouge&quot;&gt;git remote add origin https://www.github.com/~/~&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;remote&lt;/code&gt; Total command line of remote repository &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt; Plus &lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt; the name, the first &lt;code class=&quot;highlighter-rouge&quot;&gt;https://~&lt;/code&gt; same as HTML&lt;/p&gt;

&lt;h4 id=&quot;remote-command-line&quot;&gt;Remote Command Line&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git remote&lt;/code&gt; #Expected Result : origin &lt;code class=&quot;highlighter-rouge&quot;&gt;git remote -v&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;git remote add origin&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;git remote add name&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;git remote rm name&lt;/code&gt; # Delete&lt;/p&gt;

&lt;h4 id=&quot;commit-in-git-remote-server&quot;&gt;Commit in Git Remote server&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add name
git commit name -m &quot;Message&quot;
git push origin master

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;remote-server-to-local&quot;&gt;Remote server to Local&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Clone - Get everything&lt;/li&gt;
  &lt;li&gt;Pull - Merge same branch&lt;/li&gt;
  &lt;li&gt;Fetch - Only get changed things&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;1-fork--pull-request&quot;&gt;(1) Fork &amp;amp; Pull Request&lt;/h4&gt;

&lt;p&gt;Fork🍴 - 타인의 Repo를 나의 github repo로 옮김 Pull Request - Fork로 가져온 타인의 코드 수정 후 반영을 요청함&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git pull address master # Easiest way
git fetch origin master # bring Latest version &amp;amp; can get another branch
git merget origin master

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;2-permission&quot;&gt;(2) Permission&lt;/h4&gt;

&lt;p&gt;permission Setting : 작업 권한을 공동 작업자에게 위임 github 내 setting 에서 추가&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLBHVuYlKEkULuUe_Ca3wiaFon6dPWIWAZ&quot;&gt;유튜브 Git - Teamlab 강의&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Dec 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/git/2019/12/18/1-Git-Study/</link>
        <guid isPermaLink="true">http://localhost:4000/study/git/2019/12/18/1-Git-Study/</guid>
      </item>
    
      <item>
        <title>[Error] os.rename() No such file or directory 오류</title>
        <description>&lt;p&gt;오류 1.&lt;br /&gt;
FileNotFoundError: [Errno 2] No such file or directory: ‘원 파일명’ -&amp;gt; ‘변경하려는 파일명’&lt;/p&gt;

&lt;p&gt;파일-동영상 이름을 일괄적으로 바꿔줘야 해서 만들었다.&lt;br /&gt;
파일명 전부 동일하게 앞부분만 지워주면 됐으므로 47번째 글자 이후부터 출력되게 해서… rename() 으로 바꿔주고자 했는데…&lt;br /&gt;
자꾸 파일이 없다고 오류가 떴다.&lt;br /&gt;
아이클라우드 문자인가 하고 동영상을 전부 내려받았는데도 없대…&lt;br /&gt;
구글신께 여쭈어본 결과… 나를 &lt;a href=&quot;https://stackoverflow.com/questions/44203662/os-rename-fail-with-errno-2-no-such-file-or-directory&quot;&gt;stackoverflow&lt;/a&gt;로 인도해주셨다…&lt;/p&gt;

&lt;p&gt;문제는 listdir는 경로를 제외한 파일명만 반환하기 때문이었다. os.path.join()를 사용해 path를 삽입함으로 문제를 끝냈다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/Users/xxx/Desktop/init/video/Machine_Learning&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;47&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;오류 2.&lt;br /&gt;
IsADirectoryError: [Errno 21] Is a directory: ‘/Users/xxx/Desktop/init/video/Operations_Research/.DS_Store’ -&amp;gt; ‘/Users/xxx/Desktop/init/video/Operations_Research/’&lt;/p&gt;

&lt;p&gt;바꾼 건 주소밖에 없다. 그런데도 전혀 다른 문제가 발생했다. 일단 저 DS_Store 파일이 문제인 거 같은데… 난 쟤를 모른다. 그래서 무시하고 진행해보기로 했다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/Users/xxx/Desktop/init/video/Operations_Research'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;… 굿쨥 아주 잘 됐다.&lt;/p&gt;

&lt;p&gt;내가 만든 이 코드의 단점은, 바꾸려는 파일명을 28자 이후부터 출력되게 만들었기 때문에 이미 바뀐 파일명들까지 포함된다는 거다.&lt;br /&gt;
이미 이름이 바뀐 파일들과 바꾸어야 할 파일들이 같이 있을 경우, 전자의 파일도 영향을 받기 때문에 파일명이 아예 없어지는 대참사가… 일어날 수도 있다는 점? 다른 방법도 많다. 근데 난 그냥 이렇게 했다.&lt;/p&gt;

&lt;p&gt;왜냐하면… 그냥 ?&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Dec 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/python/2019/12/17/os.rename()-%E1%84%8B%E1%85%A6%E1%84%85%E1%85%A5/</link>
        <guid isPermaLink="true">http://localhost:4000/study/python/2019/12/17/os.rename()-%E1%84%8B%E1%85%A6%E1%84%85%E1%85%A5/</guid>
      </item>
    
      <item>
        <title>Atom Editor 설정 (패키지 확장)</title>
        <description>&lt;p&gt;1년에 한 번씩 컴퓨터를 포맷하다보니 어디엔가 작성해야 할 것 같긴 하고.. 혹여 누군가 제 글을 보고 도움이 되었으면 합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;1script--cmd--i-&quot;&gt;1.script ( Cmd + i )&lt;/h4&gt;

&lt;p&gt;아톰 내 프로그램 실행&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2-hydrogen--cmd--enter-&quot;&gt;2. &lt;a href=&quot;https://atom.io/packages/Hydrogen&quot;&gt;hydrogen&lt;/a&gt; ( Cmd + Enter )&lt;/h4&gt;

&lt;p&gt;jupyter notebook 이랑 연동 / jupyter 커널로 한 줄이나 block 처리 된 코드 실행 …최고&lt;/p&gt;

&lt;p&gt;실행 전에 터미널 창에서 명령어 입력. 그 후로 아톰 에디터 내 사용 가능.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m pip install ipykernel
python -m ipykernel install --user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;3-atom-beautify--ctrl--option--b-&quot;&gt;3. atom-beautify ( Ctrl + Option + B )&lt;/h4&gt;

&lt;p&gt;자동 줄 맞춤&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;4-autocomplete-python--자동-&quot;&gt;4. autocomplete-python ( 자동 )&lt;/h4&gt;

&lt;p&gt;자동완성 기능&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;5-highlight-selected--더블클릭-&quot;&gt;5. highlight-selected ( 더블클릭 )&lt;/h4&gt;

&lt;p&gt;선택 단어와 동일 단어를 하이라이트 해준다 … 최고&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;6-platformio-ide-terminal--ctrl---&quot;&gt;6. platformio-ide-terminal ( Ctrl + ` )&lt;/h4&gt;

&lt;p&gt;터미널 창을 아톰 내에서 열 수 있도록 합니다.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Dec 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/python/2019/12/16/atom-%E1%84%89%E1%85%A5%E1%86%AF%E1%84%8C%E1%85%A5%E1%86%BC/</link>
        <guid isPermaLink="true">http://localhost:4000/study/python/2019/12/16/atom-%E1%84%89%E1%85%A5%E1%86%AF%E1%84%8C%E1%85%A5%E1%86%BC/</guid>
      </item>
    
      <item>
        <title>[Error] git push 오류</title>
        <description>&lt;p&gt;깃 푸쉬를 했는데 오류가 떴다. 이제 오류를 봐도 아무렇지 않다. 멀쩡한 화면보다 오류를 더 자주 만나기 때문에…&lt;/p&gt;

&lt;p&gt;뭐든 구글신께 여쭈어보면 된다. 사실 영어를 볼 때가 가장 가슴 졸인다. 제발 어떤 천사 한국인이 이에 대한 글을 썼기를 바라면서…&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin master&lt;/code&gt; 를 쓰고 오류가 났다. 오류의 내용은 이렇다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;error: failed to push some refs to ~

hint: Updates were rejected because the tip of your current branch is behind

hint: its remote counterpart. Integrate the remote changes (e.g.

hint: 'git pull ...') before pushing again.

hint: See the 'Note about fast-forwards' in 'git push --help' for details.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push -f origin master&lt;/code&gt;로 강제 푸쉬를 준 이후로는 다시 원래대로 push 명령어를 주었더니 잘 알아들었다.&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Dec 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/git/2019/12/15/git-push-%E1%84%8B%E1%85%A9%E1%84%85%E1%85%B2/</link>
        <guid isPermaLink="true">http://localhost:4000/study/git/2019/12/15/git-push-%E1%84%8B%E1%85%A9%E1%84%85%E1%85%B2/</guid>
      </item>
    
      <item>
        <title>Malware</title>
        <description>&lt;p&gt;&lt;strong&gt;Malware&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;유형&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;악성 소프트웨어&lt;/p&gt;

&lt;p&gt;– 호스트 프로그램을 필요로 하는 것&lt;/p&gt;

&lt;p&gt;• 바이러스 • 논리폭탄 • 백도어&lt;/p&gt;

&lt;p&gt;– 호스트를 필요로 하지 않는 것&lt;/p&gt;

&lt;p&gt;•웜 • 좀비&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;스스로&lt;/strong&gt; &lt;strong&gt;복제할&lt;/strong&gt; &lt;strong&gt;수&lt;/strong&gt; &lt;strong&gt;있는&lt;/strong&gt; &lt;strong&gt;악성소프트웨어&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;– 트리거에 의해 활성화되는 프로그램 • 논리폭탄&lt;/p&gt;

&lt;p&gt;• 백도어 • 좀비 프로그램  • 스스로 복제 불가한 악성소프트웨어&lt;/p&gt;

&lt;p&gt;– 독립적인 프로그램으로서 실행&lt;/p&gt;

&lt;p&gt;– 자신의 복제를 만들어 전파&lt;/p&gt;

&lt;p&gt;• 바이러스 • 웜&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;백도어&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• 백도어(back door)&lt;/p&gt;

&lt;p&gt;–  트랩도어(trap door)라고도 함&lt;/p&gt;

&lt;p&gt;–  프로그램으로 들어가는 비밀 입구&lt;/p&gt;

&lt;p&gt;–  이 코드는 어떤 특별한 일련의 입력을 인식하거나, 
특정 사용 자 ID나 발생할 가능성이 매우 희박한 일련의 사건에 의해 구동되면 시작한다&lt;/p&gt;

&lt;p&gt;• 유지후크(maintenance hook)&lt;/p&gt;

&lt;p&gt;–  통상적 보안접속 절차 없이 접근허락 받음&lt;/p&gt;

&lt;p&gt;–  프로그래머는 프로그램 디버그나 검사를 위해 백도어를 상당 기간 합법적으로 사용&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;논리폭탄&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;- 논리폭탄(logicbomb)&lt;/p&gt;

&lt;p&gt;합법적 프로그램 안에 내장된 코드로서 특정 조건이 맞게 되면 ‘터지게(작동을 개시하게)’ 만 들어진 논리&lt;/p&gt;

&lt;p&gt;- 논리폭탄의 뇌관
1 어떤 특정 파일이 없어지는 순간 2 특정 요일 3 특정 날짜 4 응용 프로그램을 구동하는 특정 사용자&lt;/p&gt;

&lt;p&gt;일단 논리폭탄의 작용
– 데이터나 전체 파일 수정 – 파일 삭제&lt;/p&gt;

&lt;p&gt;- 팀로이드(TimLloyd)사건&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;트로이&lt;/strong&gt; &lt;strong&gt;목마&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;트로이 목마(trojan horse)란 감춰진 코드를 갖 고 있는 프로그램이나 명령 프로시저로 작동이 되 면 원하지 않거나 해가 되는 기능을 수행&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;트로이&lt;/strong&gt; &lt;strong&gt;목마의&lt;/strong&gt; &lt;strong&gt;3&lt;/strong&gt;&lt;strong&gt;가지&lt;/strong&gt; &lt;strong&gt;모델&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;\1. 원 프로그램의 기능을 계속해서 수행 : 
  – 추가적으로 별개의 악성 활동을 수행
\2. 원 프로그램의 기능을 계속해서 수행&lt;/p&gt;

&lt;p&gt;– 기능을 수정해서 악성 활동을 하게 한다
    • 패스워드 수집 로그인 프로그램 트로이 목마 버전&lt;/p&gt;

&lt;p&gt;​    • 프로세스 염탐 프로그램 트로이 목마 버전&lt;/p&gt;

&lt;p&gt;\3. 원 프로그램의 기능을 완전히 대체하는 악성 기능 수행&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;다중&lt;/strong&gt;&lt;strong&gt;-&lt;/strong&gt;&lt;strong&gt;위협&lt;/strong&gt; &lt;strong&gt;악성&lt;/strong&gt; &lt;strong&gt;소프트웨어&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• 다분할(multipartite) 바이러스&lt;/p&gt;

&lt;p&gt;– 여러 방법으로 감염&lt;/p&gt;

&lt;p&gt;– 다중 유형 파일이 감염되므로 바이러스 박멸을 위해 감염된 모든 사이트 치료 필요&lt;/p&gt;

&lt;p&gt;• 혼합 공격(blended attack)
  – 다중 방법으로 감염시키거나 전송해서 감염속도와 공격의 강도를 극대화&lt;/p&gt;

&lt;p&gt;–  다중 유형 맬웨어를 포함한 패키지&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;–  혼합 공격의 예 &amp;gt; 님다(Nimda) 공격 – 웜, 바이러스, 모바일 코드의 특성을 모두 가짐&lt;/dt&gt;
  &lt;dd&gt;전자메일, 윈도우 공유, 웹 서버, 웹 클라이언트로 배포&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;&lt;strong&gt;좀비&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;인터넷에 연결된 다른 컴퓨터를 몰래 장악하고 그 컴퓨터를 기반으로 공격을 수행 하는 프로그램&lt;/li&gt;
  &lt;li&gt;타깃 웹 사이트를 대상으로 한 서비스거부 공격 에 이용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;바이러스&lt;/strong&gt; &lt;strong&gt;속성&lt;/strong&gt; - 악성코드는 발전하면서 하나의 이름으로 규정되기 어려운 형태가 많아짐&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;다른 프로그램을 변형시켜 ‘감염(infect)’시키는 프로그램&lt;/li&gt;
  &lt;li&gt;변형된 형태의 바이러스 : 원래 프로그램에 루틴을 주입해서 바이러스 프로그램 복제 제작&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;활동 절차 &amp;gt;&lt;/p&gt;

&lt;p&gt;바이러스 : 자기 자신에서 주변 프로그램들을 보고 자신을 복제해 집어 넣고 실행될 수 있도록 하는 형태&lt;/p&gt;

&lt;p&gt;일반 바이러스는 자기가 보통 바이러스라고 얘기할 때는.. 컴퓨터 바깥으로 못나감.. 
ssd, hdd 안에서 내부적으로만 활동하면서 퍼지는 것&lt;strong&gt;컴퓨터&lt;/strong&gt; &lt;strong&gt;바이러스&lt;/strong&gt; &lt;strong&gt;3&lt;/strong&gt;&lt;strong&gt;개&lt;/strong&gt; &lt;strong&gt;부분&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• 감염 메커니즘(Infection mechanism):&lt;/p&gt;

&lt;p&gt;– 바이러스가 퍼지는 수단 : 원래 프로그램에 자기를 집어넣는 형태 
    &amp;gt; 일반적으로 바이러스에 걸린 파일은 일반 파일보다 크기가 큼
  – 자신을 복제
  – 감염 벡터(infection vector)라고도 함&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;트리거(Trigger):
  – 페이로드 활성화나 전달 시기를 정하는 사건이나 조건 / 활성화 조건&lt;/li&gt;
  &lt;li&gt;페이로드(Payload): 
–  바이러스가 자기 자신을 퍼뜨리는 일 외에 하는 일 / 바이러스를 실행시키는 그 파트
–  페이로드는 피해를 줄 수 있고 심각한 피해를 끼치지 않을 수 도 있지만 분명히 그 활동을 알 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;바이러스&lt;/strong&gt; &lt;strong&gt;유형&lt;/strong&gt; - 들어가서 활동&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;목표별 바이러스 유형&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;부트 섹터 감염자 : 마스터 부트 레코드 감염 후 시스템 부팅 시 퍼짐&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일 감염자 : 운영체계나 쉘이 실행 가능하다고 여기는 파일 감염&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;매크로 바이러스 : 응용 프로그램으로 나타낼 수 있는 매크로 코드를 가진 파일 감염&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;플랫폼과 무관하게 작동&lt;/li&gt;
      &lt;li&gt;문서만 감염시키고 코드 실행부분은 미감염&lt;/li&gt;
      &lt;li&gt;쉽게 퍼짐&lt;/li&gt;
      &lt;li&gt;시스템 프로그램보다는 사용자 문서를 감염&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;**&lt;/strong&gt; &lt;strong&gt;은닉&lt;/strong&gt; &lt;strong&gt;전략에&lt;/strong&gt; &lt;strong&gt;따른&lt;/strong&gt; &lt;strong&gt;바이러스&lt;/strong&gt; &lt;strong&gt;유형&lt;/strong&gt; : 흐름&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;암호화 된 바이러스 : 변형엔진(mutation engine) - 사용될 때마다 변한다&lt;/li&gt;
  &lt;li&gt;스텔스 바이러스 : 압축을 이용해서 감염되지 않은 프로그램의 길이와 감염된 프로그램의 길이 동일&lt;/li&gt;
  &lt;li&gt;폴리모픽 바이러스 : 복제 과정에서 기능적으로는 동일하지만 비트패턴에서는 명확하게 다른 변형 
** 옮겨다닐 때마다 바이러스의 모양 변화 : 안티 바이러스로 인해 발생&lt;/li&gt;
  &lt;li&gt;메타모픽 바이러스&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;안티&lt;/strong&gt; &lt;strong&gt;바이러스&lt;/strong&gt; &lt;strong&gt;방법&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1 : 탐지&lt;/td&gt;
      &lt;td&gt;2 : 식별&lt;/td&gt;
      &lt;td&gt;3 : 제거&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;바이러스&lt;/strong&gt; &lt;strong&gt;인식&lt;/strong&gt; &lt;strong&gt;변화&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;前 : 나쁜 바이러스를 빨리 찾아서 없애자 … &amp;gt; 바이러스의 변화로 (수의 증가, 모양 변경 ) 거의 불가능해짐&lt;/p&gt;

&lt;p&gt;現 : 운영체제 시스템을 단단히 만들자 … &amp;gt; 백신을 통해서 해결 거의 불가능&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;안티바이러스&lt;/strong&gt; &lt;strong&gt;소프트웨어&lt;/strong&gt; &lt;strong&gt;4&lt;/strong&gt;&lt;strong&gt;세대&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;제1세대: 단순 스캐너 ( simple scanners )&lt;/p&gt;

&lt;p&gt;제2세대: 발견 스캐너 ( heuristic scanners )&lt;/p&gt;

&lt;p&gt;&amp;gt; 백신 ( 안티 바이러스 ) 얘네는 바이러스가 생긴 패턴, 시그니처, 서명의 특징을 데이터베이스&lt;/p&gt;

&lt;p&gt;파일이 하나 들어오면 데이터베이스와 비교&lt;/p&gt;

&lt;p&gt;&amp;gt; 패턴을 읽고 매칭 : 바이러스 백신 프로그램이 오래 걸리는 이유&lt;/p&gt;

&lt;p&gt;제3세대: 활동 트랩 ( activity traps )&lt;/p&gt;

&lt;p&gt;&amp;gt; 컴퓨터 프록램을 만들어놓고 바이러스에 취약한 척 해서 바이러스 유인 후 패턴과 시그니처 학습&lt;/p&gt;

&lt;p&gt;제4세대: 풍부한 기능을 갖춘 방어 ( full-featured protection )&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;고도&lt;/strong&gt; &lt;strong&gt;안티바이러스&lt;/strong&gt; &lt;strong&gt;기술&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;유전적 복호화(GD: genetic decryption) : 폴리모픽 바이러스가 포함된 파일이 실행될 때 GD 스캐너 통과&lt;/li&gt;
  &lt;li&gt;디지털 면역 시스템(digital immune system) : 
&amp;gt; 알약 v3,,등 바이러스가 아닌데 바이러스인줄 알고 삭제하는 경우도 존재&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;행동차단&lt;/strong&gt; &lt;strong&gt;소프트웨어&lt;/strong&gt; : 샌드박스&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/uqYzX/btqAQOZbhWp/xmuV5ySNtkSG5IXyKpC5l1/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;웜&lt;/strong&gt; - 바이러스의 업그레이드 버전&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;웜은 자신을 복제하여 네트워크 연결을 통해서 컴퓨터에서 컴퓨터로 그 복제본 전송 &amp;gt; 자동 해킹&lt;/li&gt;
  &lt;li&gt;취약한 프로그램을 통해 다른 컴퓨터에 도착하게 되면 웜은 복제를 시작하고 다시 확산시키기 시작&lt;/li&gt;
  &lt;li&gt;전자메일 바이러스는 시스템에서 시스템으로 자신을 확산시키기 때문에 웜(worm)의 성격을 어느 정도 보유&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;웜&lt;/strong&gt; &lt;strong&gt;확산&lt;/strong&gt; &lt;strong&gt;모델&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/bPQUDa/btqASyAP0Gz/fWHKezGFKeWkWuCDvRbf81/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;호스트수가 지수적으로 증가 - 감염 속도가 줄어든다 &amp;gt; 확산 증가는 거의 선형적 • 감염 비율 높음&lt;/p&gt;

&lt;p&gt;– 공격 속도는 종료단계&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;감염학 전염병 모델과 웜 확산 모델이 일치&lt;/li&gt;
  &lt;li&gt;웜이 대상으로 삼고 있는 컴퓨터에 취약점이 있느냐가 중요&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;네트워크&lt;/strong&gt;&lt;strong&gt;-&lt;/strong&gt;&lt;strong&gt;기반&lt;/strong&gt; &lt;strong&gt;웜&lt;/strong&gt; &lt;strong&gt;방어&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;두가지유형
– 진입 모니터(Ingress monitors): 
– 진출 모니터(Egress monitors):&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;** 제로-데이 익스플로잇(zero-day exploit)&lt;/p&gt;

&lt;p&gt;웜이랑은 상관 없고 익스플로잇은 공격코드임&lt;/p&gt;

&lt;p&gt;제로데이라고 하는 건 취약점이 알려지고 하루가 지나면, 데이 원 / 원데이 / 데이 투 데이쓰리…&lt;/p&gt;

&lt;p&gt;제로데이는 해킹 가능한게 알려지지 않은 것&lt;/p&gt;

&lt;p&gt;제로데이 취약점 : 취약점이 아무에게도 알려지지 않고 해커만 알고 있는 취약점을 이렇게 부름&lt;/p&gt;

&lt;p&gt;&amp;gt; 파급효과에 따라 시장에 팔림. 해커가 보통 프로그램에서 취약점을 찾음 &amp;gt; 찾아서 취약점을 갖고&lt;/p&gt;

&lt;p&gt;\1. 해킹해서 이익을 취함&lt;/p&gt;

&lt;p&gt;\2. 보안회사에 팔아 넘김&lt;/p&gt;

&lt;p&gt;2-1 양성적 보안회사에서 사는 것 ( 구글:돈주고 삼 )&lt;/p&gt;

&lt;p&gt;2-2 제로데이 암시장에 팖 ( 2-1보다는 많이 받음 )&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;분산서비스거부&lt;/strong&gt; &lt;strong&gt;공격&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;서비스 거부 공격 DoS attack ( Denial of Service ) &amp;gt; 분산 서비스 거부 공격 ( Distributed DoS )&lt;/p&gt;

&lt;p&gt;&amp;gt; 초과 트래픽의 경로를 차단해 쉽게 막을 수 있음 DoS &amp;gt; 좀비 컴퓨터 이용&lt;/p&gt;

&lt;p&gt;&amp;gt; 기존 인프라 ( 컴퓨터 )로 공격을 하게 함 &amp;gt; 경로 차단 불가능 + 좀비의 수뇌부 추적 어려움&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;분산&lt;/strong&gt; &lt;strong&gt;SYN&lt;/strong&gt; &lt;strong&gt;홍수&lt;/strong&gt; &lt;strong&gt;(&lt;/strong&gt; &lt;strong&gt;플러드&lt;/strong&gt; &lt;strong&gt;)&lt;/strong&gt; &lt;strong&gt;공격&lt;/strong&gt; &lt;strong&gt;-&lt;/strong&gt; &lt;strong&gt;직접&lt;/strong&gt; &lt;strong&gt;공격&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/Q1jNH/btqASzfsAMb/xCKsbLcoUw5K5Z4igfj5T1/img.png&quot; alt=&quot;img&quot; /&gt;스스로 열심히 만들어 전송&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;데이터&lt;/strong&gt; &lt;strong&gt;전송&lt;/strong&gt; &lt;strong&gt;자원&lt;/strong&gt; &lt;strong&gt;소모&lt;/strong&gt; &lt;strong&gt;공격&lt;/strong&gt; &lt;strong&gt;-&lt;/strong&gt; &lt;strong&gt;간접&lt;/strong&gt; &lt;strong&gt;공격&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/Ynfvp/btqARjxDldJ/csVR3tx8z8hz62THVIeLq1/img.png&quot; alt=&quot;img&quot; /&gt; 반사호스트를 이용해 트래픽을 크게 만들어 목표 라우터에 전송 &amp;gt; 공격자 찾기가 거의 불가능&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DDoS&lt;/strong&gt; &lt;strong&gt;공격의&lt;/strong&gt; &lt;strong&gt;다른&lt;/strong&gt; &lt;strong&gt;분류방법&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;\1. 직접 DDoS 공격(direct DDoS attack)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/NDZPS/btqARynPgqK/j9By7DK3uX3pbop8LhMKqk/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;공격자는 인터넷상에 분산되어 있는 수많은 사이트에 좀비 소프트웨어 설치&lt;/li&gt;
  &lt;li&gt;2단계 좀비 시스템
– DDoS 공격은 마스터 좀비와 종속 좀비로 구성&lt;/li&gt;
  &lt;li&gt;두좀비는 악성코드에 감염&lt;/li&gt;
  &lt;li&gt;공격자가 마스터 좀비를 조정하여 동작시키면 이어서 종속 좀비가 동작&lt;/li&gt;
  &lt;li&gt;2단계 좀비를 사용하면 공격의 발신지를 추적하기가 더 어렵고 공격자 활동 공간이 넓어짐&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/cHL8FQ/btqARjqWqRW/wGLnSuM1Zp9jlZhbXlVUM1/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;\2. 반사 DDoS 공격(reflector DDoS attack)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;하나의 호스트 계층을 추가한다&lt;/li&gt;
  &lt;li&gt;종속좀비는 IP패킷의 헤더에 목표 시스템의 IP주소를 
발신지 IP 주소로 하는 패킷을 만들어 응답 요청&lt;/li&gt;
  &lt;li&gt;이패킷은 감염 되지 않은 호스트인 반사 호스트 전송&lt;/li&gt;
  &lt;li&gt;반사 호스트는 발신지 IP 주소를 확인하고 목표시스템으로 응답 패킷 전송&lt;/li&gt;
  &lt;li&gt;반사기 DDoS 공격
– 직접 DDoS공격에 비하여 더 많은 호스트를 감염 – 더 많은 트래픽을 유발시킬 수 있으므로 더 위협적 
– 공격이 넓게 분산되어 있는 감염되지 않은 호스로부터 들어오기 때문에 공격을 추적하고 패킷을 필터링 해서 제거하는 것이 더 어렵다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;DDoS&lt;/strong&gt; &lt;strong&gt;대응책&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;• 공격 예방 및 선취(공격 이전):
• 공격 탐지 및 필터링(공격 중):
• 공격 근원지 역추적 및 확인 (공격 중 및 공격 후):&lt;/p&gt;

&lt;p&gt;• CloudFlare 방식&lt;/p&gt;

&lt;p&gt;• 분산화 공격에 대응하는 서버 분산화
&amp;gt; 사이트 접속 시 접속 국가에 인접한 서버와 매칭&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Oct 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/security/2019/10/01/Malware/</link>
        <guid isPermaLink="true">http://localhost:4000/study/security/2019/10/01/Malware/</guid>
      </item>
    
      <item>
        <title>PKI, Auth</title>
        <description>&lt;h1 id=&quot;pki&quot;&gt;PKI&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Key distribution via key distribution center&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/CNaas/btqAQ3aHRWo/JlnxuFSrdc7UZfgwEavxo0/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;호스트 입장에서는 키를 한 개만 갖고있으면 됨 &amp;gt;&lt;/p&gt;

&lt;p&gt;네트워크 시큐리티 모델과 매우매우 흡사함 신뢰 가능한 써드파티 시스템과 키분배센터와 비슷&lt;/p&gt;

&lt;p&gt;요즘은 퍼블릭키로 함 / 중간 키분배센터가 사라져도 됨 » 가장 큰 문제 : 신뢰가능한 퍼블릭키 분배 문제&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Management and Distribution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Public directory&lt;/strong&gt; : should be maintained in a trusted party&lt;/p&gt;

&lt;p&gt;종이 혹은 디렉토리 온라인 서비스를 만들어서 공개&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Public key certificate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/UsR6u/btqAPexjrrq/1QjZCsltTKqrypo1WcAYO0/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Public key certificate
  Exchange public keys without trusted third parties : : 퍼블릭키를 써드파티를 거치지 않고 신뢰&lt;/p&gt;

&lt;p&gt;Certificate
  A public key&lt;/p&gt;

&lt;p&gt;An ID
  A signature by a trusted entities&lt;/p&gt;

&lt;p&gt;​     Government, financial organization •&lt;/p&gt;

&lt;p&gt;Ex) X.509&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;X.509 Certificates :&lt;/strong&gt; 국가 간 인증서 표준&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/cROy9W/btqAThS94eH/D3JHwaQkxuwhsk4XPWFD41/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;issued by a Certification Authority (CA), containing:&lt;/p&gt;

&lt;p&gt;version V (1, 2, or 3) 
  serial number SN (unique within CA) identifying certificate&lt;/p&gt;

&lt;p&gt;signature algorithm identifier AI&lt;/p&gt;

&lt;p&gt;issuer X.500 name CA)&lt;/p&gt;

&lt;p&gt;period of validity TA (from - to dates)&lt;/p&gt;

&lt;p&gt;Subject X.500 name A ( name of owner )&lt;/p&gt;

&lt;p&gt;Subject public-key info Ap ( algorithm, parameters, key )&lt;/p&gt;

&lt;p&gt;issuer unique identifier (v2+)&lt;/p&gt;

&lt;p&gt;subject unique identifier (v2+)&lt;/p&gt;

&lt;p&gt;extension fields (v3)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;signature (of hash of all fields in certificate)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;notation CA«A» denotes certificate for A signed by CA&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/bXnV8y/btqAQlQuE0d/UH45LW0KuvgwGs9x4DZyaK/img.png&quot; alt=&quot;img&quot; /&gt;믿을 수 있는 퍼블릭키를 알려주는 게 목적&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obtaining a Certificate&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;any user with access to CA can get any certificate from it&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;only the CA can modify a certificate&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;because cannot be forged, certificates can be placed in a public directory&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;if both users share a common CA then they are assumed to know its public key&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;otherwise CA’s must form a hierarchy&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;use certificates linking members of hierarchy to validate other CA’s&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;each CA has certificates for clients (forward) and parent (backward)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;enable verification of any certificate from one CA by users of all other CAs in hierarchy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Certificate Revocation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;certificates have a period of validity may need to revoke before expiry, eg:&lt;/p&gt;

&lt;p&gt;user’s private key is compromised&lt;/p&gt;

&lt;p&gt;user is no longer certified by this CA&lt;/p&gt;

&lt;p&gt;CA’s certificate is compromised&lt;/p&gt;

&lt;p&gt;CA’s maintain list of revoked certificates : the Certificate Revocation List (CRL)&lt;/p&gt;

&lt;p&gt;users should check certificates with CA’s CRL&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;AUTH&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;*Authentication and FIDO*&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Authentication&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;the act of confirming the truth of an attribute of a single piece of data (a datum) claimed true by an entity.&lt;/p&gt;

&lt;p&gt;Approaches&lt;/p&gt;

&lt;p&gt;Something you know : 지식&lt;/p&gt;

&lt;p&gt;Something you have : 소유&lt;/p&gt;

&lt;p&gt;Something you are : 특성&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Authentication Factors&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Approaches
Something you know: Knowledge factors&lt;/p&gt;

&lt;p&gt;password, PIN (Personal Identification Number)&lt;/p&gt;

&lt;p&gt;Something you have: Ownership factors&lt;/p&gt;

&lt;p&gt;ID card, Security token, Smart phones •&lt;/p&gt;

&lt;p&gt;Something you are: Inherence factors&lt;/p&gt;

&lt;p&gt;fingerprint, DNA, signature, face, …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Something you know&lt;/strong&gt; : 가장 많이 만나는 형태 . 로그인 절차 또한 인증&lt;/p&gt;

&lt;p&gt;Knowledge based authentication&lt;/p&gt;

&lt;p&gt;Password&lt;/p&gt;

&lt;p&gt;User has a secret password
  System checks password to authentication user&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Something you have&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Uses a hardware device that a user holds&lt;/p&gt;

&lt;p&gt;OTP dongle : One Time Password 인터넷 보안 카드 &amp;gt; 소유 기반&lt;/p&gt;

&lt;p&gt;열쇠도 소유 기반이라고 볼 수 있음&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Something you are&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Biometric authentication : Finger-print, IRIS, DNA, Face&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;생체&lt;/strong&gt; &lt;strong&gt;인증과&lt;/strong&gt; &lt;strong&gt;핀테크&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;인터넷 결제 및 모바일 결제의 미사용 이유
정보유출 및 보안의 우려 —&amp;gt; 생체인증의 필요성 대두&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;생체&lt;/strong&gt; &lt;strong&gt;인증&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;개인의 고유한 생체적 (biological) 특성을 이용
지문, 홍채, 망막, 정맥, 손금, 목소리, 얼굴, 걸음거리, …&lt;/p&gt;

&lt;p&gt;인증으로 방식으로써의 강점
안전성: 복제, 도용, 위변조가 어렵다. | 편이성: 가장 사용하기 편리한 인증 방법&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;지문인식&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;사용자의 지문을 확인하여 인증
지문을 채취할 수 있어야 하기 때문에 모바일 디바이스와 같 은 별도의 기기를 필요로 한다.
현재 지문인식을 적용하고 있는 핀테크 결제 서비스 : Apple pay • 삼성페이&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ECG (&lt;/strong&gt;&lt;strong&gt;심전도&lt;/strong&gt;&lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;심장 박동의 패턴을 이용 : 심전도 측정을 위한 특수 장비가 필요&lt;/p&gt;

&lt;p&gt;나이미 (Nymi) : 심장 박동을 기반으로한 웨어러블 디바이스&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;얼굴인식&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;얼굴인식을 이용한 서비스&lt;/p&gt;

&lt;p&gt;인증 서비스 : 얼굴 정보를 인식하여 사용자를 확인 인증&lt;/p&gt;

&lt;p&gt;얼굴 검출(탐지) 서비스 : (촬영된 영상에서) 얼굴을 찾아낸다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;생체인증의&lt;/strong&gt; &lt;strong&gt;고려사항&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;미리 습득된 정보와 실제 데이터의 구분이 가능해야 한다.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;3d프린터를 이용한 지문 불법 복사&lt;/td&gt;
      &lt;td&gt;얼굴 촬영이미지를 이용한 불법 얼굴 인증&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;“Liveness check”가 필요&lt;/p&gt;

&lt;p&gt;실제 살아있는 사람의 정보인지를 확인 / 예) 지문 채취 기기에서 실제 사람의 손가락인지의 여부를 판별 한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Two-factor authentication&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Two factors are required for authentication -&amp;gt; Multifactor authentication
e.g., password + smart phone, fingerprint + PIN&lt;/p&gt;

&lt;p&gt;각 인증 방법은 조금씩 문제가 있음.&lt;/p&gt;

&lt;p&gt;지식 : 패스워드 노출 가능성 존재&amp;gt; 패스워드 노출이 된지 잘 모르는 경우,&lt;/p&gt;

&lt;p&gt;TATD time of attack - time of detection&lt;/p&gt;

&lt;p&gt;소유 : 노출이 되었을 때 빨리 알 수 있음, 나의 부주의로 인해 정보 노출 가능성 존재&lt;/p&gt;

&lt;p&gt;특성 : 인증 정보 한 번이라도 누출 시 변경이 아예 불가능&lt;/p&gt;

&lt;p&gt;일반적으로 2~3개 섞는 보안 방식을 사용 2FA factor auth~&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FIDO&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Public-key Cryptography&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;probably most significant advance in the 3000 year history of cryptography&lt;/li&gt;
  &lt;li&gt;uses &lt;strong&gt;two&lt;/strong&gt; keys – a public &amp;amp; a private key asymmetric since parties are not equal&lt;/li&gt;
  &lt;li&gt;uses clever application of number theoretic concepts to function&lt;/li&gt;
  &lt;li&gt;complements rather than replaces private key crypto&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;UAF, U2F&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;UAF ( Universal Authentication ) : Biometric Auth / 서버 입장에서는 뭐로 인식하든 신경쓸 필요 없음 
퍼블릭키와 프라이빗키로 구성되어 있음. 상대에게 퍼블릭 키를 쓸 거라고 등록해 놓고서 나는 서명만 해서 보내면 됨. 내가 프라이빗키로 서명을 어떻게 할가요… 를 정한 것
- Generalize biometric Auth
- Decouples user identification and client&lt;/li&gt;
  &lt;li&gt;U2F : Two-factor auth
- Two-factor auth : 인증은 유저 클라이언트에서 끝남
- PIN or Password 
- + USB key
- + Bluetooth&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Trade offs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Security vs. Usability vs. Cost&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;보안이 좋아지면 쓰기 불편해지고 안전하면서 쓰기 편하면 비용이 비싸고… 세 가지를 모두 만족시키긴 어렵다! 하날 얻기 위해 나머질 희생해야 하는게 보안의 큰 문제&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Oct 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/security/2019/10/01/PKI-auth/</link>
        <guid isPermaLink="true">http://localhost:4000/study/security/2019/10/01/PKI-auth/</guid>
      </item>
    
      <item>
        <title>Message Authentication and Op Mode</title>
        <description>&lt;ol&gt;
  &lt;li&gt;송신자 확인 / 검증 목적 &amp;gt; 보낸이를 확인하기 위해서 2. 메세지의 무결성&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/bgQtVL/btqARyH4zfw/FHymWAxGfRBcYObc0bhAK1/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;MACm=F(Kab, M)&lt;/p&gt;

&lt;p&gt;Message not altered&lt;/p&gt;

&lt;p&gt;The alleged sender confirmed&lt;/p&gt;

&lt;p&gt;The proper sequence of messages assured&lt;/p&gt;

&lt;p&gt;Similar to encryption&lt;/p&gt;

&lt;p&gt;NIST recommends the use of DES&lt;/p&gt;

&lt;p&gt;One difference: authentication algorithm need not be reversible, less vulnerable&lt;/p&gt;

&lt;p&gt;메세지 저네를 암호화하는게 아니라 메세지에 대한 조금한 해쉬함수를 만들어서 전송 확인할 때도 해쉬값만 확인&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hash Function&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;condenses arbitrary message to fixed size &amp;gt; No secret key needed
usually assume hash function is public, hash used to detect changes to message&lt;/p&gt;

&lt;p&gt;통조림 : 데이터가 들어가면 고정된 크기가 생성 &amp;gt; 무엇을 넣던 간 동일한 산출값&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;해쉬함수란 ?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;퍼블릭키로 복호화 할 때… 퍼블릭키에 대한 신뢰성 문제?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;one-way property&lt;/strong&gt; : computationally infeasible to find data mapping to specific hash&lt;/p&gt;

&lt;p&gt;데이터 입력-해쉬값 출력 / 원본은 찾기 힘들어야 한다는 이론. 
항상 정해진 값 산출로 일방향은 쉬운데 역방향은 불가능&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;collision-free property&lt;/strong&gt; : computationally infeasible to find two data to same hash&lt;/p&gt;

&lt;p&gt;충돌 &amp;gt; 정해진 해쉬값 32글자 해쉬값이 나오게 되어 있다. 운 좋게 같은 해쉬값이 나올 수 있다 입력은 무한 출력은 유한함 . 똑같은 해쉬값을 찾고자 입력 데이터를 만들기는 만들기는 굉장히 힘듦&lt;/p&gt;

&lt;p&gt;간단한 특성으로 어디서는 가능함 / 연산이 간단하다고 말하는데, 역으로는 안 됨 &amp;gt; 안전한 특성과 간단한 연산 &amp;gt; 전기를 덜 먹음 &amp;gt; 작은 곳에서도 실행이 가능함 … 가장 간단한 기기에도 들어갈 수 있는 해쉬함수&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Secure Hash Algorithm&lt;/strong&gt; - 대표적인 해쉬 함수&lt;/p&gt;

&lt;p&gt;키사이즈가 없음 키가 들어가지 않아서 얼마자리 크기의 해쉬 함수를 만들어내는가?&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;sha-224 : 해쉬값 크기&lt;/td&gt;
      &lt;td&gt;숫자가 클 수록 컬리젼이 덜 발생함&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&amp;gt; 역으로 찾을 수 없지는 않지만, 숫자가 커질 수록 경우의 수가 늘어나서 같은 경우를 찾기 힘들어짐&lt;/p&gt;

&lt;p&gt;&amp;gt; 유한의 범위가 증가&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Designed for compatibility with increased security provided by the AES cipher&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Keyed Hash Functions as MAC&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;KeyedHash = Hash(Key&lt;/td&gt;
      &lt;td&gt;Message)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&amp;gt; led to development of HMAC - 전기들어가는 건 웬만하면 다 할 수 있음&lt;/p&gt;

&lt;p&gt;H(M) &amp;gt; h / M, M’ 비교 하지 말고 &amp;gt; 해쉬함수로 돌려서 결과물이 같은지 다른지 확인 H(M) =?= H(M’) &amp;gt;&lt;/p&gt;

&lt;p&gt;h =?= h’ 굳이 100기가 …파일을 확인하지 않아도 32바이트 해쉬값을 찾으면 됨&lt;/p&gt;

&lt;p&gt;메세지말고 다른 걸 붙이고 싶어했음 &amp;gt; 키드해쉬값&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;H(K(키값)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;M(메세지값 )) 그냥 키에 메세지를 붙이고 키와 메세지 전체를 해쉬로 돌림&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;메세지를 받았을 때, 키를 알아야 하는데 키를 아는 사람만 만들 수 있는 해쉬 키를 모르는 상황에서는 해쉬값을 만들 수 없음 &amp;gt; 메세지 인증 : 메세지 무결성 / 상대 퍼블릭키로 풀린다는 점에서 송신자를 확인할 수 있는 것&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;** HMAC&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;use, without modifications, hash functions&lt;/li&gt;
  &lt;li&gt;use and handle keys in a simple way.&lt;/li&gt;
  &lt;li&gt;allow for easy replaceability of embedded hash function&lt;/li&gt;
  &lt;li&gt;preserve original performance of hash function without significant degradation&lt;/li&gt;
  &lt;li&gt;have well understood cryptographic analysis of authentication mechanism strength&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/ef9LQI/btqAThezEjO/izn4z08fCHwKpQ31tMckw0/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Modes of Operations&lt;/strong&gt; - 암호학의 연장선 ( 동작 모드 : 대칭키 암호는 동작모드까지 언급 필수)&lt;/p&gt;

&lt;p&gt;block ciphers encrypt fixed size blocks
  eg. DES encrypts 64-bit blocks with 56-bit key&lt;/p&gt;

&lt;p&gt;need some way to en/decrypt arbitrary amounts of data in practise&lt;/p&gt;

&lt;p&gt;NIST SP 800-38A defines 5 modes&lt;/p&gt;

&lt;p&gt;have block and stream modes
to cover a wide variety of applications&lt;/p&gt;

&lt;p&gt;can be used with any block cipher&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Electronic Codebook Mode (ECB) 
message is broken into independent blocks which are encrypted 
each block is a value which is substituted, like a codebook, hence name 
each block is encoded independently of the other blocks 
  Ci = E(K, Pi) 
uses: secure transmission of single values 
  message repetitions may show in ciphertext if aligned with message block
  particularly with data such as graphics 
  or with messages that change very little, which become a code-book analysis problem weakness is due to the encrypted message blocks being independent
main use is sending a few blocks of data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;문제 : 패턴이 보임 기본적으로 실루엣이 보임 잘라서 암호화하기 때문에 des8 aes 16 // 8바이트 8글자 그림은 1~2바이트가 점 1개 데이터가 너무 많아서 데이터의 윤곽이 보이는 문제&lt;/p&gt;

&lt;p&gt;같은 패턴의 반복이 나오면 그게 보임. 일종의 모드라고는 하는데 모드가 아니고 아무것도 없는 상태라고 봄&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cipher Block Chaining Mode (CBC) : 앞 블럭 값을 XOR로 입혀서 재암호화 하는 것* 같은 값을 암호화 해도 앞의 메세지에 따라 달라짐 
message is broken into blocks
linked together in encryption operation 
each previous cipher blocks is chained with current plaintext block, hence name 
use Initial Vector (IV) to start process 
  Ci = E(K, Pi ⨁ Ci-1)
C0 = IV 
uses: bulk data encryption, authentication&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;피원과 피투가 똑같을 때 실질적으로 암호화 될 때는 피원은 아이브이, 피투는 씨원값의 엑스오알… 암호화가 되니까 계속 같은 값이더라도 앞에서 들어오는 값이 달라지기 때문에 실질적 암호값은 달라짐&lt;/p&gt;

&lt;p&gt;계속 같은 값이라도 계속 뒷 암호화에 영향을 주니까 … 다시 말하자면 피원부터 피5까지 다 똑같다고 하더라도,, 값이 계속 바뀜&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/buOYv5/btqAQNlEytX/m8Y2P8lr7ss75JjmwUZz31/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cipher Feedback Mode (CFB) 
message is treated as a stream of bits 
added to the output of the block cipher 
result is feed back for next stage (hence name)
standard allows any number of bit (1,8, 64 or 128 etc) to be fed back 
  denoted CFB-1, CFB-8, CFB-64, CFB-128 etc 
most efficient to use all bits in block (64 or 128) 
Ci = Pi ⨁ E(K, Ci-1) 
C0 = IV 
uses: stream data encryption, authentication&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;문제 &amp;gt; 중간에 하나씩 만들어서 통신으로 보낼 때,데이터는 전송될 때 손실되는 경우가 심함 비올 때 특히 데이터가 많이 날아감.. 전파가 물에 약함 통과를 못함 신호가 가다가 깨지고 등등 한두 개 보내는 게 아니라 만개 십만 개니까… 중간 다섯 번째가 데이터가 손실 되었을 때 ,,, 그럼 복호화 할 대 계속 앞에 게 있어야 함… 5,6이 없으면 그 뒤로 계속 못풂 … 일단 뒤에 걸 다 기다리고 있다가 깨진 부분이 올 때까지 기다려야 함&lt;/p&gt;

&lt;p&gt;**Advantages and Limitations of CFB 
**appropriate when data arrives in bits/bytes most common stream mode&lt;/p&gt;

&lt;p&gt;Limitation: need to stall while doing block encryption after every n-bits&lt;/p&gt;

&lt;p&gt;note that the block cipher is used in encryption errors propagate for several blocks after the error&lt;/p&gt;

&lt;p&gt;플레인 택스트를 작게 만들고… 씨비씨처럼 아브이로 시작 암호화된 값을 자르고 그걸 다시 암호&lt;/p&gt;

&lt;p&gt;씨원을 갖고 위로 올려서 집어 넣음 암호화 결과가 작기 때문에 쉬프트 레지스터에 넣음&lt;/p&gt;

&lt;p&gt;데이터가 있으면 쉬프트 시킴 /여기서는 레프트. 한 칸 왼쪽으로 밂.&lt;/p&gt;

&lt;p&gt;원래 있던 값이 들어가는 건 CBC와 비슷&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/KP3f2/btqARxWKB9o/OMof3UACklEio7BinQAHK1/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Counter Mode (CTR) 
a “new” mode, though proposed early on 
similar to OFB bur encrypts counter value rather than any feedback value
must have a different key &amp;amp; counter value for every plaintext block (never reused) 
Oi = E(K, i) 
Ci = Pi ⨁ Oi
uses: high-speed network encryptions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Advantages and Limitations of CTR&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;efficiency
  can do parallel encryptions in h/w or s/w&lt;/p&gt;

&lt;p&gt;can preprocess in advance of need&lt;/p&gt;

&lt;p&gt;good for bursty high speed links&lt;/p&gt;

&lt;p&gt;random access to encrypted data blocks provable security (good as other modes)&lt;/p&gt;

&lt;p&gt;but must ensure never reuse key/counter values, otherwise could break (cf OFB)&lt;/p&gt;

&lt;p&gt;10초후 어떤 데이터가 발생할지 모름. 근데 씨티알은 먼저 계산할 수 있음 점선 안 박스 &amp;gt; 플레인 텍스트를 암호화하는게 아니니까 / 데이터가 올 때마다 게산할 필요가 없어짐 // 통신 측면에서 유리해짐&lt;/p&gt;

&lt;p&gt;블럭 사이퍼는 데이터가 어느정도 쌓였을 때 … 양동이 단위로 복호화 /. 스트림은 바로바로&lt;/p&gt;

&lt;p&gt;블럭과 스트림의 차이가 애매해지긴 했음 블럭이 작고… 8, 16바이트가 어느정도 된다고 생각했는데 지금은 작고.. 기본적 데이터가 너무너무 커졌음. 예전엔 의미가 있었음.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://k.kakaocdn.net/dn/cPho0z/btqARXVenaN/AaFtrN6A9xtgdLI71pm0Hk/img.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 30 Sep 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/security/2019/09/30/Message-Auth-and-OpMode/</link>
        <guid isPermaLink="true">http://localhost:4000/study/security/2019/09/30/Message-Auth-and-OpMode/</guid>
      </item>
    
      <item>
        <title>[6] MySQL - Example of Command line</title>
        <description>&lt;p&gt;Book 테이블에서 모든 도서의 이름과 가격을 검색하시오.&lt;/p&gt;

&lt;p&gt;SELECT bookname, price FROM Book;&lt;/p&gt;

&lt;p&gt;Book 테이블에서 모든 도서의 가격과 이름을 검색하시오.&lt;/p&gt;

&lt;p&gt;SELECT price, bookname FROM Book;&lt;/p&gt;

&lt;p&gt;Book 테이블에서 모든 도서의 도서번호, 도서이름, 출판사, 가격을 검색하려면?&lt;/p&gt;

&lt;p&gt;SELECT bookid, bookname, publisher, price FROM Book;&lt;/p&gt;

&lt;p&gt;테이블의 모든 속성을 보이려면&lt;/p&gt;

&lt;p&gt;SELECT * FROM Book;&lt;/p&gt;

&lt;p&gt;Book 테이블에서 도서 테이블에 있는 모든 출판사를 검색하려면?&lt;/p&gt;

&lt;p&gt;SELECT publisher FROM Book;&lt;/p&gt;

&lt;p&gt;중복된 데이터를 제거하여 한 번씩만 출력하려면?
 SELECT DISTINCT publisher FROM Book;&lt;/p&gt;

&lt;p&gt;Book 테이블에서 가격이 10,000원 이상 20,000 이하인 도서를 검색하려면?&lt;/p&gt;

&lt;p&gt;SELECT * FROM Book WHERE price BETWEEN 10000 AND 20000&lt;/p&gt;

&lt;p&gt;AND를 이용하여 변경&lt;/p&gt;

&lt;p&gt;SELECT * FROM Book WHERE price &amp;gt;= 10000 AND price &amp;lt;= 20000;&lt;/p&gt;

&lt;p&gt;Book 테이블에서 출판사가 ‘굿스포츠’ 혹은 ‘대한미디어’인 도서를 검색하려면?&lt;/p&gt;

&lt;p&gt;SELECT * FROM Book WHERE publisher IN (‘굿스포츠’, ‘대한미디어’)&lt;/p&gt;

&lt;p&gt;출판사가 ‘굿스포츠’ 혹은 ‘대한미디어’가 아닌 도서를 검색하려면?&lt;/p&gt;

&lt;p&gt;SELECT * FROM Book WHERE publisher NOT IN (‘굿스포츠’, ‘대한미디어’)&lt;/p&gt;

&lt;p&gt;STUDENT 테이블에서 나이(AGE)가 30 이상인 학생 출력하기&lt;/p&gt;

&lt;p&gt;SELECT * FROM STUDENT WHERE AGE &amp;gt;= 30&lt;/p&gt;

&lt;p&gt;STUDENT 테이블에서 10번 과정 소속 학생 출력하기&lt;/p&gt;

&lt;p&gt;SELECT * FROM STUDENT WHERE COU_ID=10&lt;/p&gt;

&lt;p&gt;STUDENT 테이블에서 이름이 김준형인 학생을 출력하기&lt;/p&gt;

&lt;p&gt;SELECT * FROM STUDENT WHERE STU_NAME=’김준형’&lt;/p&gt;

&lt;p&gt;STUDENT 테이블에서 나이가 21에서 29 사이인 학생을 검색&lt;/p&gt;

&lt;p&gt;SELECT * FROM STUDENT WHERE AGE &amp;gt;= 21 AND AGE &amp;lt;= 29&lt;/p&gt;

&lt;p&gt;STUDENT 테이블에서 나이가 21에서 29 사이인 학생 출력&lt;/p&gt;

&lt;p&gt;SELECT * FROM STUDENT WHERE AGE BETWEEN 21 AND 29&lt;/p&gt;

&lt;p&gt;STUDENT 테이블에서 나이가 21이거나 27이거나 28인 학생만 검색&lt;/p&gt;

&lt;p&gt;SELECT * FROM STUDENT WHERE AGE=21 OR AGE=27 OR AGE=28&lt;/p&gt;

&lt;p&gt;STUDENT 테이블에서 나이가 21이거나 27이거나 28인 학생 출력&lt;/p&gt;

&lt;p&gt;SELECT * FROM STUDENT WHERE AGE IN (21, 27, 28)&lt;/p&gt;

&lt;p&gt;Book 테이블에서 도서이름에 ‘축구’가 포함된 책이름과 출판사를 검색하려면?&lt;/p&gt;

&lt;p&gt;SELECT bookname, publisher FROM Book WHERE bookname LIKE ‘%축구%’;&lt;/p&gt;

&lt;p&gt;도서이름의 왼쪽 두 번째 위치에 ‘구’라는 문자열을 갖는 도서를 검색하려면?&lt;/p&gt;

&lt;p&gt;SELECT * FROM Book WHERE bookname LIKE ‘_구%’;&lt;/p&gt;

&lt;p&gt;Book 테이블에서 축구에 관한 도서 중 가격이 20,000원 이상인 도서를 검색하려면?&lt;/p&gt;

&lt;p&gt;SELECT * FROM Book WHERE bookname LIKE ‘%축구%’ AND price &amp;gt;= 20000;&lt;/p&gt;

&lt;p&gt;출판사가 ‘굿스포츠’ 혹은 ‘대한미디어’인 도서를 검색하려면?&lt;/p&gt;

&lt;p&gt;SELECT * FROM Book WHERE publisher=’굿스포츠’ OR publisher=’대한미디어’;&lt;/p&gt;

&lt;p&gt;성이 ‘김’인 학생을 출력&lt;/p&gt;

&lt;p&gt;SELECT * FROM STUDENT WHERE STU_NAME LIKE ‘김%’&lt;/p&gt;

&lt;p&gt;이름의 두 번째 글자가 ‘봉’이고 그 뒤는 무엇이든 관계없는 사원 출력&lt;/p&gt;

&lt;p&gt;SELECT * FROM STUDENT WHERE STU_NAME LIKE ‘_봉%’&lt;/p&gt;

&lt;p&gt;이름과 과정번호와 이메일 출력&lt;/p&gt;

&lt;p&gt;SELECT STU_NAME, COU_ID, STU_EMAIL FROM STUDENT&lt;/p&gt;

&lt;p&gt;STUDENT 테이블에서 이메일이 NULL인 학생은&lt;/p&gt;

&lt;p&gt;SELECT * FROM STUDENT WHERE STU_EMAIL=NULL&lt;/p&gt;

&lt;p&gt;SELECT * FROM STUDENT WHERE STU_EMAIL IS NULL&lt;/p&gt;

&lt;p&gt;이메일이 NULL이 아닌 학생 출력&lt;/p&gt;

&lt;p&gt;SELECT * FROM STUDENT WHERE STU_EMAIL IS NOT NULL&lt;/p&gt;

&lt;p&gt;Book 테이블에서 도서를 이름순으로 정렬하려면?&lt;/p&gt;

&lt;p&gt;SELECT * FROM Book ORDER BY bookname (ASC);&lt;/p&gt;

&lt;p&gt;도서를 가격순으로 정렬하고, 가격이 같으면 이름순으로 정렬&lt;/p&gt;

&lt;p&gt;SELECT * FROM Book ORDER BY price, bookname;&lt;/p&gt;

&lt;p&gt;도서를 가격의 내림차순으로 정렬하고 만약 가격이 같다면 출판사의 오름 차순으 로 정렬하려면?&lt;/p&gt;

&lt;p&gt;SELECT * FROM Book ORDER BY price DESC, publisher ASC;&lt;/p&gt;

&lt;p&gt;나이를 기준으로 오름차순으로 정렬하여 출력&lt;/p&gt;

&lt;p&gt;SELECT * FROM STUDENT ORDER BY AGE ASC&lt;/p&gt;

&lt;p&gt;나이가 많은 사람부터 적은 사람 순으로 순차적으로 출력&lt;/p&gt;

&lt;p&gt;SELECT * FROM STUDENT ORDER BY AGE DESC&lt;/p&gt;

&lt;p&gt;고객이 주문한 도서의 총 판매액을 구하려면?&lt;/p&gt;

&lt;p&gt;SELECT SUM(saleprice) FROM Orders;&lt;/p&gt;

&lt;p&gt;고객이 주문한 도서의 총 판매액을 총매출로 구하려면?&lt;/p&gt;

&lt;p&gt;SELECT SUM(saleprice) AS 총매출 FROM Orders;&lt;/p&gt;

&lt;p&gt;2번 김연아 고객이 주문한 도서의 총 판매액을 총매출로 구하려면?&lt;/p&gt;

&lt;p&gt;SELECT SUM(saleprice) AS 총매출 FROM Orders WHERE custid=2;&lt;/p&gt;

&lt;p&gt;고객이 주문한 도서의 총 판매액, 평균값, 최저가, 최고가를 구하려면?&lt;/p&gt;

&lt;p&gt;SELECT SUM(saleprice) AS Total,&lt;/p&gt;

&lt;p&gt;​	AVG(saleprice) AS Average,&lt;/p&gt;

&lt;p&gt;​	MIN(saleprice) AS Minimum,&lt;/p&gt;

&lt;p&gt;​	MAX(saleprice) AS Maximum&lt;/p&gt;

&lt;p&gt;FROM Orders;&lt;/p&gt;

&lt;p&gt;서점의 도서 판매 건수를 구하려면?&lt;/p&gt;

&lt;p&gt;SELECT COUNT(*) FROM Orders;&lt;/p&gt;

&lt;p&gt;학생들의 나이 총합 출력&lt;/p&gt;

&lt;p&gt;SELECT SUM(AGE) AS [나이 총합] FROM STUDENT&lt;/p&gt;

&lt;p&gt;학생들의 나이 평균 출력&lt;/p&gt;

&lt;p&gt;SELECT AVG(AGE) AS [나이 총합] FROM STUDENT&lt;/p&gt;

&lt;p&gt;고객별로 주문한 도서의 총 수량과 총 판매액을 구하려면?&lt;/p&gt;

&lt;p&gt;SELECT custid, COUNT(*) AS 도서수량, SUM(saleprice) AS 총액 FROM Orders GROUP BY custid;&lt;/p&gt;

&lt;p&gt;가격이 8,000원 이상인 도서를 두 권 이상 구매한 고객에 대하여 고객별 주문 도 서의 총 수량을 구해 보세요.&lt;/p&gt;

&lt;p&gt;SELECT custid, COUNT(*) AS 도서수량 FROM Orders WHERE saleprice &amp;gt;= 8000&lt;/p&gt;

&lt;p&gt;GROUP BY custid HAVING count(*) &amp;gt;= 2;&lt;/p&gt;

&lt;p&gt;소속 과정별 평균 나이를 과정 번호와 함께 출력&lt;/p&gt;

&lt;p&gt;SELECT COU_ID, AVG(AGE) AS [평균 나이] FROM STUDENT GROUP BY COU_ID&lt;/p&gt;

&lt;p&gt;과정별 평균 나이가 25세 이상인 과정의 번호와 평균 나이 구하기&lt;/p&gt;

&lt;p&gt;SELECT COU_ID, AVG(AGE) AS [평균 나이] FROM STUDENT
 GROUP BY COU_ID HAVING AVG(AGE) &amp;gt;= 25&lt;/p&gt;

&lt;p&gt;Customer 와 Orders 테이블을 합치려면?&lt;/p&gt;

&lt;p&gt;SELECT * FROM Customer, Orders;&lt;/p&gt;

&lt;p&gt;고객과 고객의 주문에 관한 데이터를 모두 보려면?&lt;/p&gt;

&lt;p&gt;SELECT * FROM Customer, Orders WHERE Customer.custid =Orders.custid;&lt;/p&gt;

&lt;p&gt;고객과 고객의 주문에 관한 데이터를 모두 고객번호 순으로 정렬하려면?&lt;/p&gt;

&lt;p&gt;SELECT * FROM Customer, Orders WHERE Customer.custid = Orders.custid ORDER BY Customer.custid;&lt;/p&gt;

&lt;p&gt;고객의 이름과 고객이 주문한 도서의 판매가격을 검색하려면?&lt;/p&gt;

&lt;p&gt;SELECT name, saleprice FROM Customer, Orders WHERE Customer.custid =Orders.custid;&lt;/p&gt;

&lt;p&gt;고객별로 주문한 모든 도서의 총 판매액과 고객이름을 구하려면?&lt;/p&gt;

&lt;p&gt;SELECT name, SUM(saleprice) FROM Customer, Orders WHERE Customer.custid = Orders.custid GROUP BY Customer.name&lt;/p&gt;

&lt;p&gt;고객별로 주문한 모든 도서의 총 판매액을 구하고, 고객별로 정렬하려면?&lt;/p&gt;

&lt;p&gt;SELECT name, SUM(saleprice) FROM Customer, Orders WHERE Customer.custid = Orders.custid GROUP BY Customer.name ORDER BY Customer.name;&lt;/p&gt;

&lt;p&gt;고객의 이름과 고객이 주문한 도서의 이름을 구하려면?&lt;/p&gt;

&lt;p&gt;SELECT Customer.name, book.bookname FROM Customer, Orders, Book&lt;/p&gt;

&lt;p&gt;WHERE Customer.custid =Orders.custid AND Orders.bookid =Book.bookid;&lt;/p&gt;

&lt;p&gt;가격이 20,000원인 도서를 주문한 고객의 이름과 도서의 이름을 구하려면?&lt;/p&gt;

&lt;p&gt;SELECT Customer.name, book.bookname FROM Customer, Orders, Book
 WHERE Customer.custid =Orders.custid&lt;/p&gt;

&lt;p&gt;​	AND Orders.bookid =Book.bookid AND Book.price =20000;&lt;/p&gt;

&lt;p&gt;도서를 구매하지 않은 고객을 포함하여 고객의 이름과 고객이 주문한 도서의 판매 가격을 구하려면?&lt;/p&gt;

&lt;p&gt;SELECT Customer.name, Orders.saleprice FROM Customer LEFT OUTER JOIN Orders&lt;/p&gt;

&lt;p&gt;ON Customer.custid =Orders.custid;&lt;/p&gt;

&lt;p&gt;도서가격이 가장 비싼 도서의 이름은?&lt;/p&gt;

&lt;p&gt;SELECT bookname FROM Book WHERE price = ( SELECT MAX(price) FROM Book) ;&lt;/p&gt;

&lt;p&gt;도서를 구매한 적이 있는 고객의 이름을 검색하려면?&lt;/p&gt;

&lt;p&gt;SELECT name FROM Customer WHERE custid IN (SELECT custid FROM Orders);&lt;/p&gt;

&lt;p&gt;대한미디어에서 출판한 도서를 구매한 고객의 이름을 알려면?&lt;/p&gt;

&lt;p&gt;SELECT name FROM Customer WHERE custid IN (SELECT custid FROM Orders
 WHERE bookid IN (SELECT bookid FROM Book WHERE publisher=’대한미디어’));&lt;/p&gt;

&lt;p&gt;도서를 주문하지 않은 고객의 이름을 검색하려면?&lt;/p&gt;

&lt;p&gt;SELECT name FROM Customer
 EXCEPT SELECT name FROM Customer WHERE custid IN (SELECT custid FROM Orders);&lt;/p&gt;

&lt;p&gt;주문이 있는 고객의 이름과 주소를 검색하려면?&lt;/p&gt;

&lt;p&gt;SELECT name, address FROM Customer WHERE EXISTS (SELECT * FROM Orders&lt;/p&gt;

&lt;p&gt;WHERE Customer.custid = Orders.custid);&lt;/p&gt;

&lt;p&gt;25세 이상인 학생들로 구성된 과정의 학생 정보 출력&lt;/p&gt;

&lt;p&gt;SELECT STU_NAME, age, COU_ID FROM STUDENT&lt;/p&gt;

&lt;p&gt;WHERE COU_ID IN ( SELECT DISTINCT COU_ID FROM STUDENT WHERE age&amp;gt;=25 )&lt;/p&gt;

&lt;p&gt;스포츠 의학은 한솔의학서적에서 출간했으며 가격은 90,000원이다. Book 테이블에 새로운 도서 ‘스포츠 의학’을 삽입하려면?&lt;/p&gt;

&lt;p&gt;INSERT INTO Book(bookid, bookname, publisher, price) VALUES (11, ‘스포츠 의학’, ‘한솔의학서적’, 90000);&lt;/p&gt;

&lt;p&gt;스포츠 의학은 한솔의학서적에서 출간했으며 가격은 미정이다. Book 테이블에 새로운 도서 ‘스포츠 의학’을 삽입하려면?&lt;/p&gt;

&lt;p&gt;INSERT INTO Book(bookid, bookname, publisher) VALUES (12, ‘스포츠 의학’, ‘한솔의학서적’);&lt;/p&gt;

&lt;p&gt;Customer 테이블에서 고객번호가 5인 고객의 주소를 ‘대한민국 부산’으로 변경하려면?&lt;/p&gt;

&lt;p&gt;UPDATE Customer SET address=’대한민국 부산’ WHERE custid=5;&lt;/p&gt;

&lt;p&gt;Customer 테이블에서 박세리 고객의 주소를 김연아 고객의 주소로 변경하려면?&lt;/p&gt;

&lt;p&gt;UPDATE Customer SET address = (SELECT address FROM Customer WHERE name=’김연아’)&lt;/p&gt;

&lt;p&gt;WHERE name=’박세리’;&lt;/p&gt;

&lt;p&gt;과정 번호가 10번인 학생의 과정 번호를 30번으로 수정&lt;/p&gt;

&lt;p&gt;UPDATE STUDENT SET COU_ID=30 WHERE COU_ID=10&lt;/p&gt;

&lt;p&gt;Customer 테이블에서 고객번호가 5인 고객을 삭제하려면?&lt;/p&gt;

&lt;p&gt;DELETE FROM Customer WHERE custid=5;&lt;/p&gt;

&lt;p&gt;모든 고객을 삭제하시오.&lt;/p&gt;

&lt;p&gt;DELETE FROM Customer;&lt;/p&gt;

&lt;p&gt;30번 과정 소속 학생을 삭제&lt;/p&gt;

&lt;p&gt;DELETE [FROM] STUDENT WHERE COU_ID=30&lt;/p&gt;

&lt;p&gt;영화 ( 영화번호, 제목, 장르번호, 제작년도, 제작사 )&lt;/p&gt;

&lt;p&gt;영화 테이블 전체를 검색하시오.&lt;/p&gt;

&lt;p&gt;SELECT * FROM 영화&lt;/p&gt;

&lt;p&gt;모든 영화제목과 제작사를 검색하시오.
 SELECT 제목, 제작사 FROM 영화&lt;/p&gt;

&lt;p&gt;제작년도가 2010년 이후인 영화제목을 검색하시오.
 SELECT 제목 FROM 영화 WHERE 제작년도 &amp;gt;= 2010&lt;/p&gt;

&lt;p&gt;제작년도가 2000년 부터 2019년 사이인 영화제목과 제작년도를 검색하시오.&lt;/p&gt;

&lt;p&gt;SELECT 제목, 제작년도 FROM 영화 WHERE 제작년도 &amp;gt;= 2000 AND 제작년도 &amp;lt;= 2019&lt;/p&gt;

&lt;p&gt;“하늘” 단어가 포함된 영화제목을 검색하시오.&lt;/p&gt;

&lt;p&gt;SELECT * FROM 영화 WHERE 제목 LIKE ‘%하늘%’&lt;/p&gt;

&lt;p&gt;모든 영화제목을 제작년도 순으로 검색하시오.
 SELECT * FROM 영화 ORDER BY 제작년도&lt;/p&gt;

&lt;p&gt;모든 영화제목을 제작년도 순으로 검색. 단 제작년도가 같으면 영화제목 순으로 검색하시오.&lt;/p&gt;

&lt;p&gt;SELECT * FROM 영화 ORDER BY 제작년도, 제목&lt;/p&gt;

&lt;p&gt;———&lt;/p&gt;

&lt;p&gt;영화장르 ( 장르번호, 장르명)&lt;/p&gt;

&lt;p&gt;영화 ( 영화번호, 제목, 장르번호, 제작년도, 제작사)&lt;/p&gt;

&lt;p&gt;영화제목, 장르명, 제작사를 select 하시오.&lt;/p&gt;

&lt;p&gt;SELECT 제목, 장르명, 제작사 FROM 영화, 영화장르&lt;/p&gt;

&lt;p&gt;장르번호별 영화의 건수를 select 하시오.&lt;/p&gt;

&lt;p&gt;SELECT 장르번호, COUNT(*) AS 영화건수 FROM 영화 GROUP BY 장르번호&lt;/p&gt;

&lt;p&gt;장르명별 영화의 건수를 select 하시오.&lt;/p&gt;

&lt;p&gt;SELECT 장르명, COUNT(*) AS 영화건수 FROM 영화, 영화장르 GROUP BY 장르명&lt;/p&gt;

&lt;p&gt;2개 이상의 영화를 만든 제작사를 select 하시오.&lt;/p&gt;

&lt;p&gt;SELECT 제작사, COUNT(&lt;em&gt;) FROM 영화 GROUP BY 제작사 HAVING COUNT(&lt;/em&gt;) &amp;gt;= 2&lt;/p&gt;

&lt;p&gt;가장 최근에 만들어진 영화 제목과 제작년도를 select 하시오.&lt;/p&gt;

&lt;p&gt;SELECT 제목, 제작년도 FROM 영화 WHERE 제작년도 = (SELECT MAX( 제작년도 ) FROM 영화 )&lt;/p&gt;

&lt;p&gt;———&lt;/p&gt;

&lt;p&gt;영화장르 ( 장르번호, 장르명)&lt;/p&gt;

&lt;p&gt;영화 ( 영화번호, 제목, 장르번호, 제작년도, 제작사)&lt;/p&gt;

&lt;p&gt;영화장르 테이블에 3개의 장르 정보를 insert 하시오.
 INSERT INTO 영화장르 VALUES (1, ‘sf’)&lt;/p&gt;

&lt;p&gt;영화 테이블에 5개의 영화정보를 insert 하시오.
 INSERT INTO 영화 VALUES (1, ‘룰루랄라’, 01, 2019, ‘신기루’)&lt;/p&gt;

&lt;p&gt;영화 테이블에서 1번째 영화의 제작년도를 변경하시오.
 UPDATE 영화 SET 제작년도 = ‘2019’ WHERE 영화번호 = 101&lt;/p&gt;

&lt;p&gt;영화 테이블에서 2번째 영화의 장르번호를 변경하시오. 변경이 안된다면 이유를 설명하시오&lt;/p&gt;

&lt;p&gt;UPDATE 영화 SET 장르번호 = 21 WHERE 영화번호 =101&lt;/p&gt;

&lt;p&gt;영화 테이블에서 영화장르의 장르번호를 외래키로 사용하고 있어서 변경 불가능&lt;/p&gt;

&lt;p&gt;영화장르 테이블에서 1번째 장르를 삭제하시오. 삭제가 안된다면 이유를 설명하시오&lt;/p&gt;

&lt;p&gt;DELETE FROM 영화장르 WHERE 장르번호 = 01&lt;/p&gt;

&lt;p&gt;영화장르의 장르번호를 영화테이블에서 데이터를 사용하고 있어서 변경 불가능&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/database/2019/04/15/6-example/</link>
        <guid isPermaLink="true">http://localhost:4000/study/database/2019/04/15/6-example/</guid>
      </item>
    
      <item>
        <title>[4] Database 관계대수와 관계해수</title>
        <description>&lt;h3 id=&quot;ch5-관계-대수와-관계-해수&quot;&gt;CH5 관계 대수와 관계 해수&lt;/h3&gt;

&lt;h4 id=&quot;01-관계-대수&quot;&gt;01 관계 대수&lt;/h4&gt;

&lt;p&gt;: 원하는 데이터를 얻기 위해서 어떻게 질의를 수행할 것인지 일련의 연산을 순서대로 명시해야 하는 절차적 언어&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;관계 대수는 관계 해석과 기능과 능력 면에서 동등하다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;관계 대수로 표현한 식은 관계 해석으로 표현할 수 있다. ( 역 성립 )&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;사용자가 요청한 데이터를 정보화 ~= 산술 연산자와 유사&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;대수 : 수 대신 문자를 사용해 문제를 쉽게 하고, 수학적 법칙을 간단 명확하게 표현&lt;/p&gt;

&lt;p&gt;관계 대수 : 데이터베이스에 저장된 데이터를 문자와 사용한 연산을 통해 요청한 데이터를 정보화하여 얻을 수 있는데 그 원리가 산술 연산자와 유사함&lt;/p&gt;

&lt;h4 id=&quot;순수-관계-연산자&quot;&gt;순수 관계 연산자&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;셀렉트&lt;/strong&gt; &lt;strong&gt;(SELECT, σ)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;릴레이션에서 주어진 조건에 만족하는 튜플을 선택하는 연산자&lt;/p&gt;

&lt;p&gt;수평적 (가로)으로 절단하여 그 일부를 가지고 구성한 것 = 수평 연산&lt;/p&gt;

&lt;p&gt;σ&lt;조건&gt; (R)&lt;/조건&gt;&lt;/p&gt;

&lt;p&gt;σ점수&amp;gt;80(학생)  &amp;gt; 학생 릴레이션에서 80점 초과 학생만 찾을 때&lt;/p&gt;

&lt;p&gt;셀렉트 연산자 : 하나의 입력 릴레이션에 적용되므로 단항 연산자이며, 한 릴레이션에서 조건을 만족하는 튜플의 부분 집합을 생성&lt;/p&gt;

&lt;p&gt;조건 : 프레디키드(predicate) &amp;gt; 일반적으로 릴레이션의 임의의 어트리뷰트와 성수, 비교 연산자, 부울 연산자를 포함할 수 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;프로젝트 (PROJECT, π)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;릴레이션에서 어트리뷰트 리스트에 제시된 어트리뷰트만을 추출하는 연산자&lt;/p&gt;

&lt;p&gt;릴레이션의 열(세로)에 해당하는 어트리뷰트를 추출하는 것 = 수직 연산&lt;/p&gt;

&lt;p&gt;π&lt;어트리뷰트 리스트=&quot;&quot;&gt;(R)&lt;/어트리뷰트&gt;&lt;/p&gt;

&lt;p&gt;π이름, 전공 (학생) &amp;gt; 학생 릴레이션에서 이름과 성적 추출&lt;/p&gt;

&lt;p&gt;결과 : 릴레이션의 카디날리티는 입력 릴의 카디날리티와 같고 차수는 항상 원 릴의 차수보다 작거나 같다&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;조인 (JOIN, ▷◁)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;공통 속성을 중심으로 두 개의 릴레이션을 하나로 합쳐서 새 릴레이션을 만듦&lt;/p&gt;

&lt;p&gt;종류 : 세타 조인, 동등 조인, 자연 조인, 외부 조인, 세미 조인&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;세타 조인과 동등 조인&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;세타 조인 : 선택연산의 비교 연산자가 = , &amp;lt; , &amp;gt; 등이 사용되는 연산&lt;/p&gt;

&lt;p&gt;동등 조인 : 세타 조인 중 비교 연산자가 =인 조인이고 표기 형식 ▷◁을 사용&lt;/p&gt;

&lt;p&gt;R ▷◁ 키 속성r = 키 속성s S&lt;/p&gt;

&lt;p&gt;학생 ▷◁ 학번=학번 성적&lt;/p&gt;

&lt;p&gt;중복되지 않은 값은 결과에 포함되지 않음 + 불필요한 중복이 있음&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;자연 조인
 동등 조인 결과로 얻어진 불필요한 중복되는 어트리뷰트를 한 개 제외한 조인
 R ▷◁ S
 학생 ▷◁N 성적
 조인 연산자들 중에서 가장 자주 사용
 중복되지 않을 때는 삭제된다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;외부 조인
 상대 릴레이션에서 대응되는 튜플을 갖지 못한 튜플이나 조인 어트리뷰트에 널 값이 들어 있는 튜플들을 다루기 위해서 조인 연산을 확장한 조인
 릴레이션에 관련된 튜플이 없으면 결과 릴레이션에서 어트리뷰트를 널 값으로 채운다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;
            &lt;ol&gt;
              &lt;li&gt;왼쪽 외부 조인
 R의 모든 튜플들을 결과에 포함, S에 관련 튜플이 없으면 결과 릴레이션에서 릴레이션 S의 어트리뷰트들은 널 값으로 채운다.&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;
            &lt;ol&gt;
              &lt;li&gt;오른쪽 외부 조인
 S의 모든 튜플을 결과에 포함, R에 관련 튜플이 없으면 결과 릴레이션에서 R의 어트리뷰트는 널 값으로 채운다.&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;
            &lt;ol&gt;
              &lt;li&gt;완전 외부 조인
 R과 S의 모든 튜플을 결과에 포함시키고, 상대 릴레이션에 관련된 튜플이 없으면 결과 릴레이션에서 상대 릴레이션의 어트리뷰트는 널 값으로 채운다.&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;디비전&lt;/strong&gt; &lt;strong&gt;(DIVISION, ÷)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;X ⊃ Y인 2개의 릴레이션에서 R(X)와 S(Y)가 있을 때, R의 속성이 S의 속성값을 모두 가진 튜플에서 S가 가진 속성을 제외한 속성만을 구하는 연산&lt;/p&gt;

&lt;p&gt;R [속성r ÷ 속성s] S&lt;/p&gt;

&lt;p&gt;속성 r,s는 동일 속성값을 가지는 속성이어야 한다.&lt;/p&gt;

&lt;h4 id=&quot;일반-집합-연산자&quot;&gt;일반 집합 연산자&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;합집합 (UNION, ⋃)&lt;/p&gt;

    &lt;p&gt;R 또는 S에 있거나 R과 S 모두에 속한 튜플로 이루어진 릴레이션&lt;/p&gt;

    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;R ⋃ S = {t&lt;/td&gt;
          &lt;td&gt;t ∈ R ∨ t ∈ S}&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;p&gt;중복된 튜플 제외 후 결과 릴레이션의 차수는 R 또는 S의 차수와 같디.&lt;/p&gt;

    &lt;p&gt;결과 릴레이션의 어트리뷰트의 이름과 같거나 S 어트리뷰트의 이름이 같아야 한다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;교집합 (INTERSECT, ∩)&lt;/p&gt;

    &lt;p&gt;R과 S 모두에 속한 튜플로 이루어진 릴레이션, 공통 정보 이외는 삭제&lt;/p&gt;

    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;R ∩ S = {t&lt;/td&gt;
          &lt;td&gt;t ∈ R ∧ t ∈ S}&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;결과 릴레이션의 차수는 R 또는 S와 같으며, 카디날리티&lt;/td&gt;
          &lt;td&gt;R ∩ S&lt;/td&gt;
          &lt;td&gt;는 릴레이션 R이나 S의 카디날리티보다 크지 않다.&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;차집합 (DIFFERENCE, -)&lt;/p&gt;

    &lt;p&gt;R에는 속하지만 S에는 속하지 않는 튜플로 이루어진 릴레이션&lt;/p&gt;

    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;R - S = {t&lt;/td&gt;
          &lt;td&gt;t ∈ R ∧ t ∉ S}&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;p&gt;겹치지 않는 튜플만 잔여&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;카티션 프로덕트 연산자 (CARTESIAN PRODUCT, ✕)&lt;/p&gt;

    &lt;p&gt;차수가 n + m이고, 카디날리티가 i*j이고, 어트리뷰트가 (A1, A2, … An, B1, B2, … Bm)이며, R과 S의 튜플들의 모든 가능한 조합으로 이루어진 릴레이션&lt;/p&gt;

    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;R x S = {r ∙ s&lt;/td&gt;
          &lt;td&gt;r ∈ R ∧ s ∈ S}&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;외부 합집합&lt;/p&gt;

    &lt;p&gt;합병 가능한 두 개의 릴레이션에 대해서만 적용&lt;/p&gt;

    &lt;p&gt;외부 합집합 U+는 완전하게 합병 가능하지 않은 두 릴레이션을 합집합으로 만드는 것&lt;/p&gt;

    &lt;p&gt;합병 가능하지 않은 어트리뷰트에 해당하는 값이 없는 튜플 = 널 값&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 15 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/database/2019/04/15/4/</link>
        <guid isPermaLink="true">http://localhost:4000/study/database/2019/04/15/4/</guid>
      </item>
    
      <item>
        <title>[3] Database 데이터 종속성과 정규화</title>
        <description>&lt;h3 id=&quot;데이터-종속성과-정규화&quot;&gt;데이터 종속성과 정규화&lt;/h3&gt;

&lt;h4 id=&quot;01-정규화의-의미&quot;&gt;01 정규화의 의미&lt;/h4&gt;

&lt;h5 id=&quot;정규화&quot;&gt;정규화&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;자료 저장 공간을 최소화하고 데이터베이스 내의 데이터가 불일치 되는 위험을 최소화&lt;/li&gt;
  &lt;li&gt;갱신 이상이 생기지 않도록 하기 위해 불필요한 데이터가 중복 저장되지 않도록 방지&lt;/li&gt;
  &lt;li&gt;잘못된 릴레이션 스키마를 보다 더 작은 속성의 세트로 나누어 갱신 이상이 발생하지 않는 바람직한 릴레이션 스키마로 만들어 가는 과정&lt;/li&gt;
  &lt;li&gt;반복적인 자료를 제거하여 데이터의 중복을 감소시킴으로써 중복으로 인한 여러 가지 이상현상을 제거&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;데이터베이스-스키마가-잘못-설계된-경우&quot;&gt;데이터베이스 스키마가 잘못 설계된 경우&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;100번 학생이 전자계산기구조와 운영체제라는 두 과목을 신청하였기에 이 학생의 이름은 두 번 저장되는 문제점 발생&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;중복된 데이터의 저장으로 인해 저장 공간이 낭비된다는 문제점 이외에도 중복되어 저장된 데 이터 때문에 릴레이션의 수정, 삽입, 삭제와 같은 조작을 할 때 여러 가지 곤란한 이상(anomaly) 현상이 생김&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;목적&quot;&gt;목적&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;어떤 관계라도 데이터베이스 내에서 표현이 가능하도록 만드는 것&lt;/li&gt;
  &lt;li&gt;관계에서 바람직하지 않은 삽입, 삭제, 갱신 이상이 발생하지 않도록 하는 것&lt;/li&gt;
  &lt;li&gt;새로운 형태의 데이터가 삽입될 때 관계를 재구성할 필요성을 줄이는 것&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;보다 간단한 관계 연산에 기초하여 검색을 보다 효율적으로 하는 것&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;이상현상-anomaly&quot;&gt;이상현상 (Anomaly)&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;수정 이상
    &lt;ul&gt;
      &lt;li&gt;중복 데이터 중에서 일부만 갱신되어 정보의 모순이 발생하는 것&lt;/li&gt;
      &lt;li&gt;중복 튜플 중 일부 튜플의 속성값만 변경시킴으로써 정보의 모순성이 발생하는 것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;삽입 이상&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;불필요한 정보를 함께 저장하지 않고는 어떤 정보를 저장하는 것이 불가능하기에 원하지 않는 정보를 강제로 삽입해야 하는 것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;삭제 이상&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;유용한 정보를 함께 삭제하지 않고는 어떤 정보를 삭제하는 것이 불가능한 것&lt;/li&gt;
      &lt;li&gt;한 튜플이 삭제됨으로써 유지되어야 할 정보까지도 삭제되는 연쇄 삭제현상으로 정보 손실 발생\&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;02-함수종속&quot;&gt;02 함수종속&lt;/h4&gt;

&lt;p&gt;임의 튜플에서 X의 값이 Y의 값을 함수적으로 결정한다면, Y가 X에 종속되었다고 한다 ( X → Y )&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;결정자 : 주어진 릴레이션에서 다른 속성 또는 속성의 집합을 고유하게 결정하는 하나 이상의 속성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;수강&lt;/strong&gt; &lt;strong&gt;릴레이션에서&lt;/strong&gt; &lt;strong&gt;결정자는&lt;/strong&gt;&lt;strong&gt;?&lt;/strong&gt;&lt;/p&gt;

&lt;h5 id=&quot;함수-종속의-성질&quot;&gt;함수 종속의 성질&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;완전 함수 종속&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;​	주어진 릴레이션 R에서 속성 B가 복합 속성 A에 함수적으로 종속하면서&lt;/p&gt;

&lt;p&gt;​	속성 A의 어떤 진부분 집합에도 함수적으로 종속하지 않는 것&lt;/p&gt;

&lt;p&gt;​	속성 B가 속성 A에 완전하게 함수적으로 종속한다고 표현&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;부분 함수 종속&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;속성 B가 복합 속성 A 전체가 아닌 일부에 의해 함수적으로 종속할 수 있는 속성이 존재할 때&lt;/p&gt;

&lt;h4 id=&quot;03-정규화-과정&quot;&gt;03 정규화 과정&lt;/h4&gt;

&lt;p&gt;&amp;gt; 차수가 높을 수록 데이터베이스의 무결성을 저해할 수 있는 논리적 모순 존재 가능성 하락&lt;/p&gt;

&lt;p&gt;&amp;gt; 중복 데이터 존재 가능성 하락&lt;/p&gt;

&lt;h5 id=&quot;제1정규형&quot;&gt;제1정규형&lt;/h5&gt;

&lt;p&gt;: 어떤 릴레이션 R에 속한 모든 도메인이 원잣값만으로만 구성&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;반복 집합이 있는 비정규 릴레이션 &amp;gt; 반복 집합 제거 &amp;gt; 모든 속성값이 원잣값으로 구성된 제1정규형 릴레이션&lt;/li&gt;
  &lt;li&gt;더이상 분해될 수 없는 원잣값으로만 구성된 릴레이션&lt;/li&gt;
  &lt;li&gt;규칙에 위배된다면 비정규 릴레이션에 해당&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;제1정규형에 만족하는 릴레이션&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;어떤 릴레이션 R에 속한 모든 도메인이 원자값&lt;/li&gt;
  &lt;li&gt;릴레이션의 속성값이 반복 집단이 없는, 더이상 분해될 수 없는 원자값으로만 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;반복 집합이 있는 비정규 릴레이션&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;* 반복 집한은 한 개의 기본키 값에 대해 두 개 이상의 값을 가질 수 있는 속성&lt;/p&gt;

&lt;h5 id=&quot;제2정규형&quot;&gt;제2정규형&lt;/h5&gt;

&lt;p&gt;: 어떤 릴레이션 R이 제1정규형이고, 키에 속하지 않는 속성 모두가 키에 완전 함수 종목으로 구성&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;모든 속성값이 원잣값으로 구성된 제1정규형 릴레이션 &amp;gt; 부분함수의 종속성 제거 
         &amp;gt; 제1정규형이면서 키가 아닌 모든 속성이 키에 완전함수적으로 종속&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;부분 함수 종속성 : 여러가지 갱신 이상이 발생&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​	&amp;gt; 갱인 이상이 발생하지 않도록 부분 함수적 종속성 제거 후 속성 모두가 기본키에 완전 함수 종속&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;하나의 릴레이션에 서로 다른 정보 기록으로 발생 &amp;gt; 이행적 함수 종속성 제거 후 직접적으로 함수적 종속&lt;/li&gt;
  &lt;li&gt;릴레이션을 분해 후 표현 &amp;gt; 중복 감소 및 갱신 이상 빈도수 감소&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;무손실&lt;/strong&gt; &lt;strong&gt;분해&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;* 자연 조인할 때 아무 정보 손실 없이 원래의 릴레이션으로 복귀된다면, 2NF로 두 개의 릴레이션으로 분해&lt;/p&gt;

&lt;h5 id=&quot;제3정규형&quot;&gt;제3정규형&lt;/h5&gt;

&lt;p&gt;: 어떤 릴레이션 R이 2NF고, 모든 속성이 기보니에 이행적 함수 종속이 아닐 때&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;이행적 함수 종속을 제거 - 키에 대해서 직접적으로 함수 종목&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이행적 함수 종속성 : 속성 A, B, C가 주어졌을 때 A→B와 B→C의 함수적 종속성이 존재하면 
 ( A→B^B→C ) 속성 C가 이행적으로 A에 종속한다 ( A→C )&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;이행적 함수 종속으로 인한 갱신 이상&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​	1. 수정 이상 - 정보의 모순성 발생  2. 삽입 이상 - 임시 삽입 모순  3. 갱신 이상 - 연쇄 삭제 현상
 * 모든 속성값이 원잣값으로 종속된 제2정규형 릴레이션 &amp;gt; 이행적 함수 종속 제거 &amp;gt; 키에 대해서 직접적으로 함수 종속하는 제3정규형 릴레이션&lt;/p&gt;

&lt;h5 id=&quot;보이스--코드-정규형&quot;&gt;보이스 / 코드 정규형&lt;/h5&gt;

&lt;p&gt;: 릴레이션 R이 제3정규형을 만족하고, 모든 결정자가 후보키일 때&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;키에 대해서 직접적 함수 종속인 제3정규형 릴레이션 &amp;gt; 후보키가 아닌 결정자를 제거 
                 &amp;gt; 모든 결정자가 후보키로 구성된 BCNF 릴레이션&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;BCNF에 속한 모든 릴레이션은 제3정규형에 속함 ( 역은 성립 불가능 )&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;결정자가 후보키가 아닌 릴레이션에서의 갱신 이상&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​	1. 수정 이상 - 정보의 모순성 발생  2. 삽입 이상 - 임시 삽입 모순  3. 갱신 이상 - 연쇄 삭제 현상&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;키가 아니면서 결정자 역할을 하는 속성 제거&lt;/li&gt;
  &lt;li&gt;키가 아니면서 결정자 역할을 하는 속성과 그 결정자에 함수적으로 종속하는 속성을 하나의 릴레이션에 넣는다.&lt;/li&gt;
  &lt;li&gt;이 릴레이션에서 결정자는 기본키가 된다&lt;/li&gt;
  &lt;li&gt;기존 릴레이션에 결정자를 남겨 기본키의 구성요소가 되도록 한다&lt;/li&gt;
  &lt;li&gt;이 결정자는 새 릴레이션에 대한 외래키 역할도 한다&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 15 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/database/2019/04/15/3/</link>
        <guid isPermaLink="true">http://localhost:4000/study/database/2019/04/15/3/</guid>
      </item>
    
      <item>
        <title>[2] Database 관계 데이터 모델과 관계 무결성 제약조건  </title>
        <description>&lt;h3 id=&quot;관계-데이터-모델과-관계-무결성-제약조건&quot;&gt;관계 데이터 모델과 관계 무결성 제약조건&lt;/h3&gt;

&lt;h4 id=&quot;01-관계형-데이터베이스의-구조&quot;&gt;01 관계형 데이터베이스의 구조&lt;/h4&gt;

&lt;h5 id=&quot;릴레이션--테이블&quot;&gt;릴레이션 = 테이블&lt;/h5&gt;

&lt;p&gt;: 정보를 구분하여 저장하는 기본 단위&lt;/p&gt;

&lt;p&gt;&amp;gt; 표의 형태로 표현 ( 실질적 데이터 저장 &amp;gt; 테이블 )&lt;/p&gt;

&lt;p&gt;&amp;gt; 릴레이션 스키마와 릴레이션 인스턴스의 합&lt;/p&gt;

&lt;p&gt;&amp;gt; 동일한 데이터베이스 내에서 같은 이름의 릴레이션 존재 불가능&lt;/p&gt;

&lt;p&gt;&amp;gt;현실 시계의 어떤 엔티티 표현&lt;/p&gt;

&lt;h5 id=&quot;속성--열&quot;&gt;속성 = 열&lt;/h5&gt;

&lt;p&gt;: 가장 작은 논리적 단위 - 파일 구조상 데이터 항목 / 데이터 필드&lt;/p&gt;

&lt;p&gt;&amp;gt; 구체적인 정보 항목             &amp;gt; 엔티티의 특성 기술&lt;/p&gt;

&lt;p&gt;&amp;gt; 관리 할 필요가 이는 속성만 선택하여 릴레이션에 포함&lt;/p&gt;

&lt;p&gt;&amp;gt; 같은 이름의 속성 존재 불가능&lt;/p&gt;

&lt;p&gt;&amp;gt; 속성의 개수 : 차수 ( Degree )&lt;/p&gt;

&lt;p&gt;속성(어트리뷰트) = 열 = 필드 / 속성의 개수 = 차수&lt;/p&gt;

&lt;h5 id=&quot;튜플--행&quot;&gt;튜플 = 행&lt;/h5&gt;

&lt;p&gt;: 속성의 모임 - 레코드와 같은 의미&lt;/p&gt;

&lt;p&gt;&amp;gt; 엔티티에 속한 구성원 개개의 정보 표현&lt;/p&gt;

&lt;p&gt;&amp;gt; 카디날리티 : 릴레이션을 구성하는 튜플의 수 = 행의 갯수 / 튜플 = 행 = 레코드 / 튜플의 개수 = 카디날리티&lt;/p&gt;

&lt;h5 id=&quot;도메인&quot;&gt;도메인&lt;/h5&gt;

&lt;p&gt;: 각 속성이 취할 수 있는 같은 타입의 원자값의 집합&lt;/p&gt;

&lt;p&gt;&amp;gt; 데이터 타입에 해당      &amp;gt; 동일 도메인 여러 속성에서 사용 가능&lt;/p&gt;

&lt;p&gt;&amp;gt; 릴레이션에 저장되는 데이터값들이 본래 의도했던 값들만 저장되게 한다&lt;/p&gt;

&lt;p&gt;&amp;gt; 실제 속성값을 나타낼 때 그 값의 합법 여부를 시스템이 검사&lt;/p&gt;

&lt;h5 id=&quot;릴레이션-스키마와-인스턴스&quot;&gt;릴레이션 스키마와 인스턴스&lt;/h5&gt;

&lt;p&gt;릴레이션 스키마 : 릴레이션 내포&lt;/p&gt;

&lt;p&gt;​	&amp;gt; 릴레이션 이름과 일정수의 속성의 집합&lt;/p&gt;

&lt;p&gt;​	&amp;gt; 릴레이션의 논리적 구조 정의 : 릴레이션 이름과 속성의 집합&lt;/p&gt;

&lt;p&gt;릴레이션 인스턴스 : 릴레이션 외포&lt;/p&gt;

&lt;p&gt;​	&amp;gt; 어느 한 시점에서 릴레이션에 포함되어 있는 튜플의 집합&lt;/p&gt;

&lt;p&gt;​	&amp;gt; 릴레이션에 포함되어 있는 내용 또는 상태로 튜플 전체를 의미&lt;/p&gt;

&lt;h4 id=&quot;02-릴레이션의-특징&quot;&gt;02 릴레이션의 특징&lt;/h4&gt;

&lt;h5 id=&quot;속성-간의-순서&quot;&gt;속성 간의 순서&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;릴레이션을 구성하는 속성 간 순서는 중요하지 않다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;속성의 순서를 바꾼다고 다른 릴레이션이 되지는 않는다. &amp;gt; 속성 이름에 의해 참조되기 때문&lt;/li&gt;
  &lt;li&gt;속성 순서를 정해놓는 것이 좋으며 상용 dbms는 속성이 순서를 가짐&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;상이한-튜플&quot;&gt;상이한 튜플&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;한 릴레이션에 포함된 튜플은 모두 다르다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;어떤 튜플도 정확하게 동일한 값을 갖지 않는다&lt;/li&gt;
  &lt;li&gt;튜플을 유일하게 식별하기 위해 고유값을 저장하는 속성이 적어도 한 개 있어야 한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;튜플의-순서&quot;&gt;튜플의 순서&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;릴레이션에 포함된 튜플의 순서는 중요하지 않다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;릴레이션의 포함된 튜플의 순서는 무의미&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;릴레이션&lt;/strong&gt; &lt;strong&gt;변동성&lt;/strong&gt; &lt;strong&gt;-&lt;/strong&gt; 튜플의 삽입, 삭제 등의 잡업으로 릴레이션은 시간에 따라 변함&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;속성&lt;/strong&gt; &lt;strong&gt;명칭과&lt;/strong&gt; &lt;strong&gt;값&lt;/strong&gt; &lt;strong&gt;-&lt;/strong&gt; 유일한 식별을 위해 명칭은 유일해야 하며, 속성 구성 값은 동일할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;튜플의&lt;/strong&gt; &lt;strong&gt;속성&lt;/strong&gt; &lt;strong&gt;-&lt;/strong&gt; 속성은 원잣값만을 저장해야 한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;속성은 여러 개의 값을 리스트나 집합 형태로 저장 불가능&lt;/li&gt;
  &lt;li&gt;하나 속성이 두 값을 갖게 되면 릴레이션 추가 후 이를 참조&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;03-키의-개념-및-종류&quot;&gt;03 키의 개념 및 종류&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;이상&lt;/strong&gt;&lt;strong&gt;( Anomaly )&lt;/strong&gt; &lt;strong&gt;현상&lt;/strong&gt; &lt;strong&gt;-&lt;/strong&gt; 데이터가 중복 저장되면 릴레이션 조작 시 예상치 못한 곤란한 현상 발생&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;키&lt;/strong&gt; &lt;strong&gt;-&lt;/strong&gt; 튜플을 유일하게 식별하기 위한 고유한 값을 저장하는 속성 혹은 속성의 집합&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;수퍼키&lt;/strong&gt;&lt;strong&gt;( Super Key ) -&lt;/strong&gt; 튜플을 유일하게 식별하기 위해 사용하는 하나 혹은 그 이상의 속성 집합&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;문제점 : 튜플 고유 구별을 위해 꼭 필요하지 않은 속성을 포함&lt;/li&gt;
  &lt;li&gt;한 릴레이션을 구성하는 속성들 중 각 튜플을 유일하게 식별할 수 있는 하나 또는 그 이상의 속성의 집합&lt;/li&gt;
  &lt;li&gt;유일성 개념 포함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;후보키&lt;/strong&gt; &lt;strong&gt;( Candidate Key ) -&lt;/strong&gt; 최소한의 속성으로 구성된 유일성을 갖는 속성의 집합&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;후보키 지정 시 후보키 속성값만을 비교하면 되는 장점&lt;/li&gt;
  &lt;li&gt;릴레이션 구성 속성 중 각 튜플을 유일하게 식별할 수 있는 최소한의 속성의 집합&lt;/li&gt;
  &lt;li&gt;유일성과 최소성 개념 포함&lt;/li&gt;
  &lt;li&gt;수퍼키와 공통점 : 릴레이션에 있는 가 튜플을 고유하게 식별할 수 있어야 한다&lt;/li&gt;
  &lt;li&gt;수퍼키와 차이점 : 최소한의 속성으로 구성된 유일성을 갖는 속성의 집합&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;기본키&lt;/strong&gt; &lt;strong&gt;( Primary Key ) -&lt;/strong&gt; 후보키 중 튜플을 식별하는데 기준으로 사용하는 키&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;하나의 릴레이션에서 후보키가 하나뿐일 때 그 후보키를 기본키로 사용&lt;/li&gt;
  &lt;li&gt;두 개 이상 존재 시 릴레이션 특성을 고려해 이들 중 하나를 선택&lt;/li&gt;
  &lt;li&gt;Null 값 저장 불가능&lt;/li&gt;
  &lt;li&gt;기본키로 정의된 속성에는 동일 값이 중복 저장 불가능&lt;/li&gt;
  &lt;li&gt;모든 릴레이션에는 적어도 하나의 기본키 ( 후보키 )가 존재&lt;/li&gt;
  &lt;li&gt;여러 후보키 중 하나를 선택하여 튜플을 식별하는데 기준으로 사용하는 키&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;대체키&lt;/strong&gt; &lt;strong&gt;( Alternate Key ) -&lt;/strong&gt; 후보키가 둘 이상일 때 기본키로 선택되지 않은 나머지 후보키&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;보조키라고도 함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;복합키&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;하나의 칼럼이 후보키 역할을 하지 못함&lt;/li&gt;
  &lt;li&gt;두 개 이상의 칼럼이 합쳐져야 후보키의 역할을 하는 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;외래키&lt;/strong&gt; &lt;strong&gt;( Foreign Key )&lt;/strong&gt; - 상호 관련 테이블 사이에서 데이터의 일관성을 보장해주는 수단&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;어떤 릴레이션의 기본키를 참조하는 속성 또는 속성의 집합&lt;/li&gt;
  &lt;li&gt;외래키 속성은 참조하는 릴레이션의 기본키와 동일한 도메인을 가져야 함&lt;/li&gt;
  &lt;li&gt;두 테이블 간 데이터 불일치로 발생하는 이상현상 방지 &amp;gt; 데이터 사이 참조 관계 설정&lt;/li&gt;
  &lt;li&gt;A 릴레이션과 참조하고 있는 B릴레이션의 기본키와 같은 속성을 A에서 찾아 이를 외래키로 지정&lt;/li&gt;
  &lt;li&gt;외래키로 지정되면 참조 테이블에서 사용 중인 기본키를 삭제, 변경 불가능&lt;/li&gt;
  &lt;li&gt;기본키에 없는 값은 외래키 값으로 입력 불가능&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;자체 릴레이션을 참조하는 외래키             기본키 구성요소가 되는 외래키&lt;/p&gt;

&lt;h4 id=&quot;04-무결성-제약조건&quot;&gt;04 무결성 제약조건&lt;/h4&gt;

&lt;h5 id=&quot;개체-무결성&quot;&gt;개체 무결성&lt;/h5&gt;

&lt;p&gt;: 개체가 결점이 없음&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;무결한 개체 = 데이터베이스에 저장, 관리될 때 본질적으로 서로 구별 가능&lt;/li&gt;
  &lt;li&gt;식별 가능한 상태에 있게 되면 개체 부결성이 보장된 상태&lt;/li&gt;
  &lt;li&gt;릴레이션 식별자의 역할 = 기본키&lt;/li&gt;
  &lt;li&gt;기본키 구성 속성은 null / 중복값 불가능&lt;/li&gt;
  &lt;li&gt;기본키 값이 널 값을 갖게 된다면 튜플을 유일하게 식별할 수 없음&lt;/li&gt;
  &lt;li&gt;튜플 유일 식별 불가능은 서로 구별할 수 없는 개체가 존재하게 된다는 의미 &amp;gt; 개체 무결성 위배&lt;/li&gt;
  &lt;li&gt;기본키의 유일 식별성을 잃지 않도록 하기 위해 중복되는 값을 갖으면 안 됨&lt;/li&gt;
  &lt;li&gt;특정 개체가 무결성을 유지하도록 하기 위해서 릴레이션을 생성하는 데이터 정의문 에서 어떤 속성이 릴레이션의 기본키인지를 알려주어야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;gt; 개체 무결정 제약조건 : 기본키는 NULL 이나 중복 값을 가질 수 없다&lt;/p&gt;

&lt;h5 id=&quot;참조-무결성&quot;&gt;참조 무결성&lt;/h5&gt;

&lt;p&gt;: 릴레이션 간 적용되는 제약조건&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;외래키 값은 null이거나 참조 릴레이션의 기본키 값과 동일해야 함&lt;/li&gt;
  &lt;li&gt;릴레이션 모델에서는 두 개체 간의 관계를 외래키 혹은 릴레이션으로 표현&lt;/li&gt;
  &lt;li&gt;릴레이션은 참조할 수 없는 외래키 값을 가질 수 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;gt; 참조 무결성 제약조건 : 외래키는 참조할 수 없는 값을 가질 수 없다.&lt;/p&gt;

&lt;p&gt;참조 무결성 제약 조건 유지&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;두 테이블 간 외래키에 의한 참조 관계에 있고 두 테이블 간 데이터 불일치가 발생하는 상황이 될 때&lt;/li&gt;
  &lt;li&gt;DBMS는 제한, 연쇄, 널 값으로 대체와 같은 조취를 취할 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;a-테이블-첫-번째-튜플을-삭제하려-할-때&quot;&gt;A 테이블 첫 번째 튜플을 삭제하려 할 때&lt;/h6&gt;

&lt;p&gt;제한은 삭제하려는 튜플의 부서 번호 값을 사원 테이블에서 가지고 있는 튜플이 있으므로 삭제 연산 거절&lt;/p&gt;

&lt;p&gt;연쇄는 삭제된 부서 번호 값을 갖는 사원 테이블의 튜플도 함께 삭제&lt;/p&gt;

&lt;p&gt;널 값으로 대체는 삭제 연산을 수행한 뒤 삭제된 부서 번호 값을 갖는 사원 테이블의 튜플에서 부서 번호를 널 값으로 대체&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/database/2019/04/15/2/</link>
        <guid isPermaLink="true">http://localhost:4000/study/database/2019/04/15/2/</guid>
      </item>
    
      <item>
        <title>[1] Database 데이터 모델</title>
        <description>&lt;h3 id=&quot;데이터-모델&quot;&gt;데이터 모델&lt;/h3&gt;

&lt;h4 id=&quot;01-데이터-모델의-개요&quot;&gt;01 데이터 모델의 개요&lt;/h4&gt;

&lt;p&gt;정보화 시스템 구축 : 현실 세계에서 일어나는 사건들을 전산화&lt;/p&gt;

&lt;p&gt;현실 세계를 개념화, 단순화하여 가시적으로 표현&lt;/p&gt;

&lt;p&gt;데이터 모델링 : 체계적으로 표현하고 문서화하는 기법 - 정보시스템의 중심을 데이터 관점에서 접근&lt;/p&gt;

&lt;p&gt;\1. 어떤 데이터가 존재하는지   2. 업무에서 필요로 하는 정보가 무엇인지 분석
 &amp;gt; 모델링 자체가 업무를 분석 : 프로젝트 참여한 모든 사람은 모델링에 참여하거나 내용 이해 필수&lt;/p&gt;

&lt;p&gt;데이터 모델 : 현실 세계를 단순화, 추상화하여 체계적으로 데이터의 구조를 표현 &amp;gt; 그래픽적 구현&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;주 목적&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;업무 정보를 구성하는데 기초가 되는 정보를 일정한 표기법으로 표현함으로써 정보 시스템 구축 대상이 되는 업무 내용을 정확하게 분석하는 것이다.&lt;/li&gt;
      &lt;li&gt;분석된 모델을 가지고 실제 데이터베이스를 생성하여 개발 및 데이터 관리에 사용하기 위한 것이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;gt;&amp;gt; 새로운 시스템이나 개선 시스템 개발의 기초를 제공하며 조직 내 구성원 간의 의사소통의 수단&lt;/p&gt;

&lt;h5 id=&quot;데이터-모델의-구성요소&quot;&gt;데이터 모델의 구성요소&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;구조&lt;/strong&gt; &lt;strong&gt;(S : Structure)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;데이터의 정적 성질, 데이터베이스에서 표현될 대상으로써의 엔티티 타임과 이들 간의 관계를 명세&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;연산&lt;/strong&gt; &lt;strong&gt;(O : Operation)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;데이터의 동적 성질, 엔티티 인스턴스에 적용 가능한 연산에 대한 명세&lt;/p&gt;

&lt;p&gt;엔티티 인스턴스를 처리하는 작업에 대한 명세 &amp;gt; 데이터 조작 기법&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;제약조건&lt;/strong&gt; &lt;strong&gt;(C : Constraint)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;데이터가 무결하도록 하기 위해 사용 - 데이터를 조작하는데 있어 한계를 규정짓는 것&lt;/p&gt;

&lt;h5 id=&quot;엔티티-관계-속성&quot;&gt;엔티티, 관계, 속성&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;업무가 관여하는 어떤 것 (Entity)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;사람이 생각하는 개념이나 정보단위같은 현실 세계의 대상체&lt;/p&gt;

&lt;p&gt;유 / 무형의 정보 &amp;gt; 서로 연관된 몇 개의 속성으로 구성&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;업무가 관여하는 어떤 것 간의 관계 (Relation)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;데이터의 가장 작은 논리적 단위, 하나의 엔티티는 한 개 이상으 속성으로 구성&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;어떤 것이 가지는 성격 (Attribute)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;엔티티와 엔티티 혹은 엔티티와 속성 간의 연관성&lt;/p&gt;

&lt;p&gt;&amp;gt; 자연계에 존재하는 모든 유형의 정보를 세 가지 관점으로 접근하여 모델링&lt;/p&gt;

&lt;h4 id=&quot;개념적-데이터-모델과-논리적-데이터-모델&quot;&gt;개념적 데이터 모델과 논리적 데이터 모델&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;개념적-데이터-모델&quot;&gt;개념적 데이터 모델&lt;/h5&gt;

    &lt;p&gt;( 개체 관계 모델 - E-R 모델 ) » 정보 모델링&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;엔티티를 인간이 이해할 수 있는 정보구조로 표현하는 과정&lt;/p&gt;

&lt;p&gt;현실 세계에서 존재하는 데이터를 엔티티와 엔티티 내의 공통된 속성과 엔티티들 사이의 관계를 정의하는 추상화 과정&lt;/p&gt;

&lt;p&gt;엔티티를 추상화 시킨 엔티티 타임 : 해당 타입에 속하는 엔티티들의 공통적이 특성을 나타내는 속성&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;논리적-데이터-모델&quot;&gt;논리적 데이터 모델&lt;/h5&gt;

    &lt;blockquote&gt;
      &lt;p&gt;데이터 모델링&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;컴퓨터가 이해할 수 있도록 변환&lt;/p&gt;

&lt;p&gt;필드로 기술된 데이터 타입과 이 테이터 타입 간의 관계를 이용하여 현실세계를 표현하는 방법&lt;/p&gt;

&lt;p&gt;\1. 관계 데이터 모델   2. 계층 데이터 모델  3. 네트워크 데이터 모델&lt;/p&gt;

&lt;h3 id=&quot;02-개념적-데이터-모델&quot;&gt;02 개념적 데이터 모델&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;목적 : 현실 세계를 추상화하는 과정으로 업무적인 관점에서 접근하고 분석하는 단계&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E-R 다이어그램 : 엔티티와 이들 간의 관계를 알기 쉽게 도형을 사용해 표현&lt;/p&gt;

&lt;h4 id=&quot;엔티티와-엔티티-타입&quot;&gt;엔티티와 엔티티 타입&lt;/h4&gt;

&lt;p&gt;엔티티 타입 : 독립적으로 전재하면서 고유하게 식별 가능한 실세계의 엔티티 (실체 / 추상)&lt;/p&gt;

&lt;p&gt;​	    엔티티들은 엔티티 타입으로 분류&lt;/p&gt;

&lt;p&gt;엔티티의 집합 : 동일한 속성을 가진 엔티티의 모임 ( 엔티티 인스턴스의 집합 ).&lt;/p&gt;

&lt;p&gt;엔티티 : 엔티티 타입을 구성하는 원소, 다른 모든 것과 구분되는 유/무형의 것 &amp;gt; 업무 수행을 위해 알아야 할 대상&lt;/p&gt;

&lt;h4 id=&quot;속성&quot;&gt;속성&lt;/h4&gt;

&lt;p&gt;속성 : 엔티티의 성질, 분류, 수량, 상태, 특성을 구체적으로 나타내는 세부 항목&lt;/p&gt;

&lt;p&gt;속성값 : 엔티티의 특성이나 상태가 현실화된 값&lt;/p&gt;

&lt;h4 id=&quot;속성-유형&quot;&gt;속성 유형&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;단순 속성과 복합 속성&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;단순 속성 : 더이상 작은 구성원소로 분해할 수 없는 속성&lt;/p&gt;

&lt;p&gt;복합 속성 : 몇 개의 기본적 단순 속성으로 분해할 수 있는 속성&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;단일 값 속성과 다중 값 속성&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;단일 값 속성 : 각 엔티티에 대해 하나의 값만 갖는 것&lt;/p&gt;

&lt;p&gt;다중 값 속성 : 한 엔티티에 대해 여러 값을 갖는 것&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;유도 속성과 저장 속성&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;유도 속성 : 속성 값이 다른 속성이나 엔티티가 갖고 있는 값으로부터 유도되어 결정되는 경우&lt;/p&gt;

&lt;p&gt;저장 속성 : 유도 속성을 생성하는 데 사용된 속성&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;널 속성&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;널 값을 갖는 속성&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;속성값이 엔티티에 해당하지 않는 경우&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;속성값을 알 수 없는 경우&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;값이 존재하지만 값이 누락된 경우&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;값이 존재하는지 알 수 없어 모르는 경우&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;관계타입&quot;&gt;관계타입&lt;/h4&gt;

&lt;p&gt;: 엔티티 사이의 연관성을 표 현하는 개념 &amp;gt; 동사구로 관계 정의 / 엔티티 집합 사이의 대응-사상을 의미&lt;/p&gt;

&lt;p&gt;관계 집합 : 한 관계 타입에 속하는 모든 관계 인스턴스&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;관계 유형&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;카디날리티 : 관계에 참여하는 하나의 엔티티에 대해 다른 엔티티가 몇 개 참여하는지 나타내는 것&lt;/p&gt;

&lt;p&gt;&amp;gt; 관계 대응 엔티티 수 : 하나의 관계에 실제 참여 가능한 인스턴스의 수&lt;/p&gt;

&lt;p&gt;(1) 일대일  (2) 일대다  (3) 다대다&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;카디날리티 비율의 최소값과 최대값&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;어떤 관계 타입에 참여하는 각 엔티티 타입에 대해&lt;/p&gt;

&lt;p&gt;min은 이 엔티티 타입 내의 각 엔티티는 적어도 min번 관계에 참여함을 의미한다.&lt;/p&gt;

&lt;p&gt;min = 0은 어떤 엔티티가 반드시 관계에 참여해야 할 필요는 없음을 의미한다&lt;/p&gt;

&lt;p&gt;max는 이 엔티티 타입 내의 각 엔티티는 최대한 max번 관계에 참여함을 의미한다.&lt;/p&gt;

&lt;p&gt;max = *는 어떤 엔티티가 관계에 임의의 수 만큼 참여할 수 있음을 의미한다.&lt;/p&gt;

&lt;p&gt;(표)&lt;/p&gt;

&lt;h4 id=&quot;엔티티의-키&quot;&gt;엔티티의 키&lt;/h4&gt;

&lt;p&gt;키 속성 : 엔티티 인스턴스를 유일하게 식별하는 데 사용 : 중복 값을 갖지 않는 속성&lt;/p&gt;

&lt;p&gt;&amp;gt; 타 엔티티와 구별할 수 있는 속성이며 키를 속성에 및줄을 그어 표현한다. (그림)&lt;/p&gt;

&lt;h4 id=&quot;강한-엔티티-타입과-약한-엔티티-타입&quot;&gt;강한 엔티티 타입과 약한 엔티티 타입&lt;/h4&gt;

&lt;p&gt;강한 엔티티 타입 ( 정규 엔티티 타입 ) : 고유 엔티티들을 식별할 수 있는 엔티티 타입&lt;/p&gt;

&lt;p&gt;강한 엔티티 = 독립 / 부모 엔티티&lt;/p&gt;

&lt;p&gt;약한 엔티티 타입 : 자기 자신만의 속성만으로는 키를 명세할 수 없는 엔티티&lt;/p&gt;

&lt;p&gt;약한 엔티티 = 종속 / 자식 엔티티&lt;/p&gt;

&lt;p&gt;소유 엔티티 타입 ( 식별 엔티티 타입 ) : 소유엔타에 의해야만 약한 엔티티 타입이 식별 가능&lt;/p&gt;

&lt;p&gt;구별자 ( 부분키 ) : 약한 엔티티 타입을 구별하기 위해 사용되는 이름은 단독으로 엔티티를 구분할 수 없음&lt;/p&gt;

&lt;p&gt;구별자는 강한 엔티티와 연관된 약한 엔티티 집합 내에서만 서로 구별 가능&lt;/p&gt;

&lt;p&gt;이중링크 : 부양가족 엔티티가 전체참여를 하고 있다는 것&lt;/p&gt;

&lt;p&gt;​	&amp;gt; 약한 엔티티를 강한 엔티티에 연관시켜 엔티티를 유일하게 식별하게 하는 것&lt;/p&gt;

&lt;h4 id=&quot;isa-관계&quot;&gt;ISA 관계&lt;/h4&gt;

&lt;p&gt;상위 엔티티와 하위 엔티티 간의 관계&lt;/p&gt;

&lt;p&gt;같은 속성을 갖는 여러 엔티티를 하나의 상위 엔티티로 결합할 수 있으며, 특정 엔티티는 서로 구별되는 여러 하위 엔티티로 나눌 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;03-논리적-데이터-모델--데이터-모델링-&quot;&gt;03 논리적 데이터 모델 ( 데이터 모델링 )&lt;/h3&gt;

&lt;p&gt;: 개념적 모델링 과정에서 얻은 개념적 구조를 컴퓨터 환경에 맞도록 변환하는 과정&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;목적 : 정확한 업무 분석을 통한 자료의 흐름을 분석 후 실체와 속성의 관계를 구조적으로 설계&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;계층-데이터-모델&quot;&gt;계층 데이터 모델&lt;/h4&gt;

&lt;p&gt;데이터를 저장하는 단위( Entity )의 구조가 상하종속적인 관계로 구성 /&lt;/p&gt;

&lt;p&gt;일대다 ( 1 : N ) 대응 관계만 존재 &amp;gt; 레코드 삭제 시 연쇄삭제&lt;/p&gt;

&lt;p&gt;레코드의 집합 : 세그먼트 ( 부모 / 자식 세그먼트 )&lt;/p&gt;

&lt;p&gt;레코드 타입 ( 논리적 구조 ) : 트리 형태로 표현 &amp;gt; 엔티티가 트리를 구성하는 노드 역할&lt;/p&gt;

&lt;p&gt;장점 : 데이터 액세스 속도가 빠르고 데이터 사용량을 쉽게 예측할 수 있다&lt;/p&gt;

&lt;p&gt;단점 : 데이터 구조가 상하 종속적인 관계로 구성 &amp;gt; 변화하는 프로세서 수용 불가능&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;관계의 유형&lt;/p&gt;

    &lt;p&gt;- 속성 관계 : 세그먼트 (엔티티)를 구성하는 속성들의 관계&lt;/p&gt;

    &lt;p&gt;- 엔티티 관계 : 엔티티와 엔티티 간의 관계를 링크로 표시&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;네트워크-데이터-모델&quot;&gt;네트워크 데이터 모델&lt;/h4&gt;

&lt;p&gt;그래프를 이용해 데이터 논리구조를 표현&lt;/p&gt;

&lt;p&gt;다대다 ( N : M ) 대응 관계를 만족하는 구조 &amp;gt; 오너와 멤버 관계로 표현&lt;/p&gt;

&lt;p&gt;레코드 타입 : 도형적으로 표현 ( 그래프 형태 ) &amp;gt; 망 데이터 모델&lt;/p&gt;

&lt;p&gt;단점 : 구성과 설계가 복잠함 / 계층형 데이터베이스 관리 시스템의 단점이었던 데이터 종속성 또한 해결 불가&lt;/p&gt;

&lt;h4 id=&quot;관계-데이터-모델&quot;&gt;관계 데이터 모델&lt;/h4&gt;

&lt;p&gt;: 계층 모델과 망 모델의 복잡한 구조를 단순화&lt;/p&gt;

&lt;p&gt;일대일, 일대다, 다대다 관계를 자유로이 표현 가능&lt;/p&gt;

&lt;p&gt;장점 : 변화하는 업무 프로세스를 쉽게 적용 가능 &amp;gt; 유지 보수의 용이, 생산성 향상 및 응용프로그램 개발 용이&lt;/p&gt;

&lt;p&gt;​      간결성, 보기 편리하고 구조가 간단하여 설계 및 관리가 편리, 다른 데이터베이스로의 변환이 편리&lt;/p&gt;

&lt;p&gt;단점 : 많은 자원이 필요하기에 시스템 부하가 상대적으로 빈번함&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/study/database/2019/04/15/1-Database-Study-in-school/</link>
        <guid isPermaLink="true">http://localhost:4000/study/database/2019/04/15/1-Database-Study-in-school/</guid>
      </item>
    

    
      
        
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    

  </channel>
</rss>