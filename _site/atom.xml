<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-01-20T22:08:23+09:00</updated><id>http://localhost:4000/atom.xml</id><title type="html">빈둥빈둥 공부블로그</title><author><name>Eunbin Park</name></author><entry><title type="html">Numpy 편의기능 및 기본조작 1 ~ 3</title><link href="http://localhost:4000/linear_algebra/2021/01/20/numpy-%ED%8E%B8%EC%9D%98-%EA%B8%B0%EB%8A%A5/" rel="alternate" type="text/html" title="Numpy 편의기능 및 기본조작 1 ~ 3" /><published>2021-01-20T00:00:00+09:00</published><updated>2021-01-20T00:00:00+09:00</updated><id>http://localhost:4000/linear_algebra/2021/01/20/numpy-%ED%8E%B8%EC%9D%98-%EA%B8%B0%EB%8A%A5</id><content type="html" xml:base="http://localhost:4000/linear_algebra/2021/01/20/numpy-%ED%8E%B8%EC%9D%98-%EA%B8%B0%EB%8A%A5/">&lt;p&gt;Numpy 편의기능 및 기본조작&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.eye(row, {col}, {band_id}, {dtype})&lt;/code&gt; : band에 1 채워넣기&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;0,0 을 기준으로 대각선 항 -&amp;gt; band&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;./images/numpy-basic.png&quot; alt=&quot;numpy-basic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.identity(num, {dtype})&lt;/code&gt; : identity matrix&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Same as  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.eye(3)&lt;/code&gt; : 3x3 매트릭스&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.tri(row, {col}, {k=band_id}, {dtype})&lt;/code&gt; : lower triangular matrix&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;nonzero entry = 1&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a = np.eye(row, {col},{band_id}, {dtype})&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;K &amp;lt;= band id 의 모든 밴드에 1을 채워넣고 나머지는 0 을 채움&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.tril(a, {k=band_id})&lt;/code&gt; : band_id를 포함한 lower 부분을 copy&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.triu(a, {k=band_id})&lt;/code&gt; : band_id를 포함한 upper 부분을 copy&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.full((row, col), value)&lt;/code&gt; : 지정된 값으로 채우기&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.randomn.rand(row, col)&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터타입 지정 불가 -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.float64&lt;/code&gt; 고정&lt;/li&gt;
  &lt;li&gt;0과 1 사이 무작위 값으로 채워짐&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.copy(a)&lt;/code&gt; : 서로 같은 메모리를 참조 : 하나가 변하면 다른 하나도 변함&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.reshape(a, vector or shape)&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.reshape(a, 6)&lt;/code&gt; : 1D array&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.reshape(a, (3, 2))&lt;/code&gt; : 2D array&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.diag(a, k=band_id)&lt;/code&gt; : band 추출 후 1D array로 만듦&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;b is READ ONLY&lt;/li&gt;
  &lt;li&gt;동일 메모리 공간 참조&lt;/li&gt;
  &lt;li&gt;입력이 1D array (벡터)이면 square 행렬 생성&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;./images/np-diag-1.png&quot; alt=&quot;np-diag-1&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;/Users/eunbinpark/workspace/42cosmos.github.io/images/np-diag-2.png&quot; alt=&quot;np-diag-1&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.diagflat(M, k=band_id)&lt;/code&gt; : M를 1D화 한뒤에 square matrix 생성&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;img src=&quot;./images/np.diagflat-1.png&quot; alt=&quot;np.diagflat-1&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.trace(a, offset=band_id)&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;diagonal entry ( band entry )를 더한 값&lt;/li&gt;
  &lt;li&gt;\(\left[\begin{matrix}\\1 &amp;amp; 2 &amp;amp; 3 \\1 &amp;amp; 2 &amp;amp; 3 \\1 &amp;amp; 2 &amp;amp; 3 \\ \end{matrix}\right]\)  →  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.trace(a)&lt;/code&gt; returns 15, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.trace(a, offset=-1)&lt;/code&gt; returns 12&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.hstack((tuple))&lt;/code&gt; : 수평으로 쌓아감 - tuple 순서대로 행(row, shape[0]) 개수가 맞아야 함&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.vstack((tuple))&lt;/code&gt; : 수직으로 쌓아감 - tuple 순서대로 행(col, shape[0]) 개수가 맞아야 함&lt;/p&gt;

&lt;h3 id=&quot;methods&quot;&gt;Methods&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;transpose()&lt;/code&gt; method&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;단, 1d arr는 무변&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flatten&lt;/code&gt; method&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;행렬 a를 1d  array 로 만들어 copy&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Same as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.ravel(a)&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;properties&quot;&gt;Properties&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;real&lt;/code&gt; : 실수 부분&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;imag&lt;/code&gt; : 허수 부분&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;conjegate&lt;/code&gt;: copy&lt;/p&gt;

&lt;h3 id=&quot;matrix-multiplication&quot;&gt;Matrix Multiplication&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;M1 @ M2&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.matmul(M1, M2)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;*** or / is not multiplication !! **&lt;/p&gt;

&lt;h3 id=&quot;matrix-vector-product&quot;&gt;Matrix-Vector Product&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;M @ arr&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.matmul(M, arr)&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;inner-product&quot;&gt;Inner Product&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.dot()&lt;/code&gt; is …&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Real vector same as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vdot()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;complex vector : conjugate가 빠진 채로 계산&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Eunbin Park</name></author><category term="Linear_Algebra" /><summary type="html">Numpy 편의기능 및 기본조작</summary></entry><entry><title type="html">프로그래머스 - 기능개발</title><link href="http://localhost:4000/algorithm/2021/01/18/programmars-42586/" rel="alternate" type="text/html" title="프로그래머스 - 기능개발" /><published>2021-01-18T00:00:00+09:00</published><updated>2021-01-18T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/2021/01/18/programmars-42586</id><content type="html" xml:base="http://localhost:4000/algorithm/2021/01/18/programmars-42586/">&lt;h3 id=&quot;오늘의-문제&quot;&gt;오늘의 문제&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42586&quot;&gt;프로그래머스 기능개발&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;동일한 크기의 두 개의 리스트를 계산한다. 앞보다 뒤 값이 작으면 카운트 해준다.&lt;/p&gt;

&lt;h3 id=&quot;풀이-방법&quot;&gt;풀이 방법&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;progresses&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;93&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;speeds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# return [2, 1]
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;temp_result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sp&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;progresses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# return [7, 3, 9]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;0번째 인덱스 93퍼센트 진행률의 하루 1퍼센트의 속도를 보인다. 7일 후 프로세스가 완료된다.&lt;/p&gt;

&lt;p&gt;이런 식이다. 완료시점(100퍼센트)까지 계산은 쉽다. 남은 진척도를 구하고 스피드를 나눠준 후 , 소숫점은 무조건 올려주면 된다.&lt;/p&gt;

&lt;p&gt;여기까진 쏘이지~&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;temp_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        
&lt;span class=&quot;n&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;i-1 번째가 i번째보다 크면 결과 리스트에 삽입하고 1로 초기화 해준다.&lt;/p&gt;

&lt;p&gt;i-1 번째가 i번째보다 작으면,  i-1번째는 그 넘어의 숫자와 비교되어야하기 때문에, i 번째에 넣어주고 answer( count )를 하나 올려주고 for문을 지속한다.&lt;/p&gt;

&lt;h3 id=&quot;사담&quot;&gt;사담&lt;/h3&gt;

&lt;p&gt;진짜 아쉬웠다… 다 풀었는데… 내가 24시간을 꼬박 샜고… 두통이 엄청 와서 못 푼 거다… 그런거다 ^^&lt;/p&gt;</content><author><name>Eunbin Park</name></author><category term="Algorithm" /><summary type="html">오늘의 문제 프로그래머스 기능개발</summary></entry><entry><title type="html">프로그래머스 - 멀쩡한 사각형</title><link href="http://localhost:4000/algorithm/2021/01/14/programmars-62048/" rel="alternate" type="text/html" title="프로그래머스 - 멀쩡한 사각형" /><published>2021-01-14T00:00:00+09:00</published><updated>2021-01-14T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/2021/01/14/programmars-62048</id><content type="html" xml:base="http://localhost:4000/algorithm/2021/01/14/programmars-62048/">&lt;h3 id=&quot;오늘의-문제&quot;&gt;오늘의 문제&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/62048#qna&quot;&gt;프로그래머스 멀쩡한 사각형&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;문제 간략 설명 : 12 by 8 배열의 사각형에서 대각선의 불능을 제외 후 개수를 세어 반환하는 문제&lt;/p&gt;

&lt;h3 id=&quot;풀이-방법&quot;&gt;풀이 방법&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/programmars_62048.png&quot; alt=&quot;&quot; /&gt;&lt;!-- {&quot;width&quot;:379} --&gt;&lt;/p&gt;

&lt;p&gt;문제의 답을 직관적으로 알 수 있다. 가로 2씩 세로 3씩 증가하고, 3 by 2의 도형 안에서 불능 도형의 개수를 찾고, 이 패턴이 몇 번 반복되는지 알아내면 된다 !&lt;/p&gt;

&lt;p&gt;8 → 2, 12 → 3 니까 4 ! → 4번 패턴이 반복되는 건 두 수 사이의 최대공약수를 찾아주면 된다.&lt;/p&gt;

&lt;p&gt;3 by 2 은 6개 중 4개가 불능, 12 by 8 은 96개 중 16개가 불능이다.&lt;/p&gt;

&lt;p&gt;주어진 가로와 세로에 최대공약수를 나누어주고 -1을 한다. 그러고 반복되는 패턴이 4번 (12와 8의 최대공약수)이니 이만큼 곱해준다! …최대공약수 함수는 구글링해서 주웠다. ㅎㅎ 근데 math 모듈에 있더라고? 암튼&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;((w / gcd(w, h) + h / gcd(w, h)) - 1 ) * gcd(w, h)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그러고 전체 도형에서 불능 도형의 개수를 빼주면 끝~&lt;/p&gt;

&lt;h3 id=&quot;사담&quot;&gt;사담&lt;/h3&gt;

&lt;p&gt;개인적으로 직관적인 문제는 무식하게 풀 수 있다고 생각하기에… 빈 종이에 손으로 쓰면서 문제를 풀었다.&lt;/p&gt;

&lt;p&gt;대각선이 지나갈 때의 불능 도형의 개수가 제일 머리 아팠다… 뭐랄까 애기 때 수학 공부를 잘했으면 금방 풀었을텐데 하는 생각이 들 정도로 간단해보이는데 잘 모르겠고… 이게 맞는데 왜 그런지는 모르겠는 그런 너낌&lt;/p&gt;

&lt;p&gt;직관적인 문제 → 무식하게 풀기 가 아니라 그냥 무식한 나도 풀 수 있다는 걸 알게됐다…🥲&lt;/p&gt;</content><author><name>Eunbin Park</name></author><category term="Algorithm" /><summary type="html">오늘의 문제 프로그래머스 멀쩡한 사각형</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/images/programmars_62048.png" /><media:content medium="image" url="http://localhost:4000/images/programmars_62048.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Ch14. The Matrix Equation Ax=b</title><link href="http://localhost:4000/linear_algebra/2021/01/12/ch14-The-Matrix-Equation-Ax=b/" rel="alternate" type="text/html" title="Ch14. The Matrix Equation Ax=b" /><published>2021-01-12T00:00:00+09:00</published><updated>2021-01-12T00:00:00+09:00</updated><id>http://localhost:4000/linear_algebra/2021/01/12/ch14-The-Matrix-Equation-Ax=b</id><content type="html" xml:base="http://localhost:4000/linear_algebra/2021/01/12/ch14-The-Matrix-Equation-Ax=b/">&lt;h3 id=&quot;amathbfx--product-of-a-and-x&quot;&gt;\(A\mathbf{x}\) : Product of A and x&lt;/h3&gt;
&lt;p&gt;The linear combination of the columns of \(A\) using the corresponding entries in \(\mathbf{X} \mbox{ as weights}\) → x 벡터 엔트리가 가중치&lt;/p&gt;

&lt;h3 id=&quot;-theorem-3&quot;&gt;📖 Theorem 3.&lt;/h3&gt;
&lt;p&gt;\(A\) is \(m \times n\) matrix, with columns \(a_1, \cdots, a_n   \mathbf{b} \mbox{ is in }\mathbb{R}^m\)&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Matrix Equation : \(A\mathbf{x} = \mathbf{b}\)&lt;/li&gt;
  &lt;li&gt;Vector Equation : \(x_1\mathbf{a_1} + x_2\mathbf{a_2} + \cdots + x_p\mathbf{a_p} = \mathbb{b}\)&lt;/li&gt;
  &lt;li&gt;Augmented Matrix  : \(\left[ \mathbf{a_1}, \mathbf{a_2}, \cdots, \mathbf{a_n} \mathbf{b}\right]\)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Have the same solution set!&lt;/p&gt;

&lt;h3 id=&quot;-theorem-4&quot;&gt;📖 Theorem 4.&lt;/h3&gt;
&lt;p&gt;The followings are all true of all false:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;For each b in R^m, Ax = b  has a solution&lt;/li&gt;
  &lt;li&gt;Each b in R^m is a linear combination of the columns of A&lt;/li&gt;
  &lt;li&gt;The columns of A spanR^m&lt;/li&gt;
  &lt;li&gt;A has a pivot position in every row&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;-theorem-5&quot;&gt;📖 Theorem 5.&lt;/h3&gt;
&lt;p&gt;If A is an m x n matrix, u and v are vectors in R^m,  And c is a scalar, then;  &lt;br /&gt;
A(u + v) = Au + Av;&lt;br /&gt;
A(cu) = c(Au)&lt;/p&gt;</content><author><name>Eunbin Park</name></author><category term="Linear_Algebra" /><summary type="html">\(A\mathbf{x}\) : Product of A and x The linear combination of the columns of \(A\) using the corresponding entries in \(\mathbf{X} \mbox{ as weights}\) → x 벡터 엔트리가 가중치</summary></entry><entry><title type="html">Ch13. Vector Equations</title><link href="http://localhost:4000/linear_algebra/2021/01/12/ch13-Vector-Equations/" rel="alternate" type="text/html" title="Ch13. Vector Equations" /><published>2021-01-12T00:00:00+09:00</published><updated>2021-01-12T00:00:00+09:00</updated><id>http://localhost:4000/linear_algebra/2021/01/12/ch13-Vector-Equations</id><content type="html" xml:base="http://localhost:4000/linear_algebra/2021/01/12/ch13-Vector-Equations/">&lt;p&gt;Vectors in \(\mathbb{R}^2\) → 실수 2차원 공간 &lt;br /&gt;
\(\mathbf{u} = \left[\begin{matrix}3 \\ -1 \\\end{matrix}\right], \mathbf{v} = \left[\begin{matrix}0.2 \\ 0.3 \\\end{matrix}\right], \mathbf{u} = \left[\begin{matrix}w_1 \\ w_2 \\\end{matrix}\right]\)&lt;br /&gt;
\(\vec{u} = (3, -1), \vec{v} = (0.2, 0.3), \vec{w} = (w_1, w_2)\)&lt;/p&gt;

\[(w_1, w_2) \ne \left[ w_1, w_2\right]\]

&lt;h3 id=&quot;scalar-multiplication&quot;&gt;Scalar Multiplication&lt;/h3&gt;
&lt;p&gt;백터 네 모든 값에 스칼라 값을 곱해준다&lt;br /&gt;
\(c = 5, \mathbf{u} =  \left[\begin{matrix}3 \\ -1 \\\end{matrix}\right]\) 일 때,&lt;br /&gt;
\(c\mathbf{u} = 5 \left[\begin{matrix}3 \\ -1 \\\end{matrix}\right] =  \left[\begin{matrix}5\cdot3 \\ 5\cdot(-1) \\\end{matrix}\right] =  \left[\begin{matrix}15 \\ -5 \\\end{matrix}\right]\)&lt;/p&gt;

&lt;h3 id=&quot;vectors-in-mathbbrn&quot;&gt;Vectors in \(\mathbb{R}^n\)&lt;/h3&gt;
&lt;p&gt;\(c\mathbf{u} = \left[\begin{matrix}u_1 \\ u_2 \\ \cdots \\ u_n\end{matrix}\right]   \\
\mathbf{u} = (u_1, u_2, \cdots, u_n)\)&lt;/p&gt;

&lt;h3 id=&quot;algebraic-properties-of-mathbbrn&quot;&gt;Algebraic Properties of \(\mathbb{R}^n\)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;\(\mathbf{u, v, w} \mbox{ are } \mathbb{R}^n \mbox{ and } c d \mbox{ are scalar}\)&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;u + v = v + u&lt;/li&gt;
  &lt;li&gt;(u + v) + w = u + (v + w)&lt;/li&gt;
  &lt;li&gt;u + 0 = 0 + u = u&lt;/li&gt;
  &lt;li&gt;u + (-u) = -u + u = 0&lt;/li&gt;
  &lt;li&gt;c(u + v) = cu + cv&lt;/li&gt;
  &lt;li&gt;(c + d)u = cu + du&lt;/li&gt;
  &lt;li&gt;c(du) = (cd)u&lt;/li&gt;
  &lt;li&gt;1u = u&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;linear-combinations&quot;&gt;Linear Combinations&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Linear combination of \(\mathbf{v_1, v_2, \cdots, v_p} \mbox{ is } \mathbb{R}^n     
\mbox{with weights } c_1, c_2, \cdots, c_p \mbox{ is scalar}\)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;y = \(c_1\mathbf{v_1} + c_2\mathbf{v_2} + \cdots + c_p\mathbf{v_p}\)&lt;/p&gt;

&lt;p&gt;A vector equation &lt;br /&gt;
\(x_1\mathbf{a_1}+x_2\mathbf{a_2}+\cdots+x_n\mathbf{a_n} = \mathbf{b}\)&lt;br /&gt;
has the &lt;strong&gt;same solution&lt;/strong&gt; set as the linear system whose &lt;strong&gt;augmented matrix&lt;/strong&gt; is  &lt;br /&gt;
\(\left[\mathbf{a_1} \mathbf{a_2} \cdots \mathbf{a_n} \mathbf{b}\right]\)&lt;/p&gt;

&lt;p&gt;→ 각 벡터를 집어넣은 Augmented Matrix 와 동일한 해를 지닌다.&lt;/p&gt;

&lt;h3 id=&quot;spanmathbfv&quot;&gt;Span{\(\mathbf{v}\)}&lt;/h3&gt;
&lt;p&gt;is the collection of all vectors that can be written in the form&lt;br /&gt;
 \(c_1\mathbf{v_1} + c_2\mathbf{v_2} + \cdots + c_p\mathbf{v_p}\)&lt;/p&gt;</content><author><name>Eunbin Park</name></author><category term="Linear_Algebra" /><summary type="html">Vectors in \(\mathbb{R}^2\) → 실수 2차원 공간 \(\mathbf{u} = \left[\begin{matrix}3 \\ -1 \\\end{matrix}\right], \mathbf{v} = \left[\begin{matrix}0.2 \\ 0.3 \\\end{matrix}\right], \mathbf{u} = \left[\begin{matrix}w_1 \\ w_2 \\\end{matrix}\right]\) \(\vec{u} = (3, -1), \vec{v} = (0.2, 0.3), \vec{w} = (w_1, w_2)\)</summary></entry><entry><title type="html">Ch12. Row Reduction and Echelon Forms</title><link href="http://localhost:4000/linear_algebra/2021/01/12/ch12-Row-Reduction-and-Echelon-Forms/" rel="alternate" type="text/html" title="Ch12. Row Reduction and Echelon Forms" /><published>2021-01-12T00:00:00+09:00</published><updated>2021-01-12T00:00:00+09:00</updated><id>http://localhost:4000/linear_algebra/2021/01/12/ch12-Row-Reduction-and-Echelon-Forms</id><content type="html" xml:base="http://localhost:4000/linear_algebra/2021/01/12/ch12-Row-Reduction-and-Echelon-Forms/">&lt;p&gt;&lt;strong&gt;A leading Entry of row&lt;/strong&gt; : the LEFTMOST nonzero entry.&lt;/p&gt;
&lt;h3 id=&quot;echelon-form&quot;&gt;Echelon Form&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;All nonzero rows are above any rows of all zeros&lt;/li&gt;
  &lt;li&gt;Each leading entry of a row is in column to the right of the leading entry of the row above it&lt;/li&gt;
  &lt;li&gt;The leading entry in each nonzero row is 1&lt;/li&gt;
  &lt;li&gt;Each leading 1 is the only nonzero entry in its column&lt;/li&gt;
&lt;/ol&gt;

\[1 → \left[
\begin{matrix}
\bullet &amp;amp; * &amp;amp; * &amp;amp; * \\
0 &amp;amp; \bullet &amp;amp; * &amp;amp; * \\
0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\
0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\
\end{matrix}
\right]        
  2 → \left[
\begin{matrix}
\bullet &amp;amp; * &amp;amp; * &amp;amp; * \\
0 &amp;amp; \bullet &amp;amp; * &amp;amp; * \\
0 &amp;amp; 0 &amp;amp; \bullet &amp;amp; * \\
0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \bullet \\
\end{matrix}
\right]\]

&lt;h4 id=&quot;-theorem-1-uniqueness-of-the-reduced-echelon-form&quot;&gt;📖 Theorem 1. Uniqueness of the Reduced Echelon Form&lt;/h4&gt;
&lt;p&gt;Each matrix is row equivalent to one and only one reduced echelon matrix&lt;/p&gt;

&lt;h3 id=&quot;row-reduction-algorithm&quot;&gt;Row Reduction Algorithm&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Begin with the leftmost nonzero column&lt;/li&gt;
  &lt;li&gt;Select a nonzero entry in the pivot column as a pivot. If necessary, Interchange rows to move this entry into the pivot position.&lt;/li&gt;
  &lt;li&gt;Row replacement to create zeros in all positions below the pivot.&lt;/li&gt;
  &lt;li&gt;Apply steps 1-3 to the sub matrix that remain. The combination of steps 1-4 is called forward phase echelon form&lt;/li&gt;
  &lt;li&gt;Beginning with the rightmost polio and working upward and to the left, created zeros above each pivot. If a pivot is not 1, make it 1 by a scaling operation.
    &lt;ul&gt;
      &lt;li&gt;Called backward phase reduced echelon form&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;solution-of-linear-systems&quot;&gt;Solution of linear systems&lt;/h3&gt;
&lt;p&gt;\(\left[
\begin{matrix}
1 &amp;amp; 0 &amp;amp; -5 &amp;amp; 1 \\
0 &amp;amp; 1 &amp;amp; 1 &amp;amp; 4 \\
0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\
\end{matrix}
\right]\) &lt;br /&gt;
일 때,&lt;br /&gt;
\(x_1 - 5x_3 = 1 \\
x_2 + x_3 = 4 \\
0 = 0 \\
\left[
\begin{matrix}
6 \\3 \\1 \\
\end{matrix}
\right]
\left[
\begin{matrix}
-9 \\
6 \\
-2 \\
\end{matrix}
\right]  \cdots\) &lt;br /&gt;
해가 무한대가 되며,  General Solution 은 아래와 같다.&lt;br /&gt;
\(\begin{cases}
x_1 = 1 + 5x_3 &amp;amp; \mbox{basic / leading  variables} \\
x_2 = 4 - x_3 &amp;amp; \mbox{basic / leading variables} \\
x_3 \mbox{ is free} &amp;amp; \mbox{free variable}
\end{cases}\)&lt;/p&gt;

&lt;h4 id=&quot;-theorem-2-existence-and-uniqueness-theorem&quot;&gt;📖 Theorem 2. Existence and Uniqueness Theorem&lt;/h4&gt;
&lt;p&gt;A linear system is consistent if and only if the rightmost column of the augmented matrix is not a pivot column - that is, if and only if and echelon form of the augmented matrix has no row of the forms.  &lt;br /&gt;
\(\left[ \begin{matrix} 0 &amp;amp; \cdots &amp;amp;  0 &amp;amp; b \end{matrix} \right]\) with \(b\) is nonzero.  &lt;br /&gt;
If a linear system is consistent, then the solution set contains either (i) a unique solution, when there are no free variables, or (ii) infinitely many solutions, when there is at least one free variables.&lt;/p&gt;</content><author><name>Eunbin Park</name></author><category term="Linear_Algebra" /><summary type="html">A leading Entry of row : the LEFTMOST nonzero entry. Echelon Form All nonzero rows are above any rows of all zeros Each leading entry of a row is in column to the right of the leading entry of the row above it The leading entry in each nonzero row is 1 Each leading 1 is the only nonzero entry in its column</summary></entry><entry><title type="html">Ch11. Linear Equations in Linear Algebra</title><link href="http://localhost:4000/linear_algebra/2021/01/12/ch11-Linear-Equations-in-Linear-Algebra/" rel="alternate" type="text/html" title="Ch11. Linear Equations in Linear Algebra" /><published>2021-01-12T00:00:00+09:00</published><updated>2021-01-12T00:00:00+09:00</updated><id>http://localhost:4000/linear_algebra/2021/01/12/ch11-Linear-Equations-in-Linear-Algebra</id><content type="html" xml:base="http://localhost:4000/linear_algebra/2021/01/12/ch11-Linear-Equations-in-Linear-Algebra/">&lt;p&gt;&lt;strong&gt;A system of linear equations&lt;/strong&gt; : A collection of one or more linear equations &lt;br /&gt;
&lt;strong&gt;Solution Set&lt;/strong&gt; : The Set of all possible solutions of the linear system&lt;br /&gt;
	→ Two linear systems are called &lt;strong&gt;equivalent&lt;/strong&gt; if they have the same solution set.&lt;/p&gt;

&lt;p&gt;A system of linear equations has either&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;No Solution ( &lt;strong&gt;INCONSISTENT&lt;/strong&gt; )&lt;/li&gt;
  &lt;li&gt;Exactly one Solution ( &lt;strong&gt;CONSISTENT&lt;/strong&gt; )&lt;/li&gt;
  &lt;li&gt;Infinitely Many Solutions ( &lt;strong&gt;CONSISTENT&lt;/strong&gt; )&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;matrix-notation&quot;&gt;Matrix Notation&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;3 rows x 3 columns =&amp;gt; Coefficient Matrix ( 3 \(\times\) 3 ) : 계수 행렬&lt;/li&gt;
  &lt;li&gt;3 rows x 4 columns =&amp;gt; Augmented Matrix ( 3 \(\times\) 4  ) : 확대 행렬
    &lt;ul&gt;
      &lt;li&gt;첨가 행렬은 계수 행렬과 상수항들의 행렬을 맞붙여 얻는 행렬&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;augmented-matrix&quot;&gt;Augmented Matrix&lt;/h3&gt;
&lt;p&gt;\(A = \left[
\begin{matrix}
1 &amp;amp; 2 &amp;amp; 3 \\
4 &amp;amp; 7 &amp;amp; 4 \\
1 &amp;amp; 6 &amp;amp; 8 \\
\end{matrix}
\right] , B = \left[
\begin{matrix}
1 \\
4 \\
1 \\
\end{matrix}
\right]\)
가 있을 때, Augmented Matrix 는
\(\left[
\begin{matrix}
1 &amp;amp; 2 &amp;amp; 3  &amp;amp; 1\\
4 &amp;amp; 7 &amp;amp; 4 &amp;amp; 4 \\
1 &amp;amp; 6 &amp;amp; 8 &amp;amp; 1 \\
\end{matrix}
\right]\)
이다.&lt;/p&gt;

&lt;h3 id=&quot;elementary-row-operations&quot;&gt;Elementary row operations&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Replacement&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Interchange&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Scaling&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Two matrices are &lt;strong&gt;Row Equivalent&lt;/strong&gt; If there is a sequence of elementary row operations that transforms one matrix into the other.&lt;br /&gt;
If the &lt;strong&gt;augmented&lt;/strong&gt; matrices of the linear systems are &lt;strong&gt;row equivalent&lt;/strong&gt;, then the two systems have the &lt;strong&gt;same solution set&lt;/strong&gt;.&lt;/p&gt;</content><author><name>Eunbin Park</name></author><category term="Linear_Algebra" /><summary type="html">A system of linear equations : A collection of one or more linear equations Solution Set : The Set of all possible solutions of the linear system → Two linear systems are called equivalent if they have the same solution set.</summary></entry><entry><title type="html">프로그래머스 크롤링</title><link href="http://localhost:4000/algorithm/2021/01/12/programmars-crawling/" rel="alternate" type="text/html" title="프로그래머스 크롤링" /><published>2021-01-12T00:00:00+09:00</published><updated>2021-01-12T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/2021/01/12/programmars-crawling</id><content type="html" xml:base="http://localhost:4000/algorithm/2021/01/12/programmars-crawling/">&lt;p&gt;21년 1월부터 연구실에선 매일 오전 9시 30분부터 한 시간동안 파이썬 알고리즘 문제를 푼다.&lt;/p&gt;

&lt;p&gt;교수님께서 한 사람씩 돌아가면서 문제를 가져오라고 지정하셨고, 한 사이클이 지나고부터는 오늘은 누군지 겁나게~ 헷갈리기 시작했고, 누가 스프린트를 빠진다고 하면 그때부터 불안했다. 나만 기억 못하나 싶을 정도로 무덤덤한 사람들 … ㅎ 어떤 날은 서로 자기인 줄 알았다며 문제를 두 명이 들고온 적도 있었는데. 
이게 내 성격이긴 한데…   정리되지 않은 상태…  나쁘게 말하면 아노미 상태ㅋㅋㅋㅋ가 싫다. 시간을 조금만 투자하면 잘 정돈된 상태를 만들 수 있는데… 그 상황에 내가 포함되어 있다면 발벗고 나서야지 뭐… 목마른 사람이 우물 파니까&lt;/p&gt;

&lt;p&gt;그냥 크롤링 코드를 짰다. 프로그래머스 사이트가 SPA 인지 뭔지 아무튼 url로 반응하는게 아니었고, 모든 문제가 모든 언어로 풀 수 있는 건 아니었다. 특정 레벨의 특정 언어를 가져와야 했기 때문에 더럽게 귀찮아보였지만… 그래도 손가락을 뽑았으면 코드 한 줄이라도 썰어야 대장부니까 ^^&lt;/p&gt;

&lt;p&gt;뷰티풀솝 익숙해지려고 이걸로 이것저것 하려다 시간만 왕창 잡아먹고 결국 셀레니움으로 …했다.&lt;/p&gt;

&lt;p&gt;여기에 파일 첨부는 어떻게 하는 걸까…?&lt;/p&gt;</content><author><name>Eunbin Park</name></author><category term="Algorithm" /><category term="Algorithm" /><category term="Crawling" /><summary type="html">21년 1월부터 연구실에선 매일 오전 9시 30분부터 한 시간동안 파이썬 알고리즘 문제를 푼다.</summary></entry><entry><title type="html">THEOREMs</title><link href="http://localhost:4000/linear_algebra/2021/01/12/ch19-Theorems/" rel="alternate" type="text/html" title="THEOREMs" /><published>2021-01-12T00:00:00+09:00</published><updated>2021-01-12T00:00:00+09:00</updated><id>http://localhost:4000/linear_algebra/2021/01/12/ch19-Theorems</id><content type="html" xml:base="http://localhost:4000/linear_algebra/2021/01/12/ch19-Theorems/">&lt;h2 id=&quot;-theorem-1&quot;&gt;📖 Theorem 1.&lt;/h2&gt;
&lt;p&gt;Uniqueness of the Reduced Echelon Form
Each matrix is row equivalent to one and only one reduced echelon matrix&lt;/p&gt;

&lt;h2 id=&quot;-theorem-2&quot;&gt;📖 Theorem 2.&lt;/h2&gt;

&lt;h2 id=&quot;-theorem-3&quot;&gt;📖 Theorem 3.&lt;/h2&gt;
&lt;p&gt;\(A\) is \(m \times n\) matrix, with columns \(a_1, \cdots, a_n   \mathbf{b} \mbox{ is in }\mathbb{R}^m\)&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Matrix Equation : \(A\mathbf{x} = \mathbf{b}\)&lt;/li&gt;
  &lt;li&gt;Vector Equation : \(x_1\mathbf{a_1} + x_2\mathbf{a_2} + \cdots + x_p\mathbf{a_p} = \mathbb{b}\)&lt;/li&gt;
  &lt;li&gt;Augmented Matrix  : \(\left[ \mathbf{a_1}, \mathbf{a_2}, \cdots, \mathbf{a_n} \mathbf{b}\right]\)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Have the same solution set!&lt;/p&gt;

&lt;h2 id=&quot;-theorem-4&quot;&gt;📖 Theorem 4.&lt;/h2&gt;
&lt;p&gt;The followings are all true of all false:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;For each b in R^m, Ax = b  has a solution&lt;/li&gt;
  &lt;li&gt;Each b in R^m is a linear combination of the columns of A&lt;/li&gt;
  &lt;li&gt;The columns of A spanR^m&lt;/li&gt;
  &lt;li&gt;A has a pivot position in every row&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;-theorem-5&quot;&gt;📖 Theorem 5.&lt;/h2&gt;
&lt;p&gt;If A is an m x n matrix, u and v are vectors in R^m,  And c is a scalar, then;  &lt;br /&gt;
A(u + v) = Au + Av;&lt;br /&gt;
A(cu) = c(Au)&lt;/p&gt;</content><author><name>Eunbin Park</name></author><category term="Linear_Algebra" /><summary type="html">📖 Theorem 1. Uniqueness of the Reduced Echelon Form Each matrix is row equivalent to one and only one reduced echelon matrix</summary></entry><entry><title type="html">Ch18. The Matrix of a Linear Transformation</title><link href="http://localhost:4000/linear_algebra/2021/01/12/ch18-The-Matrix-of-a-Linear-Transformation/" rel="alternate" type="text/html" title="Ch18. The Matrix of a Linear Transformation" /><published>2021-01-12T00:00:00+09:00</published><updated>2021-01-12T00:00:00+09:00</updated><id>http://localhost:4000/linear_algebra/2021/01/12/ch18-The-Matrix-of-a-Linear-Transformation</id><content type="html" xml:base="http://localhost:4000/linear_algebra/2021/01/12/ch18-The-Matrix-of-a-Linear-Transformation/">&lt;h4 id=&quot;-theorem-10&quot;&gt;📖 Theorem 10.&lt;/h4&gt;
&lt;p&gt;Let \(T : \mathbb{R^n} \to \mathbb{R^m}\) be a linear transformation. Then there exists a unique matrix A such that&lt;br /&gt;
\(T(\mathbf{x}) = A\mathbf{x} \mbox{ for all }\mathbf{x} \mbox{ in }\mathbb{R^n}\)&lt;br /&gt;
In fact, \(A\) is the \(m \times n\) matrix whose j-th column is the vector \(T(e_j)\), where \(e_j\) is the j-th column of the identity matrix in \(\mathbb{R^n}\):&lt;br /&gt;
\(A = \left[ T(e_1) \cdots T(e_n) \right]\)&lt;br /&gt;
Standard matrix for the linear transformation T&lt;/p&gt;

&lt;h3 id=&quot;onto&quot;&gt;Onto&lt;/h3&gt;
&lt;p&gt;A mapping \(T: \mathbb{R^n} \to \mathbb{R^m}\) is said to be &lt;strong&gt;onto \(\mathbb{R^m}\)&lt;/strong&gt; if each \(\mathbf{b}\) in \(\mathbb{R^m}\) is the image of at least one \(\mathbf{x}\) in \(\mathbb{R^n}\)&lt;/p&gt;

&lt;h3 id=&quot;one-to-one&quot;&gt;One-to-one&lt;/h3&gt;
&lt;p&gt;A mapping  \(T: \mathbb{R^n} \to \mathbb{R^m}\) is said to be &lt;strong&gt;one-to-one&lt;/strong&gt; if each \(\mathbf{b}\) in \(\mathbb{R^m}\) is the image of at most one \(\mathbf{x}\) in \(\mathbb{R^n}\)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;여러 개의 벡터에서 같은 이미지로 도달할 때 : one-to-one이 아님&lt;/li&gt;
  &lt;li&gt;1대1 대응 : one-to-one&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-theorem-11&quot;&gt;📖 Theorem 11.&lt;/h4&gt;
&lt;p&gt;Let \(T: \mathbb{R^n} \to \mathbb{R^m}\) be a linear transformation.&lt;br /&gt;
Then \(T\) is &lt;strong&gt;one-to-one&lt;/strong&gt; if and only if the equation \(T(\mathbf{x}) = 0\)  has only trivial solution.&lt;br /&gt;
\(T(0) = T(0\mathbf{0}) = 0T(\mathbf{0})\\
T(\mathbf{u} = \mathbf{b}  T(\mathbf{v} = b)\\
T(\mathbf{u} - \mathbf{v}) = T(\mathbf{u}) - T(\mathbf{v}) = 0\\
\mathbf{u} - \mathbf{v} \ne 0\)&lt;br /&gt;
\(T(\mathbf{x}) = 0\) has more than one solution&lt;/p&gt;

&lt;h4 id=&quot;-theorem-12&quot;&gt;📖 Theorem 12.&lt;/h4&gt;
&lt;p&gt;Let \(T: \mathbb{R^n} \to \mathbb{R^m}\) be a linear transformation and let \(A\) be the standard matrix for \(T\).  &lt;br /&gt;
Then \(T\) maps &lt;strong&gt;\(\mathbb{R^n} \mbox{onto} \mathbb{R^m}\)&lt;/strong&gt; if and only if the &lt;strong&gt;columns of \(A\) span \(\mathbb{R^m}\)&lt;/strong&gt;   &lt;br /&gt;
\(T\) is &lt;strong&gt;one-to-one&lt;/strong&gt; if and only if the columns of \(A\) are &lt;strong&gt;linearly independent&lt;/strong&gt;. &lt;br /&gt;
	one-to-one → only trivial → independent&lt;/p&gt;</content><author><name>Eunbin Park</name></author><category term="Linear_Algebra" /><summary type="html">📖 Theorem 10. Let \(T : \mathbb{R^n} \to \mathbb{R^m}\) be a linear transformation. Then there exists a unique matrix A such that \(T(\mathbf{x}) = A\mathbf{x} \mbox{ for all }\mathbf{x} \mbox{ in }\mathbb{R^n}\) In fact, \(A\) is the \(m \times n\) matrix whose j-th column is the vector \(T(e_j)\), where \(e_j\) is the j-th column of the identity matrix in \(\mathbb{R^n}\): \(A = \left[ T(e_1) \cdots T(e_n) \right]\) Standard matrix for the linear transformation T</summary></entry></feed>